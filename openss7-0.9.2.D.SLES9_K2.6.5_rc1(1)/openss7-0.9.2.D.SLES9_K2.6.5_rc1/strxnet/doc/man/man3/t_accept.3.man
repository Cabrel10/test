'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) t_accept.3.man,v 0.9.2.7 2006/04/05 09:44:44 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:44 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" t_accept.3.man,v
.\" Revision 0.9.2.7  2006/04/05 09:44:44  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strxnet.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strxnet.macros
.\"
.\"
.\"
.\"
.TH T_ACCEPT 3 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Library Calls"
.\"
.\"
.SH NAME
.B t_accept
\- accept a connection request
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <xti.h>
.HP 8
.BI "int t_accept(int" fd ", int " resfd ", struct t_call *" call );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I fd
the transport endpoint upon which a connection indication was received.
.TP
.I resfd
the transport endpoint upon which to accept the connection.
.TP
.I call
a pointer to a 
.B t_call
structure containing information about the responding endpoint and any data to
be transferred in response.
.\"
.\"
.SH DESCRIPTION
.PP
The
.I fd
argument is an integer file descriptor specifying the stream upon which a
previous connection indication was received with
.BR t_listen (3),
and for which the connection indication is to now be accepted.
.PP
The
.I resfd
argument is an integer file descriptor specifying the stream upon which to
accept the transport connection.
.I resfd
can be the same as
.I fd
or different.
When
.I resfd
is different from
.IR fd ,
the caller specifies that the connection is to be accepted on the stream
associated with
.IR resfd .
When
.I resfd
is different from
.IR fd ,
the stream associated with
.I resfd
must be an XTI/TLI
.[
XTI
.]
.[
TPI Revision 2.0.0
.]
.[
XNS
.]
stream on the same transport provider that is either in the
.B T_UNBND
state, or is in the
.B T_IDLE
state and bound to the same address as the responding address.
When in the
.B T_UNBND
state,
.I resfd
will be bound to the address specified in
.IR call->addr .
.PP
The
.I call
argument is a pointer to a
.B t_call
structure,
specifying the responding address,
.IR addr ,
the response options,
.IR opt ,
and any response user data,
.IR udata .
The
.B t_call
structure is formatted as follows:
.sp
.nf
\fC\s-1\
struct t_call {
        struct netbuf addr;     /* address              */
        struct netbuf opt;      /* options              */
        struct netbuf udata;    /* data                 */
        int sequence;           /* identification       */
};
\fR\s+1
.fi
.PP
The
.IR addr ", " opt " and " udata
members of the
.B t_call
structure are
.BR netbuf (3)
structures, each formatted as follows:
.sp
.nf
\fC\s-1\
struct netbuf {
        unsigned int maxlen;    /* max length           */
        unsigned int len;       /* current length       */
        char *buf;              /* data                 */
};
\fR\s+1
.fi
.TP
.I addr
A
.BR netbuf (3)
structure that specifies the responding address.  The reponding address is the
address accepting the connection.
.I call->addr.maxlen
is set to zero (0) by the caller and ignored by the provider.
.I call->addr.len
is set to the length of the responding address.  If the length of the
responding address is zero (0) then the destination address of the connection
indication or the bound address of the responding transport endpoint,
.IR resfd ,
is used as the responding address.
.I call->addr.buf
points to the responding address.
.TP
.I opt
A
.BR netbuf (3)
structure that specifies the responding options.  The responding options can be
both end-to-end and local transport options.
.I call->opt.maxlen
is set to zero (0) by the caller and is ignored by the provider.
.I call->opt.len
is set to the length of the options.  If the length of the responding options
is zero (0) no options are specified.
.I call->opt.buf
points to the options.
.TP
.I udata
A
.BR netbuf (3)
structure that specifies the data to send with the connection
response.
.I call->udata.maxlen
is set to zero (0) by the caller and is ignored by the provider.
.I call->udata.len
is set to the length of the data.  If the length of the data is zero (0) no
data is included in the response message.
.I call->udata.buf
points to the data.
.TP
.I sequence
specifies a sequence number of the connection indication that is to be
accepted.  This value was returned by a previous call to
.BR t_listen (3).
.\"
.\"
.SH OPTIONS
.PP
Options in the
.I call->opt
buffer is formatted as described in
.BR t_optmgmt(3).
.PP
Illegal options (where the
.I t_opthdr.len
exceeds the remaining size of the option buffer, or where the option value is
illegal) cause
.BR t_accept ()
to either faile with
.IR t_errno (3)
set to
.RB [ TBADOPT ],
or the connection establishment to faile at a later stage, depending on when
the implementation detects the illegal option.  If multiple options are passed
in
.IR call->opt ,
and one of them is illegal, the call fails.  It is possible, however, that
some or all of the submitted legal options were successfully negotiated.  Use
the
.B T_CURRENT
management flag to
.BR t_optmgmt (3)
to establish which options were successful.
.PP
Options specified in
.I call->opt
can address multiple option levels.  A legal option is ignored by
.BR t_accept ()
if it is for an option level unknown to the transport provider.  A legal
option is ignored by
.BR t_accept() if it is for an option name unsupported by (unknown to) the
transport provider.
.PP
If a proposed value is an absolute requirement and the negotiated value is
rejected, the connection establishment aborts and a
.B T_DISCONNECT
event occurs.  When multiple options are provided and one of them is rejected
and the connection establishment fails, one or all of the options successfully
negotiated before failure may retain their negotiated values.  Use
.BR t_optmgmt (3)
with the
.B T_CURRENT
flag to determine which options retain their negotiated values.
.PP
If a proposed value is not an absolute requirement, the negotiated value will
be used.  If the option is not supported, it is quietly ignored.
.PP
.BR t_accept ()
completes the negotiation of all options with end-to-end significance.
Options not explicitly negotiated by
.I call->opt
are taken from an internal option buffer used by the transport provider that
contains the previously negotiated values or default values for the implicit
options of end-to-end significance.
.PP
If a transport user responsds to negotiation with a read-only option, or a
non-privileged user responds with illegal access toa  privileged option,
.BR t_accept ()
will either fail with
.BR [ TACCES ],
or the connection establishment aborts and a
.B T_DISCONNECT
event occurs.
.\"
.\"
.SH CAVEATS
.PP
.BR t_accept ()
is only valid in state
.B T_INCON
with an outstanding number of connection indications greater than zero (0).
.PP
.BR t_accept ()
is only valid for transport service providers of service type
.BR T_COTS " or " T_COTS_ORD .
.\"
.\"
.SH "RETURN VALUE"
.PP
Upon success,
.BR t_accept ()
returns zero (0).
Upon failure,
.BR t_accept ()
returns -1 and sets
.IR t_errno (3)
to an appropriate error number.
.\"
.\"
.SH ERRORS
.PP
When
.BR t_accept ()
fails, it returns -1 and sets
.IR t_errno (3)
to an appropriate error number as follows:
.TP \w'[TNOTSUPPORT]\(em'u
.RB [ TACCES ]
The caller did not have sufficient permissions to accept a connection on the
.I resfd
file descriptor, did not have sufficient permissions to use the responding
address specified in
.IR call->addr ,
or did not have sufficient permissions to use the responding options specified
in
.IR call->opt .
.TP
.RB [ TBADADDR ]
The address specified was of an invalid format or contained invalid information.
This error is returned from the transport service provider.
.TP
.RB [ TBADDATA ]
The amount of data specified for the call and underlying transport service
provider was invalid (i.e. was outside the protocol limits).  See
\fBt_getinfo\fR(3) and \fBt_open\fR(3) for more information.
.TP
.RB [ TBADF ]
The
.IR fd " or " resfd
file descriptor was invalid or does not refer to a transport endpoint known to
the XTI/TLI library.  See
.BR t_open (3)
and
.BR t_sync (3)
for additional information.
.TP
.RB [ TBADOPT ]
The options specified were of an invalid format or contained invalid information.
This error is returned from the transport service provider.
See
.BR t_optmgmt (3)
for more information on option formats.
.TP
.RB [ TBADSEQ ]
The
.I sequence
number provided was invalid, or is not associated with an outstanding
connection indication.
.TP
.RB [ TINDOUT ]
The file descriptor
.IR resfd " (==" fd )
has outstanding connection indications.
.TP
.RB [ TLOOK ]
An asynchronous event occured before the call could complete.  See \fBt_look\fR(3) for more information.
.TP
.RB [ TNOTSUPPORT ]
The call requires the use of a TLI primitive not supported by the underlying transport provider.
.TP
.RB [ TOUTSTATE ]
The call was issued with the interface in an incorrect state.
.TP
.RB [ TPROTO ]
A protocol error occured between the XTI/TLI library and the underlying transport provider.
.TP
.RB [ TPROVMISMATCH ]
The transport provider associated with
.I resfd
is not the same as the transport provider associated with
.IR fd .
.TP
.RB [ TRESADDR ]
The file descriptor
.I resfd
was bound to a different address than the responding address.
.TP
.RB [ TRESQLEN ]
The file descriptor
.I resfd
is listening (i.e. it was bound with a
.I qlen
> 0).
.TP
.RB [ TSYSERR ]
A \fBLinux\fR system error occured and the \fBLinux\fR error number is set in \fIerrno\fR(3).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR netbuf (3),
.BR t_listen (3).
.\"
.\"
.SH "BUGS"
.PP
.BR t_accept ()
has no known bugs.
.BR t_accept ()
has been tested with the
.BR test-xnet (8)
and
.BR test-xnet_thr (8)
conformance test suites.
.\"
.\"
.SH COMPATIBILITY
.PP
The XTI/TLI library functions are compatible with 
SVR4.2,
.[
svr42
.]
XNS 5.2,
.[
xns
.]
SUSv2.
.[
susv2
.]
Compatibility is tested using the
.BR test-xnet (8)
and
.BR test-xnet_thr (8)
test case executables and the
.I @PACKAGE_TITLE@
.B autotest
test suite.
.\"
.\"
.SH "CONFORMING TO"
.PP
XTI/TLI,
.[
XTI
.]
TPI,
.[
TPI Revision 2.0.0
.]
XPG5,
XNS 5.2,
.[
xns
.]
SUSv2.
.[
susv2
.]
Conformance is tested using the
.BR test-xnet (8)
and
.BR test-xnet_thr (8)
test case executables and the
.I @PACKAGE_TITLE@
.B autotest
test suite.
.\"
.\"
.SH HISTORY
.PP
.B t_accept
first appeared in SVR4.2.
.[
svr42
.]
.\"
.\"
.SH VERSIONS
.PP
This manpage was written for the OpenSS7 XTI/TLI Library.
.\"
.\"
.[
$LIST$
.]
.T4
