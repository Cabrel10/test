'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) pipemod.4.man,v 0.9.2.12 2006/04/05 09:43:45 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:43:45 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" pipemod.4.man,v
.\" Revision 0.9.2.12  2006/04/05 09:43:45  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH PIPEMOD 4 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Modules"
.\"
.\"
.SH NAME
.B pipemod
\- \fISTREAMS\fR-based pipe module
.\"
.\"
.SH SYNOPSIS
.PP
.HP 8
.BI "int " pfds[2] ;
.HP 8
.BI "int pipe(" pfds );
.HP 8
.BI "int ioctl(" pfds[0] ", " I_PUSH ", " \*(lqpipemod\*(rq );
.\"
.\"
.SH DESCRIPTION
.PP
.B pipemod
is a
.I STREAMS
module that is pushed over one end of a
.IR STREAMS -based
bidirectional
.BR pipe (4)
to reverse the sense of the
.BR M_FLUSH (9)
command.  (See the
.IR I_FLUSH (7)
command to
.BR ioctl (2s)
as described in
.BR streamio (7)).
.PP
.IR STREAMS -based
pipes have a twist in the STREAM at their midpoints.  At their midpoints, the read-side STREAM
becomes the write-side STREAM and visa versa.
As an
.BR M_FLUSH (9)
message traverses the twist, the sense of read-side and write-side must be
reversed within the message (as indicated by the
.BR FLUSHW
and
.BR FLUSHR
flags).
.PP
The reversal of flush flag sense across the twist is not so problematic for the pipe ends (STREAM
heads), as described under
.RI \(lq USAGE ,\(rq
below; however, when modules are pushed on either pipe end, all
.BR M_FLUSH (9)
messages received on the module read-queue will have a flag reversal, causing the module to flush
the wrong side of the STREAM if only
.BR FLUSHR " or only " FLUSHW
are specified.
.PP
.B pipemod
corrects this problem for pushed modules by swapping the read and write side flush flags across the
module.
.B pipemod
should be pushed over one end of the pipe before any other modules are pushed so that the reversal
is performed accross the twist at the midpoint in a
.IR STREAMS -based
.BR pipe (4).
.\"
.\"
.SH USAGE
.PP
.B pipemod
should be pushed over one end of a newly created
.IR STREAMS -based
.BR pipe (4),
before any other modules are pushed on either end
of the pipe.  This ensures that
.B pipemod
sits at the midpoint of the pipe, the necessary position for reversing the
sense of the
.BR M_FLUSH (9)
message flags.
.PP
On a bare
.IR STREAMS -based
.BR pipe (4),
with no modules pushed, issuing the
.IR I_FLUSH (7)
command to
.BR ioctl (2s)
with the
.BR FLUSHR
flag will flush the read-side queues at both STREAM heads (pipe ends);
.BR FLUSHW ,
the write-side queues.  Because the STREAM head does not queue on the write-side queue,
.B FLUSHR
has the same effect as
.BR FLUSHRW ,
and
.B FLUSHW
has no effect.
When
.B pipemod
is pushed on a bare pipe,
.B FLUSHR
flushes only the near read-side queue and
.B FLUSHW
flushes only the far read-side queue.  Due to this difference in the STREAM head flushing behaviour
when
.BR pipemod (4)
is pushed or not, it is good practice to always flush pipes with
.BR FLUSHRW .
.\"
.\"
.SH NOTICES
.PP
It is not necessary to use
.B pipemod
if all flushes flush both read and write queues at the same time, or if the
.I I_FLUSH
command is never issued on the pipe for one side of the STREAM, or the
.BR M_FLUSH (9)
command is never send by a pushed module for one side of the STREAM.
.PP
Note that the STREAM head normally flushes the STREAM on final close of the STREAM.  This flush is
performed on both the read and write side of the STREAM at the same time, so the STREAM head does
not require
.BR pipemod .
.PP
Note that proper canonical
.BR M_FLUSH (9)
processing must be performed by all modules and drivers.
See
.BR M_FLUSH (9)
for details.
.\"
.\"
.SH EXAMPLES
.PP
Following is an example of the
.B s_pipe
function which generates a
.IR STREAMS -based
software pipe and pushes the
.B pipemod
module on one end:
.nf
\fC\s-2
int s_pipe(int fds[2])
{
        int err;
        if ((err = pipe(fds)) != 0)
                return (err);
        if ((err = ioctl(fds[0], I_PUSH, "pipemod")) < 0) {
                close(fds[0]);
                close(fds[1]);
                return (err);
        }
        return (0);
}
\s+2\fP
.fi
.\"
.\"
.SH MODULES
.PP
.B pipemod
is a
.I STREAMS
module named
.IR \*(lqpipemod\*(rq .
.\"
.\"
.SH "SEE ALSO"
.PP
.BR pipe (2s),
.BR spx (4),
.BR pipe (4),
.BR I_FLUSH (7),
.BR M_FLUSH (9),
.BR ioctl (2s),
.BR streamio (7).
.\"
.\"
.SH BUGS
.PP
.B pipemod
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.B pipemod
is compatible with
.IR "SVR 4.2" ,
.[
svr42
.]
and implementations based on
.IR "SVR 4.2" ,
including
.IR AIX \(rg,
.IR HP-UX \(rg,
.IR IRIX \(rg,
.IR LiS ,
.IR MacOT \(rg,
.IR OSF/1 \(rg,
.IR Solaris \(rg,
.IR SUPER-UX \(rg,
.IR UnixWare \(rg,
.IR UXP/V \(rg,
with the following compatibility considerations:
.IP \(em \w'\(em\(em'u
Not all implementations of
.I SVR 4.2 STREAMS
support
.IR STREAMS -based
pipes.  Those that do, provide the
.BR pipemod (4)
module.
.IP \(em
.IP \(em
.IP \(em
.IP \(em
.IP \(em
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
SVR 4.2,
.[
svr42
.]
SVID,
.[
svid
.]
XID,
.[
xbd5
.]
SUSv2,
.[
susv2
.]
SUSv3.
.[
susv3
.]
Conformance is verified using the
.BR test-pipemod (8)
verification test suite.
.\"
.\"
.SH HISTORY
.PP
.B pipemod
first appeared in SVR 4.
.[
svr4
.]
.\"
.\"
.[
$LIST$
.]
.TI
