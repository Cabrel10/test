# =============================================================================
# 
# @(#) Config.in,v OpenSS7-0_9_2_D_rc2(1.1.4.5) 2005/10/23 05:01:25
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified 2005/10/23 05:01:25 by brian
#
# =============================================================================

#
# Configuration file for STREAMS device drivers
#
# The built-in STREAMS drivers are configured in this file.  External
# binary packages are configured in /usr/src/linux/drivers/streams/pkg
# (see the Makefile in that directory and the one above it).
#
# Driver specifications
#
# multiple major numbers for a driver may be allocated two ways:
# . by explicitly requesting n-majors (see below)
# . by requesting an n-minors value large enough to require more than
#   one major number.
#
# strconf now supports allocating multiple major numbers, but
# not all drivers do.  It is only known to work for 'fifo' at this time.
#
#	name		prefix	major	n-minors  n-majors
driver	clone-drvr	clone_	*
driver	fifo		fifo_	*	512
driver	loop-around	sloop_	*
driver	mini-mux	mmux_	*
driver	printk		printk_	*
#driver	link-drvr	ldl_	*
driver	sad		sad_	*
#driver	ip_to_dlpi	ip2xinet	*
driver	mtdrv		mtdrv_	*
driver	nuls		nuls_	*
driver	echo		echo_	*
driver	mux		mux_	*
#
# this must be 30 for iBCS compatibility
#
#driver	inet		ss_	30
#
# Pushable module specifications
#
# Names must be a max of 8 chars for Solaris/UnixWare compatibility
#
#	name		prefix
module	pipemod		pipemod_
module	connld		connld_
module	relay		relay_
module	relay2		relay2_
module	bufmod		bufmod_
module	testmod		testmod_
module	nullmod		nullmod_
#module	ip_strms	ip_to_streams_
#module	timod		timod_
#module	tirdwr		tirdwr_

#
# Queue locking options
#
# 0 no locking
# 1 lock by individual queue semaphore
# 2 lock by queue pair semaphore
# 3 lock with global semaphore
#
#       type   name		option
qlock	driver loop-around	0
qlock	driver inet		0
qlock	driver mini-mux		2
qlock	module relay		0
qlock	module relay2		2

#
# Object name specifications
#
#	type	name		object name
objname driver	clone-drvr	clone
objname driver	fifo		fifo
objname driver	loop-around	loop
objname driver	mini-mux	minimux
objname driver	printk		printk
#objname driver	link-drvr	ldl
objname driver	sad		sad
#objname driver	ip_to_dlpi	ip_to_dlpi
objname driver	mtdrv		mtdrv
#objname driver	inet		inet
objname	driver	nuls		nuls
objname	driver	echo		echo
objname	driver	mux		mux
objname module	pipemod		pipemod
objname module	connld		connld
objname module	relay2		relay
objname	module	bufmod		bufmod
objname	module	testmod		testmod
objname	module	nullmod		nullmod
#objname module	ip_strms	ip_strm_mod
#objname module	timod		timod
#objname module	tirdwr		tirdwr

#
# Autopush specifications
#
# These are just stupid examples
#
#         driver          minor lastminor  modules
#autopush clone-drvr          1         0  relay
#autopush clone-drvr          2         5  relay2
#autopush link-drvr          -1         0  relay relay2
 autopush loop-around	      9		0  relay

#
# Loadable specifications
#
# Warning: ldl is GPL, don't change if linking with non-free code
#
# If you do not have a system with support for demand-loading modules
# into the kernel, you will have to load these modules by hand or in
# the startup scripts.
# If you do not use the loadable keyword at all, everything is linked
# into streams.o.
#
#loadable connld	too closely coupled with LiS to be loadable
#loadable sad	too closely coupled with LiS to be loadable
loadable pipemod
loadable bufmod
loadable testmod
loadable nullmod
#loadable timod
#loadable tirdwr
#loadable ldl
#loadable ip_to_dlpi
loadable mtdrv
#loadable inet
loadable    nuls
loadable    echo
loadable    mux

#
# Initialization specifications
#
initialize clone-drvr
initialize fifo
#initialize link-drvr
initialize loop-around

#
# Termination specifications
#
terminate fifo
terminate loop-around

#
# Node specifications
#
# Loop driver now makes its own nodes in its init routine as an 
# example of how to use lis_mknod.
#
# Use of the optional major-idx field is for multiple-major drivers, to
# specify an index, 0 to nmajors-1.  It requires a driver name in the
# major field
#
#	name	          type	perm	major		minor	     major-idx
#node	/dev/loop.1	     c	0644	loop-around	1
#node	/dev/loop.2	     c	*	loop-around	2
#node	/dev/loop_clone	     c	*	clone-drvr	loop-around
node	/dev/mux_clone	     c	*	clone-drvr	mini-mux
node	/dev/minimux.1	     c	*	mini-mux	1
node	/dev/minimux.2	     c	*	mini-mux	2
node	/dev/clone_drvr	     c	*	clone-drvr	0
#node	/dev/ldl	     c	*	clone-drvr	link-drvr
node	/dev/printk	     c	*	printk		0
node	/dev/sad	     c	*	clone-drvr	sad
node	/dev/fifo	     c	0666	clone-drvr	fifo
node	/dev/fifo.0          c	0666	fifo		0
node	/dev/nuls	     c	*	clone-drvr	nuls
node	/dev/echo	     c	*	clone-drvr	echo
node	/dev/mux	     c	*	clone-drvr	mux
#
# These are iBCS devices that should already be installed on a
# system that supports the iBCS.  The /dev entries are supposed
# to by symbolic links to the /dev/inet entries.  arp and rip
# are supposed to be symbolic links to udp
#
#node	/dev/ip		     c	0666	inet		32
#node	/dev/icmp	     c	0666	inet		33
#node	/dev/ggp	     c	0666	inet		34
#node	/dev/ipip	     c	0666	inet		35
#node	/dev/tcp	     c	0666	inet		36
#node	/dev/egp	     c	0666	inet		37
#node	/dev/pup	     c	0666	inet		38
#node	/dev/udp	     c	0666	inet		39
#node	/dev/idp	     c	0666	inet		40
#node	/dev/rawip	     c	0666	inet		41
#node	/dev/arp	     c	0666	inet		39
#node	/dev/rip	     c	0666	inet		39
#node	/dev/inet/ip	     c	0666	inet		32
#node	/dev/inet/icmp	     c	0666	inet		33
#node	/dev/inet/ggp	     c	0666	inet		34
#node	/dev/inet/ipip	     c	0666	inet		35
#node	/dev/inet/tcp	     c	0666	inet		36
#node	/dev/inet/egp	     c	0666	inet		37
#node	/dev/inet/pup	     c	0666	inet		38
#node	/dev/inet/udp	     c	0666	inet		39
#node	/dev/inet/idp	     c	0666	inet		40
#node	/dev/inet/rawip	     c	0666	inet		41
#node	/dev/inet/arp	     c	0666	inet		39
#node	/dev/inet/rip	     c	0666	inet		39
#node	/dev/ticots_ord	     c	0666	inet		42
#node	/dev/ticots	     c	0666	inet		43
#node	/dev/ticlts	     c	0666	inet		44

#
# Device specifications
#
#	drvr-name	unit  port nports share	IRQ     mem M-size DMA1 DMA2
#device	cdip		   0 0x310     16     S  10 0xD0000 0x4000
#device	cdip		   1     0      0     S  10       0      0

