'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) cmaj_add.9.man,v 0.9.2.6 2006/04/05 09:44:09 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:09 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" cmaj_add.9.man,v
.\" Revision 0.9.2.6  2006/04/05 09:44:09  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH DEVNODE\ HELPERS 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B cmaj_add, cmaj_del, cmaj_get, cmin_add, cmin_count, cmin_del, cmin_find, cmin_get
\- major/minor character device node helper functions
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.br
.B #include <sys/strsubr.h>
.HP
.BI "void cmaj_add(struct devnode *" cmaj ", struct cdevsw *" cdev ", major_t " major );
.PD 0
.HP
.BI "void cmaj_del(struct devnode *" cmaj ", struct cdevsw *" cdev );
.HP
.BI "struct devnode *cmaj_get(const struct cdevsw *" cdev ", major_t " major );
.PD
.HP
.BI "int cmin_count;
.HP
.BI "int cmin_add(struct devnode *" cmin ", struct cdevsw *" cdev ", minor_t " minor );
.PD 0
.HP
.BI "void cmin_del(struct devnode *" cmin ", struct cdevsw *" cdev );
.HP
.BI "struct devnode *cmin_get(const struct cdevsw *" cdev ", minor_t " minor );
.HP
.BI "struct devnode *cmin_find(const struct cdevsw *" cdev ", const char *" name );
.PD
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I cdev
a pointer to a
.BR cdevsw (9)
structure representing a
.I STREAMS
driver;
.PD 0
.TP
.I cmaj
a pointer to a
.BR devnode (9)
structure representing a major device node;
.TP
.I cmin
a pointer to a
.BR devnode (9)
structure representing a minor device node;
.TP
.I major
a major device number;
.TP
.I minor
a (extended) minor device number;
.TP
.I name
a minor device node name.
.PD
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS ,
.BR DDI/DKI ,
internal,
implementation extensions,
implementation specific.
.\"
.\"
.SH DESCRIPTION
.PP
.B "@PACKAGE_TITLE@"
.[
@PACKAGE_TITLE@
.]
implements the major device nodes and minor device nodes a little differently than other
implmenetations.  See
.BR dev_t (9)
and
.BR specfs (5).
There can be more than one external character major device number associated with each
.I STREAMS
driver.  Also, there may be a number of named minor devices associated with each driver.
These
.B "@PACKAGE_TITLE@"
implementation specific functions help manage the major and minor device nodes,
associated with instances of a 
.BR devnode (9)
structures,
for
.I STREAMS
drivers under
.BR "@PACKAGE_TITLE@" .
.\" ------------------------
.SS Major Device Node Functions
.\" ------------------------
.PP
.BR cmaj_add ()
adds the major
.BR devnode (9)
structure specified by
.I cmaj
to the
.I STREAMS
driver specified by
.I cdev 
against the major device number
.IR major .
.BR cmaj_add ()
does not fail because it does not allocate memory.
.\" ------------------------
.PP
.BR cmaj_del ()
deletes the major
.BR devnode (9)
structure specified by
.I cmaj
from the
.I STREAMS
driver specified by
.IR cdev .
.\" ------------------------
.PP
.BR cmaj_get ()
locates the major
.BR devnode (9)
structure with the major device number
.I major
for the
.I STREAMS
driver specified by
.IR cdev .
If no major
.BR devnode (9)
structure exists under
.I cdev
for
.IR major ,
.BR cmaj_get ()
returns
.BR NULL .
.\" ------------------------
.SS Minor Device Node Functions
.\" ------------------------
.PP
.B cmin_count
is the number of
.BR devnode (9)
structures allocated for minor device nodes.
.\" ------------------------
.PP
.BR cmin_add ()
adds the minor
.BR devnode (9)
structure specified by
.I cmin
to the
.I STREAMS
driver specified by
.I cdev
against the (extended) minor device number
.I minor
and returns zero
.RB ( 0 ),
or fails and returns a negative error number.
.\" ------------------------
.PP
.BR cmin_del ()
deletes the minor
.BR devnode (9)
structure specified by
.I cmin
from the
.I STREAMS
driver specified by
.IR cdev .
.\" ------------------------
.PP
.BR cmin_get ()
locates the minor
.BR devnode (9)
structure with the (extended) minor device number
.I minor
for the
.I STREAMS
driver specified by
.IR cdev .
If no minor
.BR devnode (9)
structure exists under
.I cdev
for
.IR minor ,
.BR cmin_get ()
returns
.BR NULL .
.\" ------------------------
.PP
.BR cmin_find ()
locates the minor
.BR devnode (9)
structure with the name
.IR name
for the
.I STREAMS
driver specified by
.IR cdev .
If no minor
.BR devnode (9)
structure exists under
.I cdev
for
.IR name ,
.BR cmin_find ()
returns
.BR NULL .
.\"
.\"
.SH USAGE
.PP
None of these functions are intended to be used by portable
.I STREAMS
drivers and modules.  They are exported primarily for use by
.BR register_strdev (9)
and
.BR register_strnod (9)
registeration functions and the
.BR specfs (5)
file system.
.\" ------------------------
.SS Major Device Node Functions
.\" ------------------------
.PP
.BR cmaj_add ()
is used only by
.BR register_xinode ()
which is used only by
.BR register_cmajor (9)
used by
.BR register_strdev (9).
Call
.BR register_strdev (9)
instead of this function.
.\" ------------------------
.PP
.BR cmaj_del ()
is used only by
.BR unregister_xinode ()
which is used only bu
.BR unregister_cmajor (9)
used by
.BR unregister_strdev (9).
Call
.BR unregister_strdev (9)
instead of this function.
.\" ------------------------
.PP
.BR cmaj_get ()
is used only by
.BR unregister_xinode ()
which is used only bu
.BR unregister_cmajor (9)
used by
.BR unregister_strdev (9).
Call
.BR unregister_strdev (9)
instead of this function.
.\" ------------------------
.SS Minor Device Node Functions
.\" ------------------------
.PP
.BR cmin_add ()
is used only by
.BR register_strnod (9).
Call
.BR register_strnod (9)
instead of this function.
.\" ------------------------
.PP
.BR cmin_del ()
is used only by
.BR unregister_strnod (9).
Call
.BR unregister_strnod (9)
instead of this function.
.\" ------------------------
.PP
.BR cmin_get ()
is used only by
.BR spec_open (9)
and
.BR cdev_open (9),
to find a possible minor device node associated with a minor device number.
Call
.BR open (2s)
instead.
.\" ------------------------
.PP
.BR cmin_find ()
is used only by directory lookup functions in the
.BR specfs (5)
file system, to find minor device nodes by name under a device driver directory.
.\"
.\"
.SH RETURN
.PP
.BR cmaj_add (),
.BR cmaj_del (),
.BR cmin_del (),
return void.
.PP
.BR cmin_add ()
returns zero
.RB ( 0 )
upon success, and a negative error number upon failure.
.PP
.BR cmaj_get (),
.BR cmin_get (),
.BR cmin_find (),
return a pointer to the requested
.BR devnode (9)
structure upon success, and
.B NULL
upon failure.
.\"
.\"
.SH ERRORS
.PP
When
.BR cmin_add ()
fails, it does not add the passed in minor
.BR devnode (9)
device node to the driver, and returns an appropriate error number as follows:
.TP \w'[\fBENOMEM\fR]\(em'u
.RB [ ENOMEM ]
insufficient memory was available to allocate the necessary
.B snode
to represent the minor device node in the
.BR specfs (5)
file system.
.PP
When
.BR cmaj_get (),
.BR cmin_get (),
.BR cmin_find (),
fail, the return
.BR NULL .
.\"
.\"
.SH CONTEXT
.PP
These helper functions (and the
.I STREAMS
utilities that call them) can only be called from a blocking process context, such as callouts:
.IR qi_qopen (9)
open routine,
or
.IR qi_qclose (9)
close routine,
or kernel module initialization and termination sequences.
.\"
.\"
.SH MP-STREAMS
.PP
These functions are MP-safe when called from the proper context.
.\"
.\"
.SH NOTICES
.PP
The
.BR devnode (9)
helper functions are not intended to be called by portable
.I STREAMS
drivers and modules.  They are only used by implementation specific registration functions,
.BR register_strdev (9),
.BR unregister_strdev (9),
.BR register_strnod (9),
.BR unregister_strnod (9),
and operations within the
.BR specfs (5)
file system,
within the
.I "@PACKAGE_TITLE@"
.B @PACKAGE@-@VERSION@
distribution.
.PP
.I STREAMS
drivers and modules, not part of the distribution, that call these functions are likely to break
from version to version and release to release.
.\"
.\"
.SH IMPLEMENTATION
.PP
See the source file
.I src/kernel/strlookup.c
for implementation details.
.\"
.\"
.SH EXAMPLES
.PP
None.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR cdevsw (9),
.BR devnode (9),
.BR dev_t (9),
.BR specfs (5),
.BR register_cmajor (9),
.BR register_strdev (9),
.BR register_strnod (9),
.BR unregister_cmajor (9),
.BR unregister_strdev (9),
.BR unregister_strnod (9),
.BR spec_open (9),
.BR cdev_open (9),
.BR open (2s),
.IR qi_qopen (9),
.IR qi_qclose (9),
.IR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
These functions
have no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
These
helper functions provide access to the
.BR devnode (9)
list that would otherwise be implemented directly within the file system.
These are
.B "@PACKAGE_TITLE@"
implementation specific functions not intended to be used by
.I STREAMS
drivers and modules and not subject to standardization.
.\"
.\"
.SH CONFORMANCE
.PP
None.
.\"
.\"
.SH HISTORY
.PP
These functions are new for
.BR "@PACKAGE_TITLE@" .
.\"
.\"
.[
$LIST$
.]
.TI
