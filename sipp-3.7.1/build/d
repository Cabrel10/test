
Usage:

  sipp remote_host[:remote_port] [options]

Example:

   Run SIPp with embedded server (uas) scenario:
     ./sipp -sn uas
   On the same host, run SIPp with embedded client (uac) scenario:
     ./sipp -sn uac 127.0.0.1

  Available options:


*** Scenario file options:

   -sd              : Dumps a default scenario (embedded in the SIPp executable)
   -sf              : Loads an alternate XML scenario file.  To learn more about XML scenario
                      syntax, use the -sd option to dump embedded scenarios. They contain all the
                      necessary help.
   -oocsf           : Load out-of-call scenario.
   -oocsn           : Load out-of-call scenario.
   -sn              : Use a default scenario (embedded in the SIPp executable). If this option is
                      omitted, the Standard SipStone UAC scenario is loaded.
                      Available values in this version:
                      
                      - 'uac'      : Standard SipStone UAC (default).
                      - 'uas'      : Simple UAS responder.
                      - 'regexp'   : Standard SipStone UAC - with regexp and variables.
                      - 'branchc'  : Branching and conditional branching in scenarios - client.
                      - 'branchs'  : Branching and conditional branching in scenarios - server.
                      
                      Default 3pcc scenarios (see -3pcc option):
                      
                      - '3pcc-C-A' : Controller A side (must be started after all other 3pcc
                        scenarios)
                      - '3pcc-C-B' : Controller B side.
                      - '3pcc-A'   : A side.
                      - '3pcc-B'   : B side.
                      

*** IP, port and protocol options:

   -t               : Set the transport mode:
                      - u1: UDP with one socket (default),
                      - un: UDP with one socket per call,
                      - ui: UDP with one socket per IP address. The IP addresses must be defined
                        in the injection file.
                      - t1: TCP with one socket,
                      - tn: TCP with one socket per call,
                      - c1: u1 + compression (only if compression plugin loaded),
                      - cn: un + compression (only if compression plugin loaded).  This plugin is
                        not provided with SIPp.
                      
   -i               : Set the local IP address for 'Contact:','Via:', and 'From:' headers. Default
                      is primary host IP address.
                      
   -p               : Set the local port number.  Default is a random free port chosen by the
                      system.
   -bind_local      : Bind socket to local IP address, i.e. the local IP address is used as the
                      source IP address.  If SIPp runs in server mode it will only listen on the
                      local IP address instead of all IP addresses.
   -ci              : Set the local control IP address
   -cp              : Set the local control port number. Default is 8888.
   -max_socket      : Set the max number of sockets to open simultaneously. This option is
                      significant if you use one socket per call. Once this limit is reached,
                      traffic is distributed over the sockets already opened. Default value is
                      50000
   -max_reconnect   : Set the the maximum number of reconnection.
   -reconnect_close : Should calls be closed on reconnect?
   -reconnect_sleep : How long (in milliseconds) to sleep between the close and reconnect?
   -rsa             : Set the remote sending address to host:port for sending the messages.

*** SIPp overall behavior options:

   -v               : Display version and copyright information.
   -bg              : Launch SIPp in background mode.
   -nostdin         : Disable stdin.
                      
   -plugin          : Load a plugin.
   -sleep           : How long to sleep for at startup. Default unit is seconds.
   -skip_rlimit     : Do not perform rlimit tuning of file descriptor limits.  Default: false.
   -buff_size       : Set the send and receive buffer size.
   -sendbuffer_warn : Produce warnings instead of errors on SendBuffer failures.
   -lost            : Set the number of packets to lose by default (scenario specifications
                      override this value).
   -key             : keyword value
                      Set the generic parameter named "keyword" to "value".
   -set             : variable value
                      Set the global variable parameter named "variable" to "value".
   -tdmmap          : Generate and handle a table of TDM circuits.
                      A circuit must be available for the call to be placed.
                      Format: -tdmmap {0-3}{99}{5-8}{1-31}
   -dynamicStart    : variable value
                      Set the start offset of dynamic_id variable
   -dynamicMax      : variable value
                      Set the maximum of dynamic_id variable     
   -dynamicStep     : variable value
                      Set the increment of dynamic_id variable

*** Call behavior options:

   -aa              : Enable automatic 200 OK answer for INFO, NOTIFY, OPTIONS and UPDATE.
   -base_cseq       : Start value of [cseq] for each call.
   -cid_str         : Call ID string (default %u-%p@%s).  %u=call_number, %s=ip_address,
                      %p=process_number, %%=% (in any order).
   -d               : Controls the length of calls. More precisely, this controls the duration of
                      'pause' instructions in the scenario, if they do not have a 'milliseconds'
                      section. Default value is 0 and default unit is milliseconds.
   -deadcall_wait   : How long the Call-ID and final status of calls should be kept to improve
                      message and error logs (default unit is ms).
   -auth_uri        : Force the value of the URI for authentication.
                      By default, the URI is composed of remote_ip:remote_port.
   -au              : Set authorization username for authentication challenges. Default is taken
                      from -s argument
   -ap              : Set the password for authentication challenges. Default is 'password'
   -s               : Set the username part of the request URI. Default is 'service'.
   -default_behaviors: Set the default behaviors that SIPp will use.  Possible values are:
                      - all	Use all default behaviors
                      - none	Use no default behaviors
                      - bye	Send byes for aborted calls
                      - abortunexp	Abort calls on unexpected messages
                      - pingreply	Reply to ping requests
                      - cseq	Check CSeq of ACKs
                      If a behavior is prefaced with a -, then it is turned off.  Example:
                      all,-bye
                      
   -nd              : No Default. Disable all default behavior of SIPp which are the following:
                      - On UDP retransmission timeout, abort the call by sending a BYE or a CANCEL
                      - On receive timeout with no ontimeout attribute, abort the call by sending
                        a BYE or a CANCEL
                      - On unexpected BYE send a 200 OK and close the call
                      - On unexpected CANCEL send a 200 OK and close the call
                      - On unexpected PING send a 200 OK and continue the call
                      - On unexpected ACK CSeq do nothing
                      - On any other unexpected message, abort the call by sending a BYE or a
                        CANCEL
                      
   -pause_msg_ign   : Ignore the messages received during a pause defined in the scenario 
   -callid_slash_ign: Don't treat a triple-slash in Call-IDs as indicating an extra SIPp prefix.

*** Injection file options:

   -inf             : Inject values from an external CSV file during calls into the scenarios.
                      First line of this file say whether the data is to be read in