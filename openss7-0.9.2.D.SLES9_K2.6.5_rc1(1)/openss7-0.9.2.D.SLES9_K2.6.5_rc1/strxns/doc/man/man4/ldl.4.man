'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) ldl.4.man,v 0.9.2.4 2006/04/05 09:44:52 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:52 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" ldl.4.man,v
.\" Revision 0.9.2.4  2006/04/05 09:44:52  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strxns.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strxns.macros
.\"
.\"
.TH LDL 4 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Devices"
.\"
.\"
.SH NAME
.B ldl
\- Linux Data Link (LDL) driver
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <unistd.h>
.br
.B #include <stropts.h>
.br
.B #include <sys/dlpi.h>
.br
.B #include <sys/ldl.h>
.HP 12
.BI "int " fd " = open(" /dev/ldl ", " oflag );
.\"
.\"
.SH DESCRIPTION
.PP
The
.B LDL
driver provides an interface between
.I STREAMS
drivers and Linux network drivers.  It registers itself as a client of a Linux
network driver and then presents a DLPI Provider interface
.[
dlpi
.]
to
.I STREAMS
drivers, which may be pushed or linked above
.BR LDL .
.\"
.\"
.SH IOCTLS
.PP
The
.B LDL
driver implements the following ioctls.  The user codes these ioctls as type
.B I_STR
(see
.BR streamio (7))
and passes a structure of type
.B struct strioctl
to the driver.  The
.B ic_cmd
field of this structure is decoded according to the following table.  the
.BR ic_dp " and " ic_len
fields delimit an argument structure which is also passed to the driver.  The
argument structure differs for each type of
.BR ic_cmd .
.PP
.DS
.TS
tab(@);
lbt lbt s s s.
_
ic_cmd value@Argument Structure
\^@_
\^@Description
_
.T&
lbt lt s s s.
LDL_SETFLAGS@IN/OUT: \fBstruct ldl_flags_ioctl\fR
\&@_
\^@T{
Used to set internal option flags for the open stream.  See ldl.c source for details.
T}
_
LDL_FINDPPA@IN: \fBchar[]\fR OUT: \fBlong\fR
\&@_
\^@T{
The agrument is an ASCII string representing a network device mnemonic such as
.IR "eth0" .
If such a device can be found then the argument is overwritten with a long
word whose numerical value can be used as the
.B dl_ppa
field of a
.BR DL_ATTACH_REQ (7).
T}
_
LDL_GETNAME@IN: \fINone\fR OUT: \fBchar[]\fR
\&@_
\^@T{
This ioctl returns the ASCII string form of the network device mnemonic for
the stream.
T}
_
.TE
.DE
.\"
.\"
.SH USAGE
.PP
The
.B LDL
is controlled by
.BR dlpi (7)
primitives from its upstream client.  The DLPI primitives understood by this
driver are as follows. 
.B DLPI
mnemonics come from the file <sys/dlpi.h>.
.B LDL
mnemonics come from the file <sys/ldl.h>.
.\"
.SS DL_INFO_REQ
.PP
A
.BR DL_INFO_REQ (7)
causes
.B LDL
to return a
.BR DL_INFO_ACK (7).
If the stream has not been attached to a device then the returned values will
consist of default values.  If the stream has been attached then information
will be returned that pertains the the underlying Linux network device.
.\"
.SS DL_PHYS_ADDR_REQ
.PP
A
.BR DL_PHYS_ADDR_REQ (7)
causes
.B LDL
to return a
.BR DL_PHYS_ADDR_ACK (7)
(or
.BR DL_ERROR_ACK (7)).
The response will contain the current physical address of the Linux network
device.  The option to retrieve the factory address is not implemented and
will always produce a
.BR DL_ERROR_ACK (7)
response.
.\"
.SS DL_ATTACH_REQ
.PP
The stream must be in the
.B DL_UNATTACHED
state for the
.BR DL_ATTACH_REQ (7)
primitive to succeed.
The
.B dl_ppa
field specifies the device number of the Linux network device to attach in its
low order bits.  In the
.B LDL_FRAME_MASK
bits, the
.B dl_ppa
specifies the framing type to use with the device.  The valid framing types
are:
.BR LDL_FRAME_EII ", " LDL_FRAME_802_2 ", " LDL_FRAME_802_3 ", " LDL_FRAME_SNAP " and " LDL_FRAME_RAW_LLC .
The device number is usually obtained by issuing an
.B LDL_FINDPPA
ioctl.  This ioctl takes a network device mnemonic, such as
.BR "eth0" ,
as an argument and produces a number suitable for use as the
.B dl_ppa
value in a
.BR DL_ATTACH_REQ (7).
If the attach succeeds,
.B LDL
returns a
.BR DL_OK_ACK (7)
and sets the state of the stream to
.BR DL_UNBOUND .
It returns a
.BR DL_ERROR_ACK (7)
if it fails.
.\"
.SS DL_DETACH_REQ
.PP
A
.BR DL_DETACH_REQ (7)
causes
.B LDL
to detach from the Linux network device.  The stream must be in the
.B DL_UNBOUND
state for this primitive to be valid.
If the detach succeeds,
.B LDL
returns a
.BR DL_OK_ACK (7)
and sets the state of the stream to
.BR DL_UNATTACHED .
It returns a
.BR DL_ERROR_ACK (7)
if it fails.
.\"
.SS DL_BIND_REQ
.PP
A
.BR DL_BIND_REQ (7)
causes
.B LDL
to bind an address to the stream.  The stream must be in
the
.B DL_UNBOUND
state for this primitive to succeed.
The bound address is used in demultiplexing frames received from the Linux
network driver.  The SAP conveyed in the
.BR DL_BIND_REQ (7)
is used to select those received frames that are sent upstream on a particular
stream.
If the bind succeeds
.B LDL
returns a
.BR DL_OK_ACK (7)
and sets the state of the stream to
.BR DL_IDLE .
If it fails then a
.BR DL_ERROR_ACK (7)
is sent upstream.
.\"
.SS DL_UNBIND_REQ
.PP
A
.BR DL_UNBIND_REQ (7)
causes
.B LDL
to unbind all SAPs from the stream.  The stream must be in
the
.B DL_IDLE
state for this primitive to succeed.
If the unbind succeeds,
.B LDL
returns a
.BR DL_OK_ACK (7)
and sets the state of
the stream to
.BR DL_UNBOUND .
If it fails then a
.BR DL_ERROR_ACK (7)
is sent upstream.
.\"
.SS DL_SUBS_BIND_REQ
.PP
A
.BR DL_SUBS_BIND_REQ (7)
causes
.B LDL
to add an additional SAP to the list of SAPs associated with the stream.  The
stream must be in the
.B DL_IDLE
state for this primitive to succeed.
If the subs-bind succeeds,
.B LDL
returns a
.BR DL_SUBS_BIND_ACK .
If it
fails then a
.BR DL_ERROR_ACK
is sent upstream.
.\"
.SS DL_SUBS_UNBIND_REQ
.PP
A
.BR DL_SUBS_UNBIND_REQ (7)
causes
.B LDL
to remove the given SAP from the list of SAPs associated with the stream.  The
stream must be in the
.B DL_IDLE
state for this primitive to succeed.
If the subs-unbind succeeds,
.B LDL
returns a
.BR DL_OK_ACK (7).
If it fails
then a
.BR DL_ERROR_ACK (7)
is sent upstream.  The state of the stream is left in the
.BR DL_IDLE
state in either case.
.\"
.SS DL_PROMISCON_REQ
.PP
The intent of the
.BR DL_PROMISCON_REQ (7)
primitive is to set the Linux network device into the so-called "promiscuous"
mode of operation.  However, it is unimplemented.
.\"
.SS DL_PROMISCOFF_REQ
.PP
The
.BR DL_PROMISCOFF_REQ (7)
primitive would undo the effect of a
.BR DL_PROMISCON_REQ (7).
However, it is unimplemented.
.\"
.SS DL_UNITDATA_REQ
.PP
The
.BR DL_UNITDATA_REQ (7)
primitive is used to send data to the Linux network driver.  The destination
address is used to set the physical address of the receiver of the data.  The
stream must be in the
.BR DL_IDLE
state for this primitive to succeed.
If the stream is operating in raw mode then the address field is ignored and
it is assumed that the client has completely formatted the frame for
transmission by the Linux network driver.
If this primitive fails, a
.BR DL_UDERROR_IND (7)
is sent upstream.  There is no response in the case of success.
.\"
.SS M_DATA
.PP
.BR M_DATA (9)
is an acceptable alternative to a
.BR DL_UNITDATA_REQ (7)
for sending data on a raw-mode stream.
If the data transmission operation fails, a
.BR DL_UDERROR_IND (7)
is sent upstream.  There is no response in the case of success.
For data received from the Linux network driver,
.B LDL
forwards a copy of the received data in a
.BR DL_UNITDATA_IND (7)
DLPI message to each client whose stream is attached to the particular network
driver and who has a SAP bound to the stream that matches the SAP information
in the received frame.  Note that for non-raw frame operations that the MAC
header is stripped from the received frame prior to forwarding it to the
client.  The address of the sender is retained in the address field of the
.BR DL_UNITDATA_IND (7)
primitive.
.\"
.\"
.SH NOTICES
.PP
.\"
.\"
.SH IMPLEMENTATION
.PP
.\"
.\"
.SH EXAMPLES
.PP
.\"
.\"
.SH DEVICES
.PP
.\"
.\"
.SH "SEE ALSO"
.PP
.\"
.\"
.SH BUGS
.PP
.\"
.\"
.SH COMPATIBILITY
.PP
.\"
.\"
.SH CONFORMANCE
.PP
.\"
.\"
.SH HISTORY
.PP
Most of the devices and modules here appeared in earlier releases of LiS.
.\"
.\"
.[
$LIST$
.]
.\"
.\"
.T4
