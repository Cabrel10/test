'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) kmem_alloc.9.man,v 0.9.2.23 2006/04/05 09:44:13 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:13 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" kmem_alloc.9.man,v
.\" Revision 0.9.2.23  2006/04/05 09:44:13  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH KMEM_ALLOC 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B kmem_alloc
\- allocate kernel memory
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/types.h>
.br
.B #include <sys/kmem.h>
.HP
.BI "void *kmem_alloc(size_t " size ", int " flag ");
.\"
.\"
.SH ARGUMENTS
.TP
.I size
the size of the contiguous region of kernel memory to allocate.
.PD 0
.TP
.I flag
whether to sleep or not.
.PD
.\"
.\"
.SH INTERFACE
.PP
.IR DDI/DKI .
.\"
.\"
.SH DESCRIPTION
.PP
Requests that the number of bytes of kernel memory specified by the argument
.I size
be allocated with the options specified by
.I flag
and returned as a
.B void *
to the allocated memory.
.I flag
can be one of the following values:
.TP \w'\ KM_CACHEALIGN\ 'u
.B KM_SLEEP
can wait and reschedule, success guaranteed.
.PD 0
.TP
.B KM_NOSLEEP
cannot wait or reschedule, may fail and return
.BR NULL .
.TP
.B KM_PHYSCONTIG
allocate contiguous physical memory
.TP
.B KM_CACHEALIGN
allocate the requested memory starting at a cache line boundary and padded out to a full cache line
.TP
.B KM_DMA
allocate the requested memory as suitable for worst case DMA.
.PD
.\"
.\"
.SH USAGE
.PP
.BR kmem_alloc ()
allocates pinned kernel memory which is a precious kernel resource.  Allocation of large blocks of
pinned kernel memory can impair system performance.
.PP
.BR kmem_alloc ()
should not be used to allocated memory that will not later be freed: doing so can have an impact on
memory allocation algorithm performance.  Static allocation should be used in this case wherever
possible.
.PP
.BR kmem_alloc ()
should not be used to allocated fundamental system data structures.  Fundamental system data
structures should always be allocated using that data structure's specific allocation function.
For example, a
.BR queue (9)
structure should be allocated using
.BR allocq (9):
.RS
.nf
\fC\s-1
queue_t *q;
q = allocq();
\s+1\fP
.fi
.RE
instead of
.BR kmem_alloc ():
.RS
.nf
\fC\s-1
queue_t *q;
q = kmem_alloc(sizeof(*q), KM_SLEEP);
\s+1\fP
.fi
.RE
This is because sizes of fundamental system data structures may change and yet binary compatibility
of
.I STREAMS
drivers and modules can be maintained.
Also, the implementation of a fundamental structure might be larger than the public declaration of
that structure: that is, there are additional fields hidden from the system programmer.
Portable
.I STREAMS
drivers and modules will not allocate fundamental system datastructures using
.BR kmem_alloc (),
but will instead use the system-provided structure-specific allocator.
.\"
.\"
.SH RETURN
.PP
.BR kmem_alloc ()
returns a pointer to the allocated memory on success.  On failure,
.BR kmem_alloc ()
returns a
.B NULL
pointer.
.\"
.\"
.SH ERRORS
.PP
When
.BR kmem_alloc ()
fails to allocate the requested memory, it returns a
.B NULL
pointer.
.BR kmem_alloc ()
should only fail and return
.B NULL
if
.I flag
was set to
.BR KM_NOSLEEP ;
however,
if
.I size
is zero (0), then
.BR kmem_alloc ()
will fail and return
.B NULL
regardless of the value of
.IR flag .
.\"
.\"
.SH CONTEXT
.PP
.BR kmem_alloc ()
can be called from any context with flag
.BR KM_NOSLEEP .
.BR kmem_alloc ()
can only be called from user context with flag
.BR KM_SLEEP .
.\"
.\"
.SH MP-STREAMS
.PP
.BR kmem_alloc ()
is MP-safe.
.\"
.\"
.SH NOTICES
.PP
.BR kmem_alloc ()
will not allocate memory extents larger than 131072 bytes.
To obtain larger memory extents, use
.BR __get_free_pages (9).
.PP
.BR kmem_alloc ()
may allocate a larger extent of memory than is requested with the
.I size
argument.  The
.B Linux
kernel memory allocator
.BR kmalloc (9)
allocates to the enclosing power of two size.  Also,
.BR kmalloc (9)
will not allocate less than 32 bytes.
Portable
.I STREAMS
drivers and modules will not make assuptions about the excess memory allocated by
.BR kmem_alloc ().
.PP
.BR kmem_alloc ()
uses the
.B Linux
memory allocator,
.BR kmalloc (9)
to allocate memory.  The
.B Linux
memory allocator will size the memory extent to the enclosing power of two size greater than or
equal to 32, and this memory extent will be aligned to the enclosing power of two (minimum 32 byte)
alignment boundary.  So, for example, if a
.I size
of 120 bytes is requested, 128 bytes will be allocated and the 128 bytes will be aligned to a
128-byte boundary.  This also means that a request of a cacheline or larger will always be cacheline
aligned.
Portable
.I STREAMS
drivers and modules, however, will make no assumptions about the excess or the alignment of the
memory returned by
.BR kmem_alloc (),
except that the
.I STREAMS
driver or module is assured that the alignment of the returned memory will be suitable for holding
any basic data type or structure.
.PP
.BR kmem_alloc ()
uses
.BR kmalloc (9)
allocates memory in power of two chunks between 32 bytes and 131072 bytes.
.BR kmalloc (9)
allocations are physically contiguous memory.
Portable
.I STREAMS
drivers and modules make no assumptions about the physical contiguousness of memory allocated with
.BR kmem_alloc ().
.PP
.BR kmem_alloc ()
allocated memory contains random contents; however, these contents may contain secure kernel
information that should not be exposed to users.  When allocating datastructures that will be passed
to users using, for example,
.BR copyout (9),
the memory should be set to known contents or allocated using
.BR kmem_zalloc (9)
instead.  (Secure functions should know better than to deallocate memory without wiping it clean.)
Portable
.I STREAMS
drivers and modules will always initialize the contents of the memory returned by
.BR kmem_alloc ().
.\"
.\"
.SH IMPLEMENTATION
.PP
.BR kmem_alloc ()
is implemented as a function that calls
.BR kmalloc (9)
with flags
.BR GFP_KERNEL " or " GFP_ATOMIC
depending on the value of
.IR flag .
.\"
.\"
.SH "SEE ALSO"
.BR kmalloc (9),
.BR kmem_zalloc (9),
.BR kmem_free (9),
.BR copyout (9),
.BR queue (9),
.BR allocq (9).
.\"
.\"
.SH BUGS
.PP
.BR kmem_alloc ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR kmem_alloc ()
is source-level compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
and systems based on
.I SVR
with the following portability considerations exceptions:
.IP \(em \w'\(em\(em'u
.IR AIX \(rg,
.IR MacOT \(rg,
.IR OSF/1 \(rg,
.IR SUPER-UX \(rg
and
.IR UXP/V \(rg
do not document this function.
.[
aixdoc
.]
.[
osfdoc
.]
.[
macdoc
.]
.[
suxdoc
.]
.[
uxpdoc
.]
.IR OSF/1 \(rg
indicates that the
.B MALLOC
macro should be called instead.
.[
osfdoc
.]
.IR HP-UX \(rg,
.IR IRIX \(rg,
.IR OSF/1 \(rg,
.IR Solaris \(rg,
.IR UnixWare \(rg
and
.IR LiS
document this function.
.[
hpuxdoc
.]
.[
irixdoc
.]
.[
osfdoc
.]
.[
soldoc
.]
.[
uw7doc
.]
.[
lis
.]
.IP ""
Portable
.I STREAMS
drivers and modules may use
.BR kmem_alloc ()
for kernel memory allocation.
.IP \(em
.IR Solaris \(rg,
.IR IRIX \(rg,
.IR UnixWare \(rg,
document that
.BR kmem_alloc ()
returns
.B NULL
when
.I size
is zero.
.[
soldoc
.]
.[
irixdoc
.]
.[
uw7doc
.]
.IR HP-UX \(rg
and
.I LiS
try to allocate 32 bytes if the
.I size
argument is set to 0.
.[
hpuxdoc
.]
.[
lis
.]
.IP ""
Portable
.I STREAMS
drivers and modules will not pass a size of zero (0) in the
.I size
argument to
.BR kmem_alloc ().
.IP \(em
.IR IRIX \(rg
adds the
.B KM_PHYSCONTIG
and
.B KM_CACHEALIGN
flags.
.[
irixdoc
.]
No other implementation mentions these.
.IP ""
Portable
.I STREAMS
drivers and modules will only use the flags
.BR KM_SLEEP " and " KM_NOSLEEP
when calling
.BR kmem_alloc ().
.IP \(em
.B Linux Fast-STREAMS
adds the
.B KM_DMA
flag.
This is for internal use by
.BR pullupmsg (9)
and should not be used by portable programs.
.IP ""
Portable
.I STREAMS
drivers and modules will only use the flags
.BR KM_SLEEP " and " KM_NOSLEEP
when calling
.BR kmem_alloc ().
.IP \(em
.BR kmem_alloc ()
is not bug for bug compatible with
.IR LiS .
.IP ""
Under
.IR LiS ,
.BR kmem_alloc ()
ignores the
.I flag
argument and allocates memory using
.BR lis_malloc ()
which always calls
.BR kmalloc (9)
with a general fault protection class of
.BR GFP_ATOMIC .
This means that
.BR kmem_alloc ()
can fail and return
.B NULL
even if
.I flag
is set to
.BR KM_SLEEP .
Also, this means that when
.I flag
is set to
.BR KM_SLEEP ,
the calling process will neither wait nor reschedule.
These are
.I LiS
bugs.
.\".IP \(em
Under
.IR LiS ,
.BR kmem_alloc ()
returns a pointer to zero-sized allocated memory when
.I size
is zero.
This is incorrect behaviour and is an
.I LiS
bug.
.\".IP \(em
.I LiS
destroys memory alignment by inserting hidden memory allocation management pointers at the
beginningo of the
.BR kmalloc (9)'ed
extent.
.\".IP \(em
.BR kmem_alloc ()
is implemented as a function call.
.I LiS
implements
.BR kmem_alloc ()
as a macro.
.IP ""
Portable
.I STREAMS
drivers and modules will use
.B Linux Fast-STREAMS
in place of
.IR LiS .
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR kmem_alloc ()
first appeared in
.IR "SVR 3" .
.[
svr3
.]
.\"
.\"
.[
$LIST$
.]
.TI
