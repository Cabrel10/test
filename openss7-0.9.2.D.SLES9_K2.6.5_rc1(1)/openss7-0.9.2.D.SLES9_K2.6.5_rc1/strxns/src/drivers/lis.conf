## =============================================================================
## 
# @(#) lis.conf,v OpenSS7-0_9_2_D_rc2(0.9.2.10) 2006/07/11 12:32:07
##
## -----------------------------------------------------------------------------
##
# Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
##
## All Rights Reserved.
##
## This program is free software; you can redistribute it and/or modify it under
## the terms of the GNU General Public License as published by the Free Software
## Foundation; either version 2 of the License, or (at your option) any later
## version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
## details.
##
## You should have received a copy of the GNU General Public License along with
## this program; if not, write to the Free Software Foundation, Inc., 675 Mass
## Ave, Cambridge, MA 02139, USA.
##
## -----------------------------------------------------------------------------
##
## U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
## behalf of the U.S. Government ("Government"), the following provisions apply
## to you.  If the Software is supplied by the Department of Defense ("DoD"), it
## is classified as "Commercial Computer Software" under paragraph 252.227-7014
## of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
## successor regulations) and the Government is acquiring only the license rights
## granted herein (the license rights customarily provided to non-Government
## users).  If the Software is supplied to any unit or agency of the Government
## other than DoD, it is classified as "Restricted Computer Software" and the
## Government's rights in the Software are defined in paragraph 52.227-19 of the
## Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
## the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
## (or any successor regulations).
##
## -----------------------------------------------------------------------------
##
## Commercial licensing and support of this software is available from OpenSS7
## Corporation at a fee.  See http://www.openss7.com/
##
## -----------------------------------------------------------------------------
##
## Last Modified 2006/07/11 12:32:07 by brian
##
## =============================================================================

##
## Driver specifications
##
## multiple major numbers for a driver may be allocated two ways:
## . by explicitly requesting n-majors (see below)
## . by requesting an n-minors value large enough to require more than
##   one major number.
##
## strconf now supports allocating multiple major numbers, but
## not all drivers do.  It is only known to work for 'fifo' at this time.
##
##	name		prefix		major	n-minors  n-majors
##driver	inet		ss_		30
driver	link-driver	ldl		*
driver	ip_to_dlpi	ip2xinet	*
driver	np_ip		np_ip		*
#driver	ip		ip		*
#driver	cd		cd		*
#driver	dl		dl		*

##
## this must be 30 for iBCS compatibility
##

##
## Object name specifications
##
##	type	name		object name
#objname driver	inet		inet
objname	driver	link-driver	ldl
objname	driver	ip_to_dlpi	ip_to_dlpi
objname driver	np_ip		np_ip
#objname driver	ip		ip
#objname	driver	cd		cd
#objname	driver	dl		dl

##
## Loadable specifications
##
## If you do not have a system with support for demand-loading modules
## into the kernel, you will have to load these modules by hand or in
## the startup scripts.
## If you do not use the loadable keyword at all, everything is linked
## into streams.o.
##
#loadable inet
loadable ldl
loadable ip_to_dlpi
loadable np_ip
#loadable ip
#loadable cd
#loadable dl

##
## Node specifications
##
## Loop driver now makes its own nodes in its init routine as an 
## example of how to use lis_mknod.
##
##	name	          type	perm	major		minor
##
# These are iBCS devices that should already be installed on a
# system that supports the iBCS.  The /dev entries are supposed
# to by symbolic links to the /dev/inet entries.  arp and rip
# are supposed to be symbolic links to udp
##
#node	/dev/ip		     c	0666	inet		32
#node	/dev/icmp	     c	0666	inet		33
#node	/dev/ggp	     c	0666	inet		34
#node	/dev/ipip	     c	0666	inet		35
#node	/dev/tcp	     c	0666	inet		36
#node	/dev/egp	     c	0666	inet		37
#node	/dev/pup	     c	0666	inet		38
#node	/dev/udp	     c	0666	inet		39
#node	/dev/idp	     c	0666	inet		40
#node	/dev/rawip	     c	0666	inet		41
#node	/dev/arp	     c	0666	inet		39
#node	/dev/rip	     c	0666	inet		39
#node	/dev/inet/ip	     c	0666	inet		32
#node	/dev/inet/icmp	     c	0666	inet		33
#node	/dev/inet/ggp	     c	0666	inet		34
#node	/dev/inet/ipip	     c	0666	inet		35
#node	/dev/inet/tcp	     c	0666	inet		36
#node	/dev/inet/egp	     c	0666	inet		37
#node	/dev/inet/pup	     c	0666	inet		38
#node	/dev/inet/udp	     c	0666	inet		39
#node	/dev/inet/idp	     c	0666	inet		40
#node	/dev/inet/rawip	     c	0666	inet		41
#node	/dev/inet/arp	     c	0666	inet		39
#node	/dev/inet/rip	     c	0666	inet		39
#node	/dev/ticots_ord	     c	0666	inet		42
#node	/dev/ticots	     c	0666	inet		43
#node	/dev/ticlts	     c	0666	inet		44
node	/dev/ldl	     c	*	230		link-driver
node	/dev/ip2xinet	     c	*	230		ip_to_dlpi
#node	/dev/ip		     c	*	230		ip
node	/dev/np_ip	     c	*	np_ip		0
node	/dev/ipcl	     c	*	np_ip		1
node	/dev/ipco	     c	*	np_ip		2
