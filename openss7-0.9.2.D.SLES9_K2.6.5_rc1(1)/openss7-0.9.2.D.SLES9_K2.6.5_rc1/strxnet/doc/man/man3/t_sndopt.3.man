'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) t_sndopt.3.man,v 0.9.2.7 2006/04/05 09:44:44 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:44 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" t_sndopt.3.man,v
.\" Revision 0.9.2.7  2006/04/05 09:44:44  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strxnet.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strxnet.macros
.\"
.\"
.\"
.\"
.TH T_SNDOPT 3 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Library Calls"
.\"
.\"
.SH NAME
.B t_sndopt
\- send transport data with options
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <xti.h>
.HP 8
.BI "int t_sndopt(int " fd ", const struct t_optmgmt *" options ", char *" buf ", unsigned int " nbytes ", int " flags );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I fd
specifies the local transport endpoint upon which to send data.
.TP
.I options
a pointer to a
.B t_optmgmt
structure containing information about the options to send.
.TP
.I buf
is a pointer to a buffer containing the data to send.
.TP
.I nbytes
is the number of bytes in the user supplied buffer.
.TP
.I flags
specify additional information about the data to send.
.\"
.\"
.SH DESCRIPTION
.PP
.BR t_sndopt ()
sends connection oriented data with options from the local transport endpoint identified by
.IR fd .
.PP
The
.I flags
argument can be a bitwise OR of any of the following flags:
.TP
.B T_MORE
specifies that the next send operation will include data belonging to the same
transport service data unit or expedited transport service data unit.
.TP
.B T_EXPEDITED
specifies that the data is part of an expedited transport service data unit.
When not set, specifies that the data is part of a normal transport service
data unit.
.TP
.B T_PUSH
specifies that any accumulated data should be sent without delay.
.PP
.I options
is a pointer to a
.B t_optmgmt
structure that describes the options to be sent.
The
.B t_optmgmt
structure is formatted as follows:
.sp
.nf
\fC\s-1\
struct t_optmgmt {
        struct netbuf opt;
        t_scalar_t flags;
};
\fR\s+1
.fi
.PP
The
.B t_optmgmt
structure passes the following members and information.
.TP
.I opt
is a
.BR netbuf (3)
structure that contains passed in
options names and values.  Options are structured as described below under
.IR "\(lqOPTIONS\(rq" .
The
.IR options->opt.len
is significant on call.
If
.I options
is
.B NULL
or
.I options->opt.len
is zero on call, no option names and values are passed.
.TP
.I flags
specifies management flags ignored for this call.
.\"
.\"
.SH OPTIONS
Options with the
.I opt
field of the
.B t_optmgmt
structure (and other structures including XTI/TLI options)
are a formatted as a contiguous list of options.  Each option in the list
begins with a
.B t_opthdr
structure formatted as follows:
.sp
.nf
\fC\s-1\
struct t_opthdr {
    t_uscalar_t len;            /* Option length, incl. header */
    t_uscalar_t level;          /* Option level */
    t_uscalar_t name;           /* Option name */
    t_uscalar_t status;         /* Negotiation result */
    char value[0];              /* and onwards...  */
};
\fR\s+1
.fi
.PP
The
.B t_opthdr
strucuture contains the following members:
.TP
.I len
the length of the option including the length of this header and the length of
the option value that follows.
.TP
.I level
the level of the option.
.I level
values are transport service provider specific.
.TP
.I name
the name of the option within the
.IR level .
.I name
values are transport service provider specific.
.TP
.I value
the value of the option.  This is a variable lenght field, the length of which
is specific to the option specified by
.I level
and
.IR name.
The format of option values is transport service provider specific.
.PP
Option headers in the options list are always aligned in memory to permit
direct access to the header.  This means that the next option in the
list will begin on the next alignment boundary for a
.B t_opthdr
structure.  A macro is provided to assist the XTI/TLI application writer in
locating the next option in the option list.
.PP
A number of macros are provided to assist with handling options in option
lists.  These macros are decribed as follows:
.HP 12
.B T_OPT_FIRSTHDR(b)
takes a an argument
.I b
a pointer to the
.BR netbuf (3)
structure describing the options list and returns a pointer to the first
.B t_opthdr
structure in the list.
.HP 12
.B T_OPT_NEXTHDR(b, p)
takes as arguments
.I b
a pointer to the
.BR netbuf (3)
structure describing the options list and
.I p
a pointer to the
.B t_opthdr
for the current option, and returns a pointer to the
.B t_opthdr
of the next option in the list, or
.B NULL
if there is no next option in the list.
.HP 12
.B T_OPT_DATA(p)
takes as an argument
.I p
a pointer to the
.B t_opthdr
for the options and returns a unsigned character pointer to the
.I value
for the option.
.\"
.\"
.SH CAVEATS
.PP
.BR t_sndopt ()
is only valid in the
.BR T_DATAXFER " and " T_INREL
states.
.PP
.BR t_sndopt ()
is only valid for transport service providers of service type
.BR T_COTS " or " T_COTS_ORD .
.PP
In synchronous mode,
.BR t_sndopt ()
blocks until there is sufficent room to buffer the message for transmission
consdering flow control.  In asynchronous mode where there is insufficient
room to buffer the data for transmission considering flow control,
.BR t_sndopt ()
fails, returns -1 and sets
.IR t_errno (3)
to
.RB [ TFLOW ].
.PP
.BR t_sndopt ()
is functionally equivalent to
.BR write (2),
and the two functions can be used interchangeably; however,
.BR write (2)
does not maintain
.IR t_errno (3)
and cannot send options.
.\"
.\"
.SH "RETURN VALUE"
.PP
Upon success,
.BR t_sndopt ()
returns zero (0) or a positive integer reflecting the number of bytes sent.
Upon failure,
.BR t_sndopt ()
returns -1 and sets
.IR t_errno (3)
to an appropriate error number.
.\"
.\"
.SH ERRORS
.PP
When
.BR t_sndopt ()
fails, it returns -1 and sets
.IR t_errno (3)
to an appropriate error number as follows:
.TP \w'[TNOTSUPPORT]\(em'u
.RB [ TBADDATA ]
The amount of data specified for the call and underlying transport service
provider was invalid (i.e. was outside the protocol limits).  See
.BR t_getinfo (3)
and
.BR t_open (3)
for more information.
.TP
.RB [ TBADF ]
.I fd
is invalid.
.TP
.RB [ TBADOPT ]
The options specified were of an invalid format or contained invalid information.
See
.BR t_optmgmt (3)
for more information on option formats.
.TP
.RB [ TBADFLAG ]
The argument
.I flags
contains invalid flags (i.e. flags other than
.BR T_MORE ", " T_EXPEDITED ", " T_PUSH ).
.TP
.RB [ TFLOW ]
The call would block due to flow control and
.I fd
is in asynchronous mode (i.e.
.BR O_NONBLOCK " or " O_NDELAY
was set with
.BR t_open (3)
or
.BR fcntl (2)).
.TP
.RB [ TLOOK ]
An asynchronous event occured before the call could complete.  See
.BR t_look (3)
for more information.
.TP
.RB [ TNOTSUPPORT ]
The call requires the use of a TLI primitive not supported by the underlying transport provider.
This can happen when the transport service provider is of service type
.BR T_CLTS .
.TP
.RB [ TOUTSTATE ]
The call was issued with the interface in a state other than
.BR T_DATAXFER " or " T_INREL .
.TP
.RB [ TPROTO ]
A protocol error occured between the XTI/TLI library and the underlying transport provider.
.TP
.RB [ TSYSERR ]
A
.B Linux
system error occured and the
.B Linux
error number is set in
.IR errno (3).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR errno (3),
.BR fcntl (2),
.BR t_errno (3),
.BR t_getinfo (3),
.BR t_look (3),
.BR t_open (3),
.BR write (2).
.\"
.\"
.SH "BUGS"
.PP
.BR t_sndopt ()
has no known bugs.
.BR t_sndopt ()
has been tested for the described behavior using the
.BR test-xnet (8)
and
.BR test-xnet_thr (8)
conformance test suites.
.\"
.\"
.SH COMPATIBILITY
.PP
The XTI/TLI library functions are compatible with 
SVR4.2,
.[
svr42
.]
XNS 5.2,
.[
xns
.]
SUSv2.
.[
susv2
.]
Compatibility is tested using the
.BR test-xnet (8)
and
.BR test-xnet_thr (8)
test case executables and the
.I @PACKAGE_TITLE@
.B autotest
test suite.
.\"
.\"
.SH "CONFORMING TO"
.PP
XTI/TLI,
.[
XTI
.]
TPI,
.[
TPI Revision 2.0.0
.]
XPG5,
XNS 5.2,
.[
xns
.]
SUSv2.
.[
susv2
.]
Conformance is tested using the
.BR test-xnet (8)
and
.BR test-xnet_thr (8)
test case executables and the
.I @PACKAGE_TITLE@
.B autotest
test suite.
.\"
.\"
.SH HISTORY
.PP
.B t_sndopt
first appeared in SVR4.2.
.[
svr42
.]
.\"
.\"
.SH VERSIONS
.PP
This manpage was written for the OpenSS7 XTI/TLI Library.
.\"
.\"
.[
$LIST$
.]
.T4

