'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) xti_tcp.3.man,v 0.9.2.6 2006/04/25 01:34:41 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/25 01:34:41 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" xti_tcp.3.man,v
.\" Revision 0.9.2.6  2006/04/25 01:34:41  brian
.\" - updated manual pages
.\"
.\" Revision 0.9.2.5  2006/04/05 09:44:25  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strinet.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strinet.macros
.\"
.\"
.\"
.\"
.TH XTI-TCP 3 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "X/Open Transport Interface (XTI)"
.\"
.\"
.SH "NAME"
.B xti_tcp
\- X/Open Transport Interface \- Corrigendum for Transmission Control Protocol (TCP) Conformance
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <xti.h>
.br
.B #include <xti_ip.h>
.br
.B #include <xti_tcp.h>
.HP
.BI "int " tcp_xtistr " = t_open(" \fR\*(lq/dev/tcp\*(rq\fI ", " flags );
.PD 0
.HP
.BI "int " tcp_xtistr " = t_open(" \fR\*(lq/dev/tcp2\*(rq\fI ", " flags );
.PD
.\"
.\"
.SH OVERVIEW
.PP
.\"
.\"
.SH DESCRIPTION
.PP
This manual section describes the protocol-specific information that is
relevant for TCP transport providers.  This section also describes the
protocol-specific information that is relevant when TCP services are provided
over an IP network using TCP.
.PP
This section also defines the data structures and constants required for TCP
transport providers that are exposed through the
.B <xti_tcp.h>
header file.
.\"
.\"
.SH "ADDRESS FORMAT"
.PP
The TCP address format is structured as follows:
.PP
.nf
\fC\s-1\
struct sockaddr_in {
    sa_family_t         sin_family;  /* Address family */
    unsigned short int  sin_port;    /* Port number */
    struct in_addr      sin_addr;    /* Interned address */
    /* padding */
};
\s+1\fP
.fi
.PP
The
.B sockaddr_in
structure contains the following members:
.TP \w'sin_family\(em'u
.I sin_family
The address family.  Always set to
.BR AF_INET " or " AF_UNSPEC .
.PD 0
.TP
.I sin_port
The port number of the transport endpoint.
.TP
.I sin_addr
The IP address of the transport endpoint.
.TP
.I (padding)
Padding to pad the size of the
.B sockaddr_in
structure to the size of a
.B sockaddr
structure.
.PD
.PP
The structure is padded to the size of a
.BR sockaddr
structure.
.\"
.\"
.SH OPTIONS
.PP
Options are formatted according to the
.B t_opthdr
structure as described in
.BR xti (3).
An TCP transport provider compliant to this specification supports none, all
or any subset of the options defined here.  An implementation may restrict the
use of any of these options by offering them only in a priviledged read-only
mode.
.PP
An TCP transport provider supports three levels of options.  These three levels
are described below.
.\"
.\"
.SS "XTI_GENERIC"
.PP
Options with this level are specific to the X/Open Transport Interface (XTI/TLI)
.[
xti
.]
and are common to all transport providers.  For more information see
.BR xti (3).
.PP
The options defined with the option level
.B XTI_GENERIC
are as follows:
.TP
.B XTI_DEBUG
Sets debugging flags for the stream.
This option is formatted as an array of
.BR t_uscalar_t .
Legal values are implementation defined.
For more information, see
.BR xti (3).
.TP
.B XTI_LINGER
Sets whether, and the amount of time if, the stream will linger waiting for
unsent data to be delivered.
This option is formatted as a
.B t_linger
structure as follows:
.RS
.PP
.nf
\fC\s-1\
struct t_linger {
    t_scalar_t l_onoff;   /* option on/off */
    t_scalar_t l_linger;  /* linger time */
};
\s+1\fP
.fi
.TP \w'l_linger\(em'u
.I l_onoff
Specifies whether to linger
.RB ( T_YES )
or not
.RB ( T_NO ).
Legal values are
.BR T_YES " and " T_NO .
.TP
.I l_linger
Specifies the amount of time (in seconds) to linger.
Legal values are
.BR T_INFINITE ", " T_UNSPEC
and all positive numbers including zero.
.PP
For more information, see
.BR xti (3).
.RE
.TP
.B XTI_RCVBUF
Specifies the size, in bytes, of the receive buffer.
This option is formatted as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.
For more information, see
.BR xti (3).
.TP
.B XTI_RCVLOWAT
Specifies the low water mark above which received data will be indicated and
delivered to the user.
This option is formatted as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.
For more information, see
.BR xti (3).
.TP
.B XTI_SNDBUF
Specifies the size, in bytes, of the transmit buffer.
This option is formatted as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.
For more information, see
.BR xti (3).
.TP
.B XTI_SNDLOWAT
Specifies the low water mark above which queued data will be transmitted to
the peer.
This option is formatted as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.
For more information, see
.BR xti (3).
.\"
.\"
.SS "T_INET_IP"
.PP
Options within this level are specific to the Internet Protocol (IP) and are
common to all the protocol levels in IP.  For more information, see
.BR xti_ip (3).
.PP
The options defined with the option level
.B T_INET_IP
are as follows:
.TP
.B T_IP_OPTIONS
Provides control for the T_IP OPTIONS field.  Used for debugging.
This option is formatted as an array of
.BR "unsigned char" ,
up to 40 elements.
For more information, see
.BR xti_ip (3).
.TP
.B T_IP_TOS
Provides control of the type-of-service byte present in each transmited T_IP
packet.
This option is formated as an
.BR "unsigned char" .
Legal values can be generated with the
.BR SET_TOS ()
macro described in
.BR xti_ip (3).
For more information, see
.BR xti_ip (3).
.TP
.B T_IP_TTL
Provides control of the time-to-live byte present in each transmitted T_IP
packet.
This option is formatted as an
.BR "unsigned char" .
Legal values are from 0 to 255.
For more information, see
.BR xti_ip (3).
.TP
.B T_IP_REUSEADDR
Allows multiple non-listening binds to the same address.
This option is format as a
.BR "unsigned int" .
Legal values are
.BR T_YES " and " T_NO .
For more information, see
.BR xti_ip (3).
.TP
.B T_IP_DONTROUTE
Bypasses routing tables and routes directly to an interface.  Used for
debugging.
This option is format as a
.BR "unsigned int" .
Legal values are
.BR T_YES " and " T_NO .
For more information, see
.BR xti_ip (3).
.TP
.B T_IP_BROADCAST
Allows broadcast addresses to be used.  This option is not applicable to TCP
and is always set to
.BR T_NO .
This option is format as a
.BR "unsigned int" .
Legal values are
.BR T_YES " and " T_NO .
For more information, see
.BR xti_ip (3).
.\"
.\"
.SS "T_INET_TCP"
.PP
Options within this level are specific to the Transmission Control
Protocol (TCP) yet are used by protocol levels using TCP transport.
.PP
The options defined with the option level
.B T_INET_TCP
are as follows:
.TP
.B T_TCP_NODELAY
Under most circumstances, TCP sends data as soon as it is presented.  When
outstanding data hs not yet been acknowledged, it gathers small amounts of
output to be sent in a single packet once an acknowledgment is received.  For
a small number of clients, such a window system (for example,
.IR "MIT X Window System" )
that send a stream of mouse events which receive no replies, this
packetisation may cause significant delays. 
.B T_TCP_NODELAY
is used to defeat this algorithm.  Legal option values are
.B T_YES
("don't delay") and
.B T_NO
("delay").
.RS
.PP
This option can be negotiated in any state; however, this option will not take
effect until data is sent with
.BR t_snd "(3) or " t_sndv (3),
or unless data is already queued for transmission at the time that the option
is negotiated.  A value for this option can be proposed in
.BR t_optmgmt "(3), " t_connect "(3) or " t_accept (3).
.PP
This option is mutually exclusive with
.BR T_TCP_CORK .
Attempts to negotiate this option to
.BR T_YES
when
.B T_TCP_CORK
has already been negotiated to
.B T_YES
will fail.
.PP
This option is formatted as a
.BR t_uscalar_t .
It can take on values
.BR T_YES " or " T_NO .
This option is an
.IR "absolute requirement" .
.RE
.TP
.B T_TCP_MAXSEG
This option determines the maximum segment size for outgoing packets.  Values
greater than the association MTU are ignored and have no effect.  The value
determines the maximum size (in octets) above which TCP will fragment larger
data segments into smaller ones.  Normally this value is the connection MTU
value minus the size of the current IP and TCP headers  If the transport user
negotiates this value to a lower value, the lower value will be used.
.RS
.PP
Per
.IR "XNS 5.2" ,
.[
xns 5.2
%P Appendix B
.]
this option is read-only.  It is used only to retrieve the maximum TCP segment
size.  The write behavior described here is for compatibility with the
.B Linux
.BR tcp (7)
implementation.
.PP
This option is formatted as a
.BR t_uscalar_t .
It can take on any positive value.
This option is not an
.IR "absolute requirement" .
The implementation may impose lower and upper bounds on the value.  If the
proposed value is less than the lower bound, the option will be negotiated to
the lower bound.
.RE
.TP
.B T_TCP_KEEPALIVE
If this option is set, a keep-alive timer is activated to monitor idle
connections that might no longer exist.  If a connection has been idle since
the last keep-alive timeout, a keep-alive packet is sent to check if the
connection is still alive or broken.
.RS
.PP
Keep-alive packets are not an explicit feature of TCP, and this practice is
not universally accepted.  According to
.I RFC 1122
.[
rfc1122
.]
\*(lqa keep-alive mechanism should only be invoked in service applications that
might otherwise hang indefinitely and consume resources unnecessarily if a
client crashes or aborts a connection during a network failure.\*(rq
.PP
The option value consists of a
.B t_kpalive
structure, with the following members:
.PP
.nf
\fC\s-1\
struct t_kpalive {
    t_scalar_t kp_onoff;    /* option on/off */
    t_scalar_t kp_timeout;  /* timeout in minutes */
};
\s+1\fP
.fi
.TP \w'kp_timeout\(em'u
.I kp_onoff
The
.I kp_onoff
field determines whether keep-alive is activated and can assume values
.BR T_NO " or " T_YES .
.TP
.I kp_timeout
The
.I kp_timeout
field determines the frequency of keep-alive packets being sent, in minutes.
The transport user can request the default value by setting the field to
.BR T_UNSPEC .
The default is implementation-dependent, but at least
.B 120
minutes (see
.IR "RFC 1122" ).
.[
rfc1122
.]
Legal values for this field are
.B T_UNSPEC
and all positive numbers.
.PP
The timeout value is not an
.IR "absolute requirement" .
The implementation may impose upper and lower limits on this value.  Requests
that fall short of the lower limit may be negotiated to the lower limit.  The
use of this option might be restricted to privileged users.
.PP
This option is formatted as
.B t_kpalive
structure.  This option is an
.IR "absolute requirement" .
.RE
.PP
The following options are not described in XTI/TLI
.[
xti
.]
or XNS 5.2
.[
xns 5.2
.]
literature, however, they are provided for compatibility with the socket
options of the
.B Linux
socket implementation (see
.BR tcp (7)).
.TP
.B T_TCP_CORK
Never send partially complete segments.
This option determines whether to cork the transmission stream waiting for
subsequent transmission requewsts.  When set
.RB ( T_YES ),
this option permits a number of
.BR t_snd (3)
operations to be peformed without send the data subsequent to the cork.  When
the cork is released
.RB ( T_NO ),
all data will be permitted to proceed to tranmsission.
.RS
.PP
This option can only be negotiated to
.B T_YES
if the option
.B T_TCP_NODELAY
has been negotiated to
.BR T_NO .
Otherwise, negotiation will fail.
.PP
This option is formatted as a
.BR t_uscalar_t .
It can take on values
.BR T_YES ,
conveying that the transmission is corked, or,
.BR T_NO ,
conveying that transmission is uncorked.
This option is not an
.IR "absolute requirement" .
.RE
.TP
.B T_TCP_KEEPIDLE
Start keepalives after this period.
This option determines the period of time, in seconds, that the endpoint will
allow the connection to remain idle util initiating sending of keepalive
packets.
Valid values are any positive value greater than zero (0).
.RS
.PP
This option is formatted as a
.BR t_uscalar_t .
It can take on any positive, non-zero value.
This option is not an
.IR "absolute requirement" .
The implementation may impose upper and lower limits on the value.  Proposed
values less than the lower limit will be negotiated to the lower limit.
.RE
.TP
.B T_TCP_KEEPCNT
Number of keepalives before death.
This option determines the number of keepalives that will be sent without
response before aborting the connection.
Valid values are any positive value greater than zero (0).
.RS
.PP
This options is formatted as a
.BR t_uscalar_t .
It can take on any positive, non-zero value.
This options is not an
.IR "absolute requirement" .
The implementation may impose upper and lower limits on the value.  Proposed
values less than the lower limit will be negotiated to the lower limit.
.RE
.TP
.B T_TCP_SYNCNT
Number of SYN retransmits.
This option determines the number of times that a SYN will be resent before
abandoning transport connection establishment.
Valid values are any positive value greater than zero (0).
.RS
.PP
This option is valid in state
.B T_IDLE
with a
.I qlen
of zero and can be negotiated with
.BR t_optmgmt (3)
or
.BR t_connect (3).
.PP
This options is formatted as a
.BR t_uscalar_t .
It can take on any positive, non-zero value.
This options is not an
.IR "absolute requirement" .
The implementation may impose upper and lower limits on the value.  Proposed
values less than the lower limit will be negotiated to the lower limit.
.RE
.TP
.B T_TCP_LINGER2
Life time of orphaned FIN-WAIT-2 state.
This option determines the amount of time (in seconds) that a TCP connection
will be allowed to persist in the half-closed state before aborting the
connection.  It is useful for servers that may otherwise accumulate a large
number of half-closed TCP connections, exhausting system or network resources.
.RS
.PP
This option may be negotiated in any state; however, the value will not be
effective until an orderly release is initiated with a
.BR t_sndrel (3)
call.
.PP
This options is formatted as a
.BR t_uscalar_t .
It can take on any positive, or zero value.
This options is not an
.IR "absolute requirement" .
The implementation may impose upper and lower limits on the value.  Proposed
values less than the lower limit will be negotiated to the lower limit.
.RE
.TP
.B T_TCP_DEFER_ACCEPT
Wake up listener only when data arrives.
This option controls the behaviour of the implementation in response to the
.BR t_listen (3)
call.  When set to
.BR T_NO ,
as is normally the case,
.BR t_listen (3)
will return a connection indication as soon as an incoming TCP connection is
established.  When negotiated to
.BR T_YES ,
.BR t_listen (3)
will return a connection indication only after data is first received on an
established incoming TCP connection.
.RS
.PP
This option can only be negotiated in the
.BR T_IDLE
state for a stream bound with
.I qlen
greater than zero.  This option may be set on a listening stream using
.BR t_optmgmt (3)
prior to a call to
.BR t_listen (3)
in fitting with
.B XTI-TCP
connection indication options negotiation.
.PP
This option is formatted as a
.BR t_uscalar_t .
It can take on values
.BR T_YES " and " T_NO .
This option is not an
.IR "absolute requirement" .
.RE
.TP
.B T_TCP_WINDOW_CLAMP
Bound advertised window.
This option specifies an upper bound on the advertised receive window.  Values
greater that the actual or effective receive window size will be ignored.
.RS
.PP
This options is formatted as a
.BR t_uscalar_t .
It can take on any positive, non-zero value.
This options is not an
.IR "absolute requirement" .
The implementation may impose upper and lower limits on the value.  Proposed
values less than the lower limit will be negotiated to the lower limit.
.RE
.TP
.B T_TCP_INFO
Information about this connection.
.RS
.PP
This option is read-only and can be read with a call to
.BR t_optmgmt (3)
in any state.
.PP
This option is formatted as a
.B t_tcp_info
structure, formatted as follows:
.PP
.nf
\fC\s-1\
struct t_tcp_info {
    u_char_t tcpi_state;
    u_char_t tcpi_ca_state;
    u_char_t tcpi_retransmits;
    u_char_t tcpi_probes;
    u_char_t tcpi_backoff;
    u_char_t tcpi_options;
    u_char_t tcpi_snd_wscale:4, tcpi_rcv_wscale:4;
    uint32_t tcpi_rto;
    uint32_t tcpi_ato;
    uint32_t tcpi_snd_mss;
    uint32_t tcpi_rcv_mss;
    uint32_t tcpi_unacked;
    uint32_t tcpi_sacked;
    uint32_t tcpi_lost;
    uint32_t tcpi_retrans;
    uint32_t tcpi_fackets;
    /* Times. */
    uint32_t tcpi_last_data_sent;
    uint32_t tcpi_last_ack_sent; /* Not remembered, sorry. */
    uint32_t tcpi_last_data_recv;
    uint32_t tcpi_last_ack_recv;
    /* Metrics. */
    uint32_t tcpi_pmtu;
    uint32_t tcpi_rcv_ssthresh;
    uint32_t tcpi_rtt;
    uint32_t tcpi_rttvar;
    uint32_t tcpi_snd_ssthresh;
    uint32_t tcpi_snd_cwnd;
    uint32_t tcpi_advmss;
    uint32_t tcpi_reordering;
};
\s+1\fP
.fi
.TP
.I tcpi_state
.PD 0
.TP
.I tcpi_ca_state
.RS
.TP
.B TCP_CA_Open
.TP
.B TCP_CA_Disorder
.TP
.B TCP_CA_CWR
.TP
.B TCP_CA_Recovery
.TP
.B TCP_CA_Loss
.RE
.TP
.I tcpi_retransmits
.TP
.I tcpi_probes
.TP
.I tcpi_backoff
.TP
.I tcpi_options
.TP
.I tcpi_snd_wscale
.TP
.I tcpi_rcv_wscale
.TP
.I tcpi_rto
.TP
.I tcpi_ato
.TP
.I tcpi_snd_mss
.TP
.I tcpi_rcv_mss
.TP
.I tcpi_unacked
.TP
.I tcpi_sacked
.TP
.I tcpi_lost
.TP
.I tcpi_retrans
.TP
.I tcpi_fackets
.TP
.I tcpi_last_data_sent
.TP
.I tcpi_last_ack_sent
.TP
.I tcpi_last_data_recv
.TP
.I tcpi_last_ack_recv
.TP
.I tcpi_pmtu
.TP
.I tcpi_rcv_ssthresh
.TP
.I tcpi_rtt
.TP
.I tcpi_rttvar
.TP
.I tcpi_snd_ssthresh
.TP
.I tcpi_snd_cwnd
.TP
.I tcpi_advmss
.TP
.I tcpi_reordering
.PD
.RE
.TP
.B T_TCP_QUICKACK
Block or reenable quick acks.
.RS
.PP
This option is formatted as a
.BR t_uscalar_t .
It can take on values
.BR T_YES " or " T_NO .
This option is not an
.IR "absolute requirement" .
.RE
.\"
.\"
.SH FUNCTIONS
.PP
.B XTI-TCP
supports the XTI/TLI library functions as described in this section.  All
connection-oriented XTI/TLI library calls are supported for TCP; however, some
features of the connection-oriented XTI/TLI library calls are supported by the
underlying transport service provider and some are not.
.\"
.\"
.SS t_accept\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_accept (3),
with the additional considerations described here.
.PP
Issuing
.BR t_accept (3)
assigns an already established connection to
.IR resfd .
.PP
Since user data cannot be exchanged during the connection establishment phase,
.I call->udata.len
must be set to zero.
.PP
When
.RI ( "resfd != fd" ),
the function
.BR t_accept (3)
is recommended to be called with
.I resfd
in the
.B T_UNBND
state, though an endpoint which is bound to any local address (in the
.B T_IDLE
state) can also be used.
.PP
After
.BR t_accept (3)
completes, the endpoint
.I resfd
will represent a connected TCP endpoint whose complete binding essentially has
both local and remote address components.
.PP
If file descriptor
.I resfd
was unbound before calling
.BR t_accept (3),
after the call completes its local address binding would be to the same
protocol address bound to
.IR fd .
If the file descriptor
.I resfd
was bound to a local address before calling
.BR t_accept (3),
that local address binding is dissolved and the local address part of the
binding after
.BR t_accept (3)
completes would become the same as the address bound to
.IR fd .
.PP
If options with end-to-end significance
.RB ( T_IP_OPTIONS " and " T_IP_TOS )
are to be sent with the connection confirmation, the values of these options
must be set with
.BR t_optmgmt (3)
prior to the
.B T_LISTEN
event occurs.  When the transport user detects a
.B T_LISTEN
event, TCP has already established the connection.  Association-related
options passed with
.BR t_accept (3)
become effective at once, but since the connection is already established,
they are transmitted with subsequent IP datagrams sent out in the
.B T_DATAXFER
state.
.PP
.B XTI-TCP
provides a number of options, described in
.RI \*(lq OPTIONS \*(rq,
above, that may be included in this XTI/TLI call in the
.I call->opt
parameter to change local and end-to-end characteristics of the transport
endpoint accepting the connection.  The options of end-to-end significance
that can be included in this XTI/TLI library call are:
.TP
.I T_IP_OPTIONS
.TP
.I T_IP_TOS
.PP
The options of local significance that can be included in this XTI/TLI call
include (other options of local significance may also be included):
.TP
.I XTI_DEBUG
.TP
.I XTI_LINGER
.TP
.I XTI_RCVBUF
.TP
.I XTI_RCVLOWAT
.TP
.I XTI_SNDBUF
.TP
.I XTI_SNDLOWAT
.TP
.I T_IP_TTL
.TP
.I T_IP_REUSEADDR
.TP
.I T_IP_DONTROUTE
.TP
.I T_TCP_NODELAY
.TP
.I T_TCP_MAXSEG
.TP
.I T_TCP_KEEPALIVE
.TP
.I T_TCP_KEEPIDLE
.TP
.I T_TCP_KEEPCNT
.TP
.I T_TCP_WINDOW_CLAMP
.TP
.I T_TCP_QUICKACK
.\"
.\"
.SS t_bind\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_bind (3),
with the additional considerations described here.
.PP
The
.I addr
field of the
.B t_bind
structure represents the local socket; that is, an address which specifically
includes a port identifier.
.PP
The
.BR INET (4)
implementation treats port number zero (0) as a request to bind to any
unused port.  Other than that value, the
.I req->addr.sin_port
part of the binding is specific.  The
.I req->addr.sin_addr.in_addr
part of the binding can represent a single IP address or a wildcard binding to
an address that could represent multiple IP addresses that are legal for the
host
.RB ( INADDR_ANY ).
.PP
Under recent versions of
.BR INET (4),
.BR t_bind (3)
called with a
.B NULL
.I req
argument is equivalent to binding to a wildcard port number with a wildcard IP
address.
.PP
Under
.BR INET (4),
when bound to a wildcard port or IP address, assignment of a specific port
number and IP address can be deferred until an incoming or outgoing connection
is initiated.  Under these situations, any address returned in the
.I ret
argument to
.BR t_bind (3)
or the
.I loc
argument to
.BR t_getprotaddr (3)
will return the wildcard address and port number instead of an assigned
address and port number.
Only once a connection has been established will the local address returned by
.BR t_getprotaddr (3)
be assured to be an assigned address rather than a wildcard address.
.\"
.\"
.SS t_close\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_close (3)
without modification.
.PP
The
.BR t_close (3)
call will result in a
.BR close (2)
call on the descriptor of this XTI/TLI communication endpoint.  If there are no
other descriptors in this process which reference the communications endpoint,
the
.BR close (2)
call will perform an orderly connection termination according to the rules of
a TCP CLOSE call on this transport endpoint as specified in the standards
.I RFC 793
.[
rfc793
.]
and
.IR "RFC 1122" .
.[
rfc1122
.]
If the
.B XTI_LINGER
option is supported and is used to enable the linger option, the linger time
will affect the time an implementation lingers in the execution of
.BR t_close (3)
or
.BR close (2).
A linger time of zero (0) specified with the
.B XTI_LINGER
option may cause an abortive release of a TCP connection, resulting in lost
data.
.\"
.\"
.SS t_connect\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as describe din
.BR t_connect (3),
with the additional considerations described here.
.PP
The
.I sndcall->addr
structure specifies the remote socket.  In the present version, the returned
address set in
.I rcvcall->addr
will have the same value.  Since user data cannot be exchanged during the
connection establishment phase,
.I sndcall->udata.len
must be set to zero (0).
Note that the peer TCP, and not the peer transport user, confirms the
connection.
.PP
.B XTI-TCP
provides a number of options, described in
.RI \*(lq OPTIONS \*(rq,
above, that may be included in this XTI/TLI call in the
.I sndcall->opt
parameter to change local and end-to-end characteristics of the transport
endpoint accepting the connection.  The option of end-to-end significance that
can be included in this XTI/TLI library call are:
.TP
.I T_IP_OPTIONS
.TP
.I T_IP_TOS
.PP
The options of local significance that cne be included in this XTI/TLI call
include (other options of local significance may also be included):
.TP
.I XTI_DEBUG
.TP
.I XTI_LINGER
.TP
.I XTI_RCVBUF
.TP
.I XTI_RCVLOWAT
.TP
.I XTI_SNDBUF
.TP
.I XTI_SNDLOWAT
.TP
.I T_IP_TTL
.TP
.I T_IP_REUSEADDR
.TP
.I T_IP_DONTROUTE
.TP
.I T_TCP_NODELAY
.TP
.I T_TCP_MAXSEG
.TP
.I T_TCP_KEEPALIVE
.TP
.I T_TCP_KEEPIDLE
.TP
.I T_TCP_KEEPCNT
.TP
.I T_TCP_WINDOW_CLAMP
.TP
.I T_TCP_QUICKACK
.\"
.\"
.SS t_getinfo\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as describe din
.BR t_connect (3)
with the additional considerations described here.
.TP \w'servtype\(em'u
.I addr
For compatibility with the
.BR sockets (3)
library,
.B TCP
uses a
.BR sockaddr_in
structured address (see
.RI \*(lq "ADDRESS FORMAT" \*(rq,
above).  This size will be the size of a
.B sockaddr_in
structure.
.TP
.I options
The maximum size of options is provider specific.
The
.B OpenSS7
TCP driver
.RB ( tcp (4))
returns the maximum size of an option structure containing all TCP options.
.TP
.I tsdu
The maximum size of a transport service data unit.  For TCP this is the
maximum size of a message, considering that it may be segmented and sent in
multiple packets.  For TCP this value could be
.BR T_INFINITE .
.TP
.I etsdu
TCB supports the concept of sending expedited data as out-of-band data.  TCP
conforming transport providers will not return
.B T_INVALID
for this field.  The maximum ETSDU size is a single character or 1 octet.
.TP
.I connect
.B XTI-TCP
does not support the concept of connection data.  TCP conforming transport
providers will always return
.B T_INVALID
for this field.
.TP
.I discon
.B XTI-TCP
does not support the concept of diconnection data.  TCP conforming
transport providers will always return
.B T_INVALID
for this field.
.TP
.I servtype
.B XTI-TCP
supports only connection-oriented modes with orderly release.  TCP
conforming transport service providers will return
.BR T_COTS_ORD .
.TP
.I flags
.B XTI-TCP
supports orderly release but does not support orderly release data and
does not support sending null data.  TCP conforming transport service
providers will not return
.B T_ORDRELDATA
or
.B T_SNDZERO
flags.  TCP conforming transport service providers may return the
.B XPG4_1
flag.
.\"
.\"
.SS t_listen\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_listen (3)
with the additional considerations described here.
.PP
Upon successful return
.BR t_listen (3)
indicates an existing connection and not a connection indication.  Since user
data cannot be exchanged during the connection establishment phase,
.I call->udata.maxlen
must be set to zero (0) before the call to
.BR t_listen (3).
The
.I call->addr
structure contains the remote calling socket.
.PP
.B XTI-TCP
does not support the same semantics with regard to indication of
connections, acceptance of indicated connections, and negotiation of options
during connection establishment.  This is because the connection can be
internally accepted before an indication is given to the XTI/TLI user.  To be able
to establish proposed values of options of end-to-end significance before a
connection is accepted, the proposed values of options must be set on the
transport endpoint upon which the XTI/TLI user is listening with
.BR t_listen (3)
rather than being responded to at the time that the connection is accepted
with
.BR t_accept (3).
This makes the semantics of these XTI/TLI functions somewhat different than is
experienced for ISO/OSI conforming protocols.  This characteristic of using
XTI/TLI for internet protocols is described in XNS 5.2.
.[
xns 5.2
.]
.PP
Some TCP options of end-to-end significance should be set before a call to
.BR t_listen (3)
using
.BR t_optmgmt (3)
as follows:
.PP
In addition, any of the options described under
.BR t_accept (3),
above, may be set with
.BR t_optmgmt (3)
before the call to
.BR t_listen (3).
.\"
.\"
.SS t_look\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_open (3)
with the additional considerations described here.
.PP
As soon as a segment with the TCP urgent pointer set enters the TCP receive
buffer, the event
.B T_EXDATA
in indicated.
.B T_EXDATA
remains set until all data up to the byte pointed to by the TCP urgent pointer
has been received.  If the urgent pointer si updated, and the user has not yet
received the byte previously pointed to by the urgent pointer, the update is
invisible to the user.
.\"
.\"
.SS t_open\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_open (3)
with the additional considerations described here.
.PP
.BR t_open (3)
is called as the first step in the initialization of a transport endpoint.
This function returns various default characteristics of the underlying
transport protocol by setting fields in the
.B t_info
structure.  The following should be the values returned by the call to
.BR t_open (3)
and
.BR t_getinfo (3)
with the TCP transport provider.
.PP
.TS
center tab(:);
l|c|c.
_
Parameters:Before call:After call
_
name:x:/
oflag:x:/
info->addr:/:sizeof(struct sockaddr_in)
info->options:/:x
info->tsdu:/:0
info->etsdu:/:T_INFINITE
info->connect:/:T_INVALID
info->discon:/:T_INVALID
info->servtype:/:T_COTS_ORD
info->flags:/:0
_
.TE
.PP
The information returned in the
.I info
parameter to this XTI/TLI call has the same considerations as the
.I info
parameter returned in the call to
.BR t_getinfo (3),
described above.
.\"
.\"
.SS t_optmgmt\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_optmgmt (3)
with the additional considerations described here.
.PP
The options that may be set, retrieved or negotiated using the XTI/TLI library
call are described under
.RI \*(lq OPTIONS \*(rq,
above.
.\"
.\"
.SS t_rcvconnect\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_rcvconnect (3)
with the additional considerations described here.
.PP
Since user data cannot be exchanged during the connection establishment phase,
.I call->udata.maxlen
must be set to zero (0) before the call to
.BR t_rcvconnect (3).
On return, the
.I call->addr
structure contains the address of the remote calling endpoint.
.PP
.BR t_rcvconnect (3)
will return all options of end-to-end significance indicating their
negotiation status in the
.I status
field of the returned option.  Options of end-to-end significance that will
always be returned are as follows:
.PP
Options of local significance will only be returned if their negotiation was
requested in the corresponding call to
.BR t_connect (3).
Options of local significance that can be negotiated during connection
establishment are as follows:
.\"
.\"
.SS t_rcvdis\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_rcvdis (3)
with the additional considerations described here.
.PP
Since data cannot be sent with a disconnect,
.I call->udata.len
must be set to zero (0).
.PP
.B XTI-TCP
does not support disconnection data and the
.I dis->udata
parameter must always be empty.
.PP\
.I dis->reason
will either be a negative
.BR UNIX \(rg
error code, or a  TCP protocol-specific error code as follows:
.PP
For TCP, a disconnect indication may be received associated with a connection
indication before the connection indication is accepted or refused.  In this
case,
.I dis->sequence
will be set appropriately.
.PP
.I dis->reason
can also return the following negative error numbers:
.TP \w'[ECONNABORTED]\(em'u
.RB [ ECONNABORTED ]
software related connection abort.
.PD 0
.TP
.RB [ ECONNRESET ]
connection was reset by peer.
.TP
.RB [ ECONNREFUSED ]
connection was refused by peer.
.TP
.RB [ ETIMEDOUT ]
connection timed out.
.TP
.RB [ EPROTO ]
connection aborted due to protocol error.
.TP
.RB [ ENETDOWN ]
network is down.
.TP
.RB [ ENETUNREACH ]
network is unreachable.
.TP
.RB [ ENETRESET ]
network dropped connection because of reset.
.TP
.RB [ EHOSTDOWN ]
the destination host is down.
.TP
.RB [ EHOSTUNREACH ]
no route to destination host.
.TP
.RB [ ESHUTDOWN ]
SYN received while shutting down.
.PD
.\"
.\"
.SS t_rcv\fR(3), \fBt_rcvv\fR(3)
.PP
.B XTI-TCP
supports these XTI/TLI library calls as described in
.BR t_rcv "(3) and " t_rcvv
with the additional considerations described here.
.PP
The
.B T_MORE
flag should be ignored if normal data is delivered.  If a byte in the data
stream is pointed to by the TCP urgent pointer, as many bytes as possible
preceding this marked byte and the marked byte itself are denoted as urgent
data and are received with the
.BR T_EXPEDITED
flag set.  If the buffer supplied by the user is too small to hold all urgent
data, the
.B T_MORE
flag will be set, indicating that urgent data still remains to be read.  Note
that the number of bytes received with the
.B T_EXPEDITED
flag set is not necessarily equal to the number of bytes sent by the peer user
with the
.B T_EXPEDITED
flag set.
.PP
When data is received using these XTI/TLI library calls, the
.I flags
parameter will not have the
.B T_MORE
flag bit set.
The
.I flags
parameter will have the
.B T_EXPEDITED
flag bit set if the data was sent out-of-band.
.PP
Data received with these XTI/TLI library calls, or using
.BR read "(2) or " readv (2),
will set the
.IR T_IP_OPTIONS ", " T_IP_TOS " and " T_IP_TTL
to the option values associated with the read data if the local options (XXX)
are set for the transport endpoint.
.PP
Reads using
.BR read "(2) or " readv (2)
are stream based reads of normal (in-band) data.  For additional
.BR read "(2) or " readv (2)
behavior, see the
.IR I_SRDOPT " and " I_GRDOPT
input output controls under
.BR streamio (7).
For advanced
.BR read "(2) and " readv (2)
support, use the
.BR tirdwr (4)
pushable module.
.\"
.\"
.SS t_rcvreldata\fR(3)
.PP
.B XTI-TCP
does not support a orderly release with data and this XTI/TLI library call will
return a
.I t_errno
value of
.RB [ TNOTSUPPORT ].
.\"
.\"
.SS t_rcvrel\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_rcvrel (3)
without modification.
.BR t_rcvrel (3)
is preferred over
.BR t_snddis (3)
for disconnecting an established connection (i.e. a connection in the
.B T_DATAXFER
state.
.\"
.\"
.SS t_rcvudata\fR(3), \fBt_rcvvudata\fR(3)
.PP
.B XTI-TCP
does not support a connection-less mode and these XTI/TLI library calls will
return a
.I t_errno
value of
.RB [ TNOTSUPPORT ].
For a connection-less mode service, see
.BR xti_udp (3).
.\"
.\"
.SS t_rcvuderr\fR(3)
.PP
.B XTI-TCP
does not support a connection-less mode and these XTI/TLI library calls will
return a
.I t_errno
value of
.RB [ TNOTSUPPORT ].
For a connection-less mode service, see
.BR xti_udp (3).
.\"
.\"
.SS t_snddis\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_snddis (3)
with the additional considerations described here.
.PP
Since data may not be sent with a disconnect,
.I call->udata.len
must be set to zero (0).
.PP
.B XTI-TCP
does not support disconnection from specified responding addresses.
Therefore, the
.I call->addr
parameter should be empty and will always be ignored.  TCP does not support
disconnect data or disconnect options.  The parameters
.I call->udata
and
.I call->opt
must always be empty.
.B XTI-TCP
does not support refusal of connection indications, and the
.I call->sequence
parameter is populated as described in
.BR t_snddis (3).
.\"
.\"
.SS t_snd\fR(3), \fBt_sndv\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_snd "(3) and " t_sndv (3)
with the additional considerations described here.
.PP
When data is send using these XTI/TLI library calls, the
.B T_MORE
flag bit in the
.I flags
parameter should always be set and will be ignored by the transport service
provider.
The
.B T_EXPEDITED
flag bit should be set in the
.I flags
parameter if the data to be sent is out-of-band data.
.PP
Writes using
.BR write "(2) or " writev (2)
are stream based writes of normal (in-band) data.  For additional
.BR write "(2) or " writev (2)
behavior, see the
.IR I_SWROPT " and " I_GWROPT
input output controls under
.BR streamio (7).
For advanced
.BR write "(2) and " writev (2)
support, use the
.BR tirdwr (4)
pushable module.
.\"
.\"
.SS t_sndreldata\fR(3)
.PP
.B XTI-TCP
does not support a orderly release with data and this XTI/TLI library call will
return a
.I t_errno
value of
.RB [ TNOTSUPPORT ].
.\"
.\"
.SS t_sndrel\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_sndrel (3)
without modification.
.\"
.\"
.SS t_sndudata\fR(3), \fBt_sndvudata\fR(3)
.PP
.B XTI-TCP
does not support a connection-less mode and these XTI/TLI library calls will
return a
.I t_errno
value of
.RB [ TNOTSUPPORT ].
For a connection-less mode service, see
.BR xti_udp (3).
.\"
.\"
.SS t_unbind\fR(3)
.PP
.B XTI-TCP
supports this XTI/TLI library call as described in
.BR t_rcvrel (3)
with the additional considerations described here.
.\"
.\"
.SH "BUGS"
.PP
Although
.BR XTI-TCP
has no known bugs, the
.BR INET (4)
implementation of
.B XTI-TCP
has not been conformance tested.
.\"
.\"
.SH "CAVEATS"
.PP
In support of the
.BR sockets (3)
library for
.BR tpi (7)
transport providers, the options described here have been made compatible with
the socket options described in
.BR tcp (7).
As a result, depending on the release of 
.BR INET (4),
the XTI/TLI options described might not be compatible with the options described
here.
.PP
The
.B Linux
socket version of TCP described in
.BR tcp (7),
accessed using the TPI interface of the
.B strinet
package described in
.BR INET (4),
supports all of the options described here.
.PP
Earlier version of the
.BR INET (4)
driver did not support wildcard binds.  If an attempt was made to bind to a
wildcard address or port number, the bind would fail with
.RB [ TNOADDR ].
While this is correct behavior, it was not consistent with other
.B XTI-TCP
implemetnations.  Recent versions of the
.BR INET (4)
driver include the ability to bind to wildcards or to request that the
transport service provider asign a suitable address.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR INET (4),
.BR read (2),
.BR readv (2),
.BR tcp (4),
.BR tcp (7),
.BR sockets (3),
.BR t_accept (3),
.BR t_connect (3),
.BR T_CONN_REQ (7),
.BR tcp (7),
.BR t_errno (3),
.BR t_getinfo (3),
.BR timod (4),
.BR tirdwr (4),
.BR t_listen (3),
.BR T_OPTDATA_IND (7),
.BR t_optmgmt (3),
.BR t_rcvconnect (3),
.BR t_snddis (3),
.BR write (2),
.BR writev (2),
.BR xnet (3),
.BR xti (3),
.BR xti_ip (3),
.BR xti_tcp (3).
.\"
.\"
.SH "DEVICES"
.PP
There is one TCP device providing the Transport Provider Interface that
provide TCP conforming TPI devices as follows:
.\"
.\"
.TP
.IR /dev/tcp ", " /dev/inet/tcp
For more information on the TPI TCP device, see
.BR tcp (4).
.\"
.\"
.SH COMPATIBILITY
.PP
.SH "CONFORMING TO"
.PP
The Open Group XNS Issue 5.2.
.[
xns
.]
.SH HISTORY
.PP
The
.B TCP-TPI
driver is specific to the
.B OpenSS7
stack.
This is an unofficial Corrigendum to XNS 5.2 Revision 2.
.[
xns
.]
.\"
.\"
.[
$LIST$
.]
.T4
