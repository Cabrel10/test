'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) qtimeout.9.man,v 0.9.2.9 2006/04/05 09:43:34 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:43:34 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" qtimeout.9.man,v
.\" Revision 0.9.2.9  2006/04/05 09:43:34  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strcompat.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strcompat.macros
.\"
.\"
.TH QTIMEOUT 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.SH NAME
.B qtimeout
\- start a timer associated with a queue
.\"
.\"
.SH SYNOPSIS
.B #define _SUN_SOURCE
.br
.B #include <sys/stream.h>
.br
.B #include <sys/ddi.h>
.br
.B #include <sys/sunddi.h>
.HP
.BI "timeout_id_t qtimeout(queue_t *" q ", void (*" func ")(void *), void *" arg ", clock_t " ticks );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I q
a pointer to the queue for which to start the timer.
.TP
.I func
the function that will be called when the timer expires.
.TP
.I arg
the argument to pass to the callback function.
.TP
.I ticks
the number of system ticks before the timer expires.
.\"
.\"
.SH DESCRIPTION
.PP
.BR qtimeout ()
starts a timer with duration
.I ticks
number of system clock ticks, that, upon expiry, will invoke the supplied
timeout function callback
.I timo_fcn
(if the
.I timo_fcn
pointer is
.RB non- NULL )
with the supplied argument
.IR arg .
The timeout callback function
.I timo_fcn
is a function returning
.B void
and taking a single
.B void
pointer argument.
.PP
The callback function
.I timo_fcn
will be executed at some time greater than or equal to the interval specified
in the
.I ticks
argument.
.PP
.BR qtimeout ()
differs from
.BR timeout (9)
in that the callback function is executed within the scope of the indicated
queue rather than globally.  This means that the callback function will take
the necessary locks and ensure necessary mutual exclusion before executing.
.PP
Timeouts invoked with
.BR qtimeout ()
can be canceled with
.BR quntimeout (9).
.\"
.\"
.SH RETURN
.PP
.BR qtimeout ()
returns a
.B timeout_id_t
which is an opaque type that can be tested for equality to zero (0).
Upon success,
.BR qtimeout ()
returns a non-zero timeout id and the timeout is scheduled.
Upon failure,
.BR qtimeout ()
returns a zero (0) timeout id and no timeout is scheduled.
.\"
.\"
.SH ERRORS
.PP
When
.BR qtimeout ()
fails, it returns a zero (0) timeout id.
.BR qtimeout ()
fails when it cannot allocate the internal structures necessary to schedule
the timeout.  If it is important that a timeout be scheduled with assurance,
the return value should always be checked.
.\"
.\"
.SH CONTEXT
.PP
.BR qtimeout ()
can be called from any context including user context, queue procedures,
call-outs, callbacks and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR qtimeout ()
is MP-safe.
.PP
The
.BR qtimeout ()
callback function will not be executed while any synchronous procedure, call-out
or callback functions are executing.
In addition, the
.BR qtimeout ()
callback function will not be executed on a stream frozen by
.BR freezestr (9).
.PP
Considerations should be given when writing the callback function that a
.BR qtimeout ()
callback function can execute at the same time as any asynchronous procedure,
callback, or any soft interrupt or interrupt service routine.
.PP
However, the callback function will be serviced by the same CPU as the CPU
from which the
.BR qtimeout ()
was issued.  Therefore, the callback function will not execute until after
.BR qtimeout ()
returns, no matter whether
.I ticks
is zero or even less that zero.
Because the servicing thread and the current thread are the same, the
.BR qtimeout ()
callback will not be invoked until after the function that called
.BR qtimeout ()
returns and encounters a preemption point.
This means that it is safe to store the returned timeout id in global
variables accessed by the callback function.
It is also safe to hold private locks taken by the callback function across a
call to
.BR qtimeout ().
This is the same situations as that of the other callback functions.
See
.BR mt-streams (9).
.\"
.\"
.SH NOTICES
.PP
.BR qtimeout ()
is a
.IR Solaris \(rg-specific
function:
.B _SUN_SOURCE
must be defined before including DDI/DKI include files to expose this
symbol.
Also,
.B Linux Fast-STREAMS
must be compiled with kernel configuration parameter
.B CONFIG_STREAMS_COMPAT_SUN
or
.B CONFIG_STREAMS_COMPAT_SUN_MODULE
set.
.PP
The primary difference between
.BR qtimeout ()
and
.BR timeout (9)
is that the
.I STREAMS
scheduler will take the same locks as a queue procedure on the associated
queue,
.IR q ,
before invoking the
.BR qtimeout ()
callback function.  No locks are taken whatsoever when scheduling a
.BR timeout (9)
callback.
.PP
For a driver or module that has no synchronization (no perimeters or
.BR SQLVL_NONE ),
calling
.BR qtimeout ()
has the same effect as calling
.BR timeout (9).
.PP
For architectural independence, the driver function
should not specify the
.I ticks
argument directly, but should use the
.BR drv_usectohz (9)
and
.BR drv_msectohz (9)
D3DK functions, the
.I Linux
.B HZ
define,
or some other quantum independent conversion function to convert to and from
microseconds or some other absolute unit of time.
.PP
.B timeout_id_t
should be treated as an opaque type that can be tested for equality to zero.
The value should not otherwise be manipulated.
.B Linux Fast-STREAMS
implements timeout id values internally as abbreviated out-dating pointers to a
.B strevent
structure containing a
.I Linux
timer.  The object can be treated as an
.B int
on all architectures.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR timeout (9),
.BR quntimeout (9),
.BR drv_usectohz (9),
.BR drv_msectohz (9),
.BR untimeout (9),
.BR freezestr (9).
.\"
.\"
.SH BUGS
.PP
.BR qtimeout ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR qtimeout ()
is compatible with
.IR Solaris \(rg,
.[
soldoc
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
.IR AIX \(rg,
.IR UnixWare \(rg,
.IR OSF/1 \(rg,
.IR HP-UX \(rg,
.IR SUPER-UX \(rg,
.IR UXP/V \(rg,
and
.IR LiS ,
do not provide this function.
.IP \(em
.BR qtimeout()
passed a
.B NULL
.I q
pointer has the same effect as
.BR timeout (9).
.IP \(em
.BR qtimeout ()
is a
.IR Solaris \(rg-specific
function that should not be used by portable
.I STREAMS
drivers and modules.
The more common
.BR timeout (9)
function should be used in its stead.
.IP \(em
.BR qtimeout ()
is provided for source level compatibility with
.IR Solaris \(rg
for the purpose of porting
.IR Solaris \(rg
drivers to
.BR Linux .
Because internal structures and definitions for
.B Linux Fast-STREAMS
.[
lfs
.]
differ from that of
.IR Solaris \(rg,
binaries are incompatible.
.IP \(em
.BR qtimeout ()
only provides functionality comparable to
.IR Solaris \(rg
for use by
.I STREAMS
drivers and modules.
Any and all functionality provided by
.BR qtimeout ()
in support of
.RI non- STREAMS
devices are not supported.
.PP
See
.BR suncompat (9)
and
.BR STREAMS (9)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
.I Solaris\(rg
documentation.
.[
solspg
.]
.\"
.\"
.SH HISTORY
.PP
.BR qtimeout ()
is a 
.IR Solaris \(rg
specific function that first appeared in
.IR Solaris "\(rg 2."
.\"
.\"
.[
$LIST$
.]
.TI
