'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) npi.7.man,v 0.9.2.6 2006/04/05 09:44:55 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:55 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" npi.7.man,v
.\" Revision 0.9.2.6  2006/04/05 09:44:55  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strxns.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strxns.macros
.\"
.\"
.TH NPI 7 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "Network Provider Interface (NPI)"
.SH NAME
.B NPI
\- Network Provider Interface
.SH SYNOPSIS
.HP 12
.B #include <sys/npi.h>
.SH DESCRIPTION
.\"
.\"
.\"
.\"
.\"
.PP
This document specifies a
.IR STREAMS (4)-based
kernel-level instantiation of the
ISO/CCITT network service definition.  The Network Provider Interface (NPI)
enables the user of a network layer service to access and use any of a variety
of conforming network layer service providers without specific knowledge of the
provider's protocol.  The service interface is designed to support any
connection-mode network protocol and connectionless network protocol.  This
interface only specifies access to network layer service providers, and does
not address issues concerning network layer management,protocol performance,
and performance analysis tools.
.PP
The specification assumes that the reader is familiar with the OSI reference
model terminology, ISO/CCITT Network Layer Service, and
.IR STREAMS (4).
.SS "Related Documentation"
.IP \(em \w'\(em\(em'u
1986 CCITT X.213 Recommendation [1]
.IP \(em \w'\(em\(em'u
ISO 8348 [2]
.IP \(em \w'\(em\(em'u
ISO 8348/AD1 [3]
.IP \(em \w'\(em\(em'u
ISO 8473 [4]
.IP \(em \w'\(em\(em'u
ISO 8208 [5]
.IP \(em \w'\(em\(em'u
ISO 8878 [6]
.IP \(em \w'\(em\(em'u
System V Interface Definition, Issue 2 - Volume 3 [7]
.SS "Role"
.PP
This document specifies an interface that supports the service provided by the
Network Services Definition for Open Systems Interconnection for CCITT
Applications as described in CCITT Recommendation X.213 and ISO 8348 (for
CONS) and ISO8348/Addendum 1 (for CLNS).  These specifications are targeted for
use by developers and testers of protocol modules that require network layer
service.
.SS "Definitions, Acronyms, and Abbreviations"
.TP 18
.I Calling NS user
An NS user that initiates a Network Connection (NC).
.TP
.I Called NS User
An NS user with whom a calling NS user wishes to establish a network connection (NC).
.TP
.I CLNP
Connection-less Network Protocol
.TP
.I CLNS
Connection-less Network Service.
.TP
.I CONP
Connection Oriented Network Protocol
.TP
.I CONS
Connection Oriented Network Service.
.TP
.I DLSAP
Data Link Service Access Point
.TP
.I ISO
International Organization for Standardization
.TP
.I NC
Network Connection
.TP
.I Network User
Kernel level protocol or user level application that is accessing the
services of the network layer.
.TP
.I Network Provider
Network layer entity/entities that provide/s the services of the network
interface.
.TP
.I NPI
Network Provider Interface
.TP
.I NS
Network Service.
.TP
.I NIDU
Network Interface Data Unit
.TP
.I NSAP
Network Service Access Point
.TP
.I NSDU
Network Service Data Unit
.TP
.I OSI
Open Systems Interconnection
.TP
.I QOS
Quality of Service.
.TP
.IR STREAMS (4)
A communication services development facility first available with UNIX System
V Release 3
.SS "The Network Layer"
The Network Layer provides the means to manage the operation of the network.
It is responsible for the routing and management of data exchange between
network-user entities.
.SS "Model of the NPI"
The NPI defines the services provided by the network layer to the network-user
at the boundary between the network layer and the network layer user entity.
The interface consists of a set of primitives defined as
.IR STREAMS (4)
messages that
provide access to the network layer services, and are transferred between the
NS user entity and the NS provider.  These primitives are of two types; ones
that originate from the NS user, and others that originate from the NS
provider.  The primitives that originate from the NS user make requests to the
NS provider, or respond to an event of the NS provider.  The primitives that
originate from the NS provider are either confirmations of a request or are
indications to the NS user that the event has occurred.
.PP
The NPI allows the NS provider to be configured with any network layer user
(such as the OSI Transport Layer) that also conforms to the NPI.  A network
layer user can also be a user program that conforms to the NPI and accesses
the NS provider via
.BR putmsg (2)
and
.BR getmsg (2)
system calls.
.SS "NPI Services"
The features of the NPI are defined in terms of the services provided by the
NS provider,and the individual primitives that may flow between the NS user
and the NS provider.
.PP
The services supported by the NPI are based on two distinct modes of
communication,connection (CONS) and connectionless (CLNS).  In addition, the
NPI supports services for local management.
.SS "CONS"
The main features of the connection mode communication are:
.IP a. 4
It is virtual circuit oriented;
.IP b. 4
It provides transfer of data via a pre-established path;
.IP c. 4
It provides reliable data transfer.
.PP
There are three phases to each instance of communication: Connection
Establishment;Data Transfer; and Connection Termination.  Units of data arrive
at their destination in the same order as they departed their source and the
data is protected against duplication or loss of data units within some
specified quality of service.
.SS "CLNS"
The main features of the connectionless mode communication are:
.IP a. 4
It is datagram oriented;
.IP b. 4
It provides transfer of data in self contained units;
.IP c. 4
There is no logical relationship between these units of data;
.IP d. 4
It is unreliable.
.PP
Connectionless mode communication has no separate phases.  Each unit of data
is transmitted from source to destination independently, appropriate addressing
information is included with each unit of data.  As the units of data are
transmitted independently from source to destination, there are, in general, no
guarantees of proper sequence and completeness of the data stream.
.SS "Local Management"
The NPI specifications also define a set of local management functions that
apply to both CONS and CLNS modes of communication.  These services have local
significance only.
.PP
Tables 1 and 2 summarizes the NPI service primitives by their state and
service.
.sp
.ce 1
.B TABLE 1.  Service Primitives for Connection Mode Data Transfer
.TS
tab(:) box center;
lb|lb|lbw(2.2i)s
l|l|ls.
STATE:SERVICE:PRIMITIVES
_
T{
.ad l
.hy 0
Local
Management
T}:T{
.ad l
.hy 0
Information
Reporting
T}:T{
.ad l
.hy 0
\fBN_INFO_REQ\fR(7),
\fBN_INFO_ACK\fR(7),
\fBN_ERROR_ACK\fR(7)
T}
:_:_
:Bind:T{
.ad l
.hy 0
\fBN_BIND_REQ\fR(7),
\fBN_BIND_ACK\fR(7),
\fBN_UNBIND_REQ\fR(7),
\fBN_OK_ACK\fR(7),
\fBN_ERROR_ACK\fR(7)
T}
:_:_
:T{
.ad l
.hy 0
Options
Management
T}:T{
.ad l
.hy 0
\fBN_OPTMGMT_REQ\fR(7),
\fBN_OK_ACK\fR(7),
\fBN_ERROR_ACK\fR(7)
T}
_
T{
.ad l
.hy 0
Connection
Establishment
T}:T{
.ad l
.hy 0
Connection
Establishment
T}:T{
.ad l
.hy 0
\fBN_CONN_REQ\fR(7),
\fBN_CONN_IND\fR(7),
\fBN_CONN_RES\fR(7),
\fBN_CONN_CON\fR(7),
\fBN_TOKEN_REQ\fR(7),
\fBN_TOKEN_ACK\fR(7),
\fBN_OK_ACK\fR(7),
\fBN_ERROR_ACK\fR(7)
T}
_
T{
.ad l
.hy 0
Connection
Mode Data Transfer
T}:T{
.ad l
.hy 0
Data
Transfer
T}:T{
.ad l
.hy 0
\fBN_DATA_REQ\fR(7),
\fBN_DATA_IND\fR(7),
\fBN_EXDATA_REQ\fR(7),
\fBN_EXDATA_IND\fR(7),
\fBN_DATACK_REQ\fR(7),
\fBN_DATACK_IND\fR(7)
T}
:_:_
:Reset:T{
.ad l
.hy 0
\fBN_RESET_REQ\fR(7),
\fBN_RESET_IND\fR(7),
\fBN_RESET_RES\fR(7),
\fBN_RESET_CON\fR(7)
T}
_
T{
.ad l
.hy 0
Connection
Release
T}:T{
.ad l
.hy 0
Connection
Release
T}:T{
.ad l
.hy 0
\fBN_DISCON_REQ\fR(7),
\fBN_DISCON_IND\fR(7),
\fBN_OK_ACK\fR(7),
\fBN_ERROR_ACK\fR(7)
T}
.TE
.PP
.sp
.ce 1
.B TABLE 2.  Service Primitives for Connectionless Mode Data Transfer
.TS
tab(:) box center;
lb|lb|lbw(2.2i)s
l|l|ls.
STATE:SERVICE:PRIMITIVES
_
T{
.ad l
.hy 0
Local
Management
T}:T{
.ad l
.hy 0
Information
Reporting
T}:T{
.ad l
.hy 0
\fBN_INFO_REQ\fR(7),
\fBN_INFO_ACK\fR(7),
\fBN_ERROR_ACK\fR(7)
T}
:_:_
:Bind:T{
.ad l
.hy 0
\fBN_BIND_REQ\fR(7),
\fBN_BIND_ACK\fR(7),
\fBN_UNBIND_REQ\fR(7),
\fBN_OK_ACK\fR(7),
\fBN_ERROR_ACK\fR(7)
T}
:_:_
:T{
.ad l
.hy 0
Options
Management
T}:T{
.ad l
.hy 0
\fBN_OPTMGMT_REQ\fR(7),
\fBN_OK_ACK\fR(7),
\fBN_ERROR_ACK\fR(7)
T}
_
T{
.ad l
.hy 0
Connectionless
Mode Data Transfer
T}:T{
.ad l
.hy 0
Data
Transfer
T}:T{
.ad l
.hy 0
\fBN_UNITDATA_REQ\fR(7),
\fBN_UNITDATA_IND\fR(7),
\fBN_UDERROR_IND\fR(7)
T}
.TE
.SH "NPI Services Definition"
This section describes the services of the NPI primitives.  Time-sequence
diagrams that illustrate the sequence of primitives are included.  (Conventions
for the time-sequence diagrams are defined in CCITT X.210 [8].) The format of
the primitives will be defined later in this document.
.SS "Local Management Services Definition"
The services defined in this section are outside the scope of the
international standards.  These services apply to both connection-mode as well
as the connection-less modes of communication.  They are invoked for the
initialization/de-initialization of a stream connected to the NS provider.  They
are also used to manage options supported by the NS provider and to report
information on the supported parameter values.
.PP
.B Network Information Reporting Service.
This service provides information on the options supported by the NS provider.
.IP \(em \w'\(em\(em'u
.BR N_INFO_REQ (7):
This primitive requests that the NS provider return the values of all the
supported protocol parameters.  This request may be invoked during any phase.
.IP \(em \w'\(em\(em'u
.BR N_INFO_ACK (7):
This primitive is in response to the
.BR N_INFO_REQ (7)
primitive and returns the
values of the supported protocol parameters to the NS user.
.PP
.B NS User Bind Service.
This service allows a network address to be associated with a stream.  It
allows the NS user to negotiate the number of connect indications that can
remain unacknowledged for that NS user (a connect indication is considered
unacknowledged while it is awaiting a corresponding connect response or
disconnect request from the NS user).  This service also defines a mechanism
that allows a stream (bound to a network address of the NS user) to be reserved
to handle incoming calls only.  This stream is referred to as the listener
stream.
.IP \(em \w'\(em\(em'u
.BR N_BIND_REQ (7):
This primitive requests that the NS user be bound to a particular network
address, and negotiate the number of allowable outstanding connect indications
for that address.
.IP \(em \w'\(em\(em'u
.BR N_BIND_ACK (7):
This primitive is in response to the
.BR N_BIND_REQ (7)
primitive and indicates to the
user that the specified NS user has been bound to a network address.
.PP
.B NS User Unbind Service.
This service allows the NS user to be unbound from a network address.
.IP \(em \w'\(em\(em'u
.BR N_UNBIND_REQ (7):
This primitive requests that the NS user be unbound from
* the network address that it had previously been bound to.
.PP
.B Receipt Acknowledgment Service.
.IP \(em \w'\(em\(em'u
.BR N_OK_ACK (7):
This primitive indicates to the NS user that the previous NS
user originated primitive was received successfully by the NS provider.
.PP
.B Options Management Service.
This service allows the NS user to manage the QOS parameter values associated
with the NS provider.
.IP \(em \w'\(em\(em'u
.BR N_OPTMGMT_REQ (7):
This primitive allows the NS user to select default values for QOS parameters
within the range supported by the NS provider, and to indicate the default
selection of receipt confirmation.
.PP
.B Error Acknowledgment Service.
.IP \(em \w'\(em\(em'u
.BR N_ERROR_ACK (7):
This primitive indicates to the NS user that a non-fatal error has occurred in
the last NS user originated request or response primitive on the stream.
.SS "Connection-Mode Network Services Definition"
This section describes the required network service primitives that define the
CONS interface.
.PP
The queue model for CONS is discussed in more detail in CCITT X.213 section
9.2.  The queue model represents the operation of a network connection in the
abstract by a pair of queues linking the two network addresses.  There is one
queue for each direction of information flow.
.PP
Each queue represents a flow control function in one direction of transfer.
The ability of a user to add objects to a queue will be determined by the
behavior of the user removing objects from that queue, and the state of the
queue.  The pair of queues is considered to be available for each potential NC.
Objects that are entered or removed from the queue are either as a result of
interactions at the two network addresses, or as the result of NS provider
initiatives.
.IP \(em \w'\(em\(em'u
A queue is empty until a connect object has been entered and can be returned
to this state, with loss of its contents, by the NS provider.
.IP \(em \w'\(em\(em'u
Objects may be entered into a queue as a result of the actions of the source
NS user,subject to control by the NS provider;
.IP \(em \w'\(em\(em'u
Objects may also be entered into a queue by the NS provider.
.IP \(em \w'\(em\(em'u
Objects are removed from the queue under the control of the receiving NS
user.
.IP \(em \w'\(em\(em'u
Objects are normally removed under the control of the NS user in the same
order as they were entered except:
.IP \(em \w'\(em\(em'u
if the object is of a type defined to be able to advance ahead of the
preceding object (however, no object is defined to be able to advance ahead of
another object of the same type), or
.IP \(em \w'\(em\(em'u
if the following object is defined to be destructive with respect to the
preceding object on the queue.
.PP
If necessary, the last object on the queue will be deleted to allow a
destructive object to be entered - they will therefore always be added
to the queue.  For example, "disconnect" objects are defined to be destructive
with respect to all other objects.  "Reset" objects are defined to be
destructive with respect to all other objects except "connect", "disconnect",
and other "reset" objects.  Table 3 shows the ordering relationships among the
queue model objects.

.\"Object X CONNECT NORMAL EXP.  DATA RESET DISCObject Y DATA NSDU ACK CONNECT N/A
.\"- - - - DES NORMAL DATA N/A - AA AA DES DES EXP.  NSDU N/A - - AA DES DES DATA
.\"ACK N/A - AA - DES DES RESET N/A - - - - DES DISC N/A N/A N/A N/A N/A AA
.\"Indicates that Object X is defined to be able to advance ahead of
.\"precedingObject Y.

.\"DES Indicates that Object X is defined to be destructive with respect to the
.\"precedingObject Y.  - Indicates that Object X is neither destructive with
.\"respect to Object Y, nor able toadvance ahead of Object Y.  N/A Indicates that
.\"Object X will not occur in a position succeeding Object Y in a validstate of a
.\"queue.

.\"TABLE 3.  Ordering Relationships Between Queue Model Objects
.PP
.B Connection Establishment Phase
A pair of queues is associated with an NC between two network addresses when
the NS provider receives an
.BR N_CONN_REQ (7)
primitive at one of the network
addresses resulting in a connect object being entered into the queue.  The
queues will remain associated with the NC until a
.BR N_DISCON_REQ (7)
primitive
(resulting in a disconnect object) is either entered or removed from a queue.
Similarly, in the queue from the called NS user, objects can be entered into
the queue only after the connect object associated with the
.BR N_CONN_RES (7)
has
been entered into the queue.  Alternatively, the called NS user can enter a
disconnect object into the queue instead of the connect object to terminate
the NC.  The NC establishment procedure will fail if the NS provider is unable
to establish an NC,or if the destination NS user is unable to accept the
.BR N_CONN_IND (7)
(see NC Release primitive definition).
.PP
.B User Primitives for Successful Network Connection Establishment
.IP \(em \w'\(em\(em'u
.BR N_CONN_REQ (7):
This primitive requests that the NS provider make a connection
to the specified destination.
.IP \(em \w'\(em\(em'u
.BR N_CONN_RES (7):
This primitive requests that the NS provider accept a previous connection
indication.
.PP
.B Provider Primitives for Successful Network Connection Establishment
.IP \(em \w'\(em\(em'u
.BR N_CONN_IND (7):
This primitive indicates to the NS user that a connect request
has been made by a user at the specified source address.
.IP \(em \w'\(em\(em'u
.BR N_CONN_CON (7):
This primitive indicates to the NS user that a connect request
has been confirmed on the specified responding address.
.PP
.B Data Transfer Phase
Flow control on the NC is done by management of the queue capacity, and by
allowing objects of certain types to be inserted to the queues, as shown in
Table 4.
.\"
.\"OBJECT X OCTETS OF NORMAL EXPEDITED DATAOBJECT Y DATA/ DATA ACKNOWLEDGEMENT
.\"Octets of NormalData Yes Yes No Expedited Data No Yes No DataAcknowledgement
.\"No No No
.\"
.\"Yes The addition of Object X may prevent further addition of Object Y.  No The
.\"addition of Object X may not prevent the addition of Object Y.
.\"
.\"TABLE 4.  Flow Control Relationships Between Queue Model Objects
.PP
.B User Primitives for Data Transfer
.IP \(em \w'\(em\(em'u
.BR N_DATA_REQ (7):
This primitive requests that the NS provider transfer the
specified data.
.IP \(em \w'\(em\(em'u
.BR N_DATACK_REQ (7):
This primitive requests that the NS provider acknowledge
the data that had previously been received with receipt confirmation
requested.
.IP \(em \w'\(em\(em'u
.BR N_EXDATA_REQ (7):
This primitive requests that the NS provider transfer
the specified expedited network service data unit.
.PP
.B Provider Primitives for Data Transfer
.IP \(em \w'\(em\(em'u
.BR N_DATA_IND (7):
This primitive indicates to the NS user that this message
contains data.
.IP \(em \w'\(em\(em'u
.BR N_DATACK_IND (7):
This primitive indicates to the NS user that the remote NS
user has acknowledged the data that had previously been sent with receipt
confirmation requested.
.IP \(em \w'\(em\(em'u
.BR N_EXDATA_IND (7):
This primitive indicates to the NS user that this message
unit contains expedited data.
.PP
The sequence of primitives may remain incomplete if a
.B N_RESET
or
.B N_DISCON
primitive occurs.
.PP
A NS user must not issue an
.BR N_DATACK_REQ (7)
primitive if no
.BR N_DATA_IND (7)
with
confirmation request set has been received, or if all such
.BR N_DATA_IND (7)
have
been previously acknowledged.  Following a reset procedure
.RB ( N_RESET_REQ (7)
or
.BR N_RESET_IND (7)),
a NS user may not issue aN_DATACK_REQ to acknowledge an
outstanding
.BR N_DATA_IND (7)
received before the reset procedure was signaled.  (Note
-- The withholding of confirmation of receipt by a NS user can have an effect
on the attainable throughput on the NC.)
.PP
.B Reset Operation Primitives
The reset service is used by the NS user to resynchronize the use of the NC,
or by the NS provider to report detected loss of unrecoverable data.
.PP
The reset procedure involves the following interactions:
.IP A. 4
a
.BR N_RESET_REQ (7)
from the NS user, followed by a
.BR N_RESET_CON (7)
from the NS provider;
or
.IP B. 4
a
.BR N_RESET_IND (7)
from the NS provider, followed by a
.BR N_RESET_RES (7)
from the NS user.
.PP
The complete sequence of primitives depends upon the origin/s of the reset
action.  The reset service may be:
.IP 1. 4
invoked by one NS user, leading to interaction (A) with that NS user
and interaction (B) with the peer NS user;
.IP 2. 4
invoked by both NS users, leading to interaction (A) with both NS users;
.IP 3. 4
invoked by the NS provider, leading to interaction (B) with both NS users;
.IP 4. 4
invoked by one NS user and the NS provider, leading to interaction (A) with
the originating NS user and (B) with the peer NS user.
.PP
The
.BR N_RESET_REQ (7)
acts as a synchronization mark in the flow of
.BR N_DATA ,
.BR N_EXDATA ,
and
.B N_DATACK
primitives transmitted by the issuing NS user; the
.BR N_RESET_IND (7)
acts as a synchronization mark in the flow of
.BR N_DATA ,
.BR N_EXDATA ,
and
.B N_DATACK
primitives received by the receiving NS user.  Similarly,
.BR N_RESET_RES (7)
acts as a
synchronization mark in the flow of
.BR N_DATA ,
.BR N_EXDATA ,
and
.B N_DATACK
primitives
transmitted by the responding NS user, while the
.BR N_RESET_CON (7)
acts as a
synchronization mark in the flow of
.BR N_DATA ,
.BR N_EXDATA ,
and
.B N_DATACK
primitives
received by the NS user that originally issued the reset.  The resynchronizing
properties of the reset service are the following:
.IP i. 4
All
.BR N_DATA ,
.BR N_EXDATA ,
and
.B N_DATACK
primitives issued before issuing
the
.BR N_RESET_REQ (7)/ N_RESET_RES (7)
that have not been delivered to the other NS user
before the
.BR N_RESET_IND (7)/ N_RESET_CON (7)
are issued by the NS provider,should be
discarded by the NS provider.
.IP ii. 4
Any
.BR N_DATA ,
.BR N_EXDATA ,
and
.B N_DATACK
primitives issued after the synchronization
mark will not be delivered to the other NS user before the synchronization
mark is received.
.PP
.B User Primitives for Reset Operations
.IP \(em \w'\(em\(em'u
.BR N_RESET_REQ (7):
This primitive requests that the NS provider reset the
network connection.
.IP \(em \w'\(em\(em'u
.BR N_RESET_RES (7):
This primitive indicates to the NS provider that the NS user
has accepted a reset indication.
.PP
.B Provider Primitives for Reset Operations
.IP \(em \w'\(em\(em'u
.BR N_RESET_IND (7):
This primitive indicates to the NS user that the
network connection has been reset.
.IP \(em \w'\(em\(em'u
.BR N_RESET_CON (7):
This primitive indicates to the NS user that the reset request
has been confirmed.
.PP
The sequence of primitives may remain incomplete if a
.B N_DISCON
primitive occurs.
.PP
.B Connection Termination Phase
The NC release procedure is initialized by the insertion of a disconnect
object(associated with a
.BR N_DISCON_REQ) (7)
into the queue.  As shown in Table 3, the disconnect procedure is destructive
with respect to other objects in the queue, and eventually results in the
emptying of queues and termination of the NC connection.
.PP
The sequence of primitives depends on the origin of the release action.  The
sequence may be:
.IP 1. 4
invoked by one NS user, with a request from that NS user leading to an
indication to the other;
.IP 2. 4
invoked by both NS users, with a request from each of the NS users;
.IP 3. 4
invoked by the NS provider, with an indication to each of the NS users;
.IP 4. 4
invoked independently by one NS user and the NS provider, with a request
from the originating NS user and an indication to the other.
.PP
.B User Primitives for Connection Termination
.IP \(em \w'\(em\(em'u
.BR N_DISCON_REQ (7):
This primitive requests that the NS provider deny
an outstanding request for a connection or disconnect an existing connection.
.PP
.B Provider Primitives for Connection Termination
.IP \(em \w'\(em\(em'u
.BR N_DISCON_IND (7):
This primitive indicates to the NS user that either a request
for connection has been denied or an existing connection has been terminated.
.PP
A NS user may reject an NC establishment attempt by issuing a
.BR N_DISCON_REQ (7).
The originator parameter in the
.B N_DISCON
primitives will indicate NS user invoked release.
.PP
If the NS provider is unable to establish an NC, it indicates this to the
requester by an
.BR N_DISCON_IND (7).
The originator in this primitive indicates an NS provider invoked release.
.SS "Connectionless Network Services Definition"
The CLNS allows for the transfer of the NS user data in one or both
directions simultaneously without establishing a network connection.  A set of
primitives are defined that carry user data and control information between
the NS user and NS provider entities.  The primitives are modeled as requests
initiated by the NS user and indications initiated by the NS provider.
Indications may be initiated by the NS provider independently from requests by
the NS user.
.PP
The connectionless network service consists of one phase.
.PP
.B User Request Primitives
.IP \(em \w'\(em\(em'u
.BR N_UNITDATA_REQ (7):
This primitive requests that the NS provider send the data unit to the
specified destination.
.PP
.B Provider Response Primitives
.IP \(em \w'\(em\(em'u
.BR N_UNITDATA_IND (7):
This primitive indicates to the NS user that a data unit has been received
from the specified source address.
.IP \(em \w'\(em\(em'u
.BR N_UDERROR_IND (7):
This primitive indicates to the NS user that the data unit
with the specified destination address and QOS parameters produced an error.
This primitive is specific to CLNS.
.\"
.\"
.\"
.\"
.SS "Local Management"
The following management primitives are common to all modes of network service
provider.
.IP \(em \w'\(em\(em'u
.BR N_INFO_ACK (7):
Requests information concerning the communications device, provider limits,
styles and features.
.IP \(em \w'\(em\(em'u
.BR N_INFO_REQ (7):
Provides information concerning the communications device, provider limits,
styles and features.
.IP \(em \w'\(em\(em'u
.BR N_OPTMGMT_REQ (7):
Requests the management of network provider options.
.IP \(em \w'\(em\(em'u
.BR N_BIND_REQ (7):
Requests the binding of the stream to a network endpoint address.
.IP \(em \w'\(em\(em'u
.BR N_BIND_ACK (7):
Provides acknowledgment of the bound network endpoint address.
.IP \(em \w'\(em\(em'u
.BR N_UNBIND_REQ (7):
Requests the stream be unbound from the bound network endpoint address.
.IP \(em \w'\(em\(em'u
.BR N_OK_ACK (7):
Provides positive acknowledgment of request primitives that require
acknowledgment.
.IP \(em \w'\(em\(em'u
.BR N_ERROR_ACK (7):
Provides negative acknowledgment of request primitives that require
acknowledgment.
.SS "Connectionless Data Transfer"
The following primitives provide for the transfer of data with a
connectionless network service provider.
.IP \(em \w'\(em\(em'u
.BR N_UNITDATA_REQ (7):
Requests the transmission of connectionless data.
.IP \(em \w'\(em\(em'u
.BR N_UNITDATA_IND (7):
Provides indication of the reception of connectionless data.
.IP \(em \w'\(em\(em'u
.BR N_UDERROR_IND (7):
Provides indication of errors encountered in the transmission of
connectionless data.
.SS "Connection Establishment"
The following primitives establish a network connection with a connection
oriented network service provider.
.IP \(em \w'\(em\(em'u
.BR N_CONN_REQ (7):
Requests connection to a peer network endpoint.
.IP \(em \w'\(em\(em'u
.BR N_CONN_CON (7):
Provides confirmation of a connection request.
.IP \(em \w'\(em\(em'u
.BR N_CONN_IND (7):
Provides indication of a connection request from a peer endpoint.
.IP \(em \w'\(em\(em'u
.BR N_CONN_RES (7):
Responds to an outstanding connection indication.
.SS "Connection Data Transfer"
The following primitives provide for the transfer of data with a connection
oriented network service provider.
.PP
.B Data Transfer Service.
The following primitives provide for the transfer of data on the network
connection.
.IP \(em \w'\(em\(em'u
.BR N_DATA_REQ (7):
Requests the transmission of data on a network connection.
.IP \(em \w'\(em\(em'u
.BR N_DATA_IND (7):
Provides indication of the reception of data on a network connection.
.IP \(em \w'\(em\(em'u
.BR N_EXDATA_REQ (7):
Requests the transmission of expedited data on a network connection.
.IP \(em \w'\(em\(em'u
.BR N_EXDATA_IND (7):
Provides indication of the reception of expedited data on a network
connection.
.PP
.B Data Acknowledgment Service.
The following primitives provider for the acknowledgment of data transfer.
.IP \(em \w'\(em\(em'u
.BR N_DATACK_REQ (7):
Requests acknowledgment of the last received data on the network connection.
.IP \(em \w'\(em\(em'u
.BR N_DATACK_IND (7):
Provides indication of acknwowldgment of the last transmitted data on the
network connection.
.SS "Connection Reset"
The following primitives provide for the reset of the network connection.
.IP \(em \w'\(em\(em'u
.BR N_RESET_REQ (7):
Requests that a network connection be reset.
.IP \(em \w'\(em\(em'u
.BR N_RESET_CON (7):
Provides confirmation of the reset of the network connection.
.IP \(em \w'\(em\(em'u
.BR N_RESET_IND (7):
Provides indication of the reset of a network connection.
.IP \(em \w'\(em\(em'u
.BR N_RESET_RES (7):
Responds to an outstanding indication of network connection reset.
.SS "Connection Release"
The following primitives provide for the release of a network connection with
a connection oriented network service provider.
.IP \(em \w'\(em\(em'u
.BR N_DISCON_REQ (7):
Requests that a network connection be released.
.IP \(em \w'\(em\(em'u
.BR N_DISCON_IND (7):
Provides indication that a network connection has been released.
.SH "SEE ALSO"
.BR N_BIND_ACK (7),
.BR N_BIND_REQ (7),
.BR N_CONN_CON (7),
.BR N_CONN_IND (7),
.BR N_CONN_REQ (7),
.BR N_CONN_RES (7),
.BR N_DATACK_IND (7),
.BR N_DATACK_REQ (7),
.BR N_DATA_IND (7),
.BR N_DATA_REQ (7),
.BR N_DISCON_IND (7),
.BR N_DISCON_REQ (7),
.BR N_ERROR_ACK (7),
.BR N_EXDATA_IND (7),
.BR N_EXDATA_REQ (7),
.BR N_INFO_ACK (7),
.BR N_INFO_REQ (7),
.BR N_OK_ACK (7),
.BR N_OPTMGMT_REQ (7),
.BR N_RESET_CON (7),
.BR N_RESET_IND (7),
.BR N_RESET_REQ (7),
.BR N_RESET_RES (7),
.BR N_UDERROR_IND (7),
.BR N_UNBIND_REQ (7),
.BR N_UNITDATA_IND (7),
.BR N_UNITDATA_REQ (7).
.SH HISTORY
.PP
The Network Provider Interface first appeared in SVR 4.
.[
svr4
.]
.SH CONFORMANCE
.PP
This interface conforms to NPI Revision 2.
.[
npi
.]
.XX
.[
magic
.]
.[
advprog
.]
.[
$LIST$
.]
.T2
