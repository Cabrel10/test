'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) putnextctl.9.man,v 0.9.2.27 2006/04/05 09:44:15 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:15 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" putnextctl.9.man,v
.\" Revision 0.9.2.27  2006/04/05 09:44:15  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH PUTNEXTCTL 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B putnextctl
\- put a control message on the downstream \fISTREAMS\fR message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "int putnextctl(queue_t *" q ", int " type );
.\"
.\"
.SH ARGUMENTS
.TP
.I q
the queue from which to put the control message.
.PD 0
.TP
.I type
the type of the control message.
.PD
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.PP
.BR putnextctl ()
creates a zero-length control message of type
.I type
and calls
.BR putnext (9)
for the queue pointed to by
.I q
to place the message on the subsequent queue.
If
.I type
is a data message type
.RB ( M_DATA "(9), " M_PROTO "(9) or " M_PCPROTO (9))
and not a control message type,
.BR putnextctl ()
will fail.
Note that
.BR putnextctl ()
can succeed for message type
.BR M_DELAY (9),
which is normally a data message type according to
.BR datamsg (9).
.PP
.BR putnextctl ()
allocates the message block for the message with priority
.BR BPRI_HI ,
[see
.BR allocb (9)].
.BR putnextctl ()
fails if message block allocation fails.
.\"
.\"
.SH USAGE
.PP
.BR putnextctl ()
is used by
.I STREAMS
drivers and modules to pass simple messages that contain a zero-length data buffer [e.g.,
.BR M_HANGUP (9)]
along a Stream.  However,
.BR putnextctl ()
is not normally used by the Stream head because it will not block awaiting the availability of a
message block.  For passing messages to a Stream end,
.BR putctl (9)
should be used instead.
.\"
.\"
.SH RETURN
.PP
Upon success,
.BR putnextctl ()
returns
.I true
.RB ( 1 ).
Upon failure,
.BR putnextctl ()
returns
.I false
.RB ( 0 ).
.\"
.\"
.SH ERRORS
.PP
.BR putnextctl ()
fails and returns
.I false
.RB ( 0 )
if the specified
.I type
is not a control message type, or if the allocation of the necessary message blocks fails.
.\"
.\"
.SH CONTEXT
.PP
.BR putnextctl ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts (tasklets and bottom halves), and interrupt service routines;
however, see the considerations listed under
.BR putnext (9).
.PP
.BR putnextctl ()
must be called from a
.I STREAMS
synchronous context for the Stream containing
.IR q .
.\"
.\"
.SH MP-STREAMS
.PP
.BR putnextctl ()
is MP-safe when called from the proper context.  However, the caller is responsible for ensuring the
validity of the passed in queue pointer,
.IR q .
See also the considerations listed under
.BR putnext (9),
and
.BR mp-streams (9).
.\"
.\"
.SH NOTICES
.PP
.BR putnextctl ()
can succeed with a
.I type
argument of
.BR M_DELAY (9).
.\"
.\"
.SH IMPLEMENTATION
.PP
Message blocks allocated by
.BR putnextctl ()
are allocated with priority
.BR BPRI_HI ,
and passed along the Stream with
.BR putnext (9).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR datamsg (9),
.BR freezestr (9),
.BR putnext (9),
.BR putctl (9),
.BR putctl1 (9),
.BR putnextctl1 (9).
.\"
.\"
.SH BUGS
.PP
.BR putnextctl ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR putnextctl ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4" ,
.[
svr4dk
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IR AIX \(rg,
.IR UXP/V \(rg
and
.I LiS
state that
.BR putnextctl ()
will fail if the
.I type
argument is
.BR M_DATA "(9), " M_PROTO "(9), " M_PCPROTO "(9) or " M_DELAY (9).
.[
aixdoc
.]
.[
uxpdoc
.]
.[
lis
.]
.IR IRIX \(rg,
.IR Solaris \(rg,
.IR SUPER-UX \(rg
and
.IR UnixWare \(rg
state that
.BR putnextctl ()
will fail if the
.I type
argument is
.BR M_DATA "(9), " M_PROTO "(9) or " M_PCPROTO "(9), but  not " M_DELAY (9).
.[
irixdoc
.]
.[
soldoc
.]
.[
suxdoc
.]
.[
uw7doc
.]
.IR IRIX \(rg,
.IR Solaris \(rg
and
.IR UnixWare \(rg
even show an example using
.BR M_DELAY (9).
.[
irixdoc
.]
.[
soldoc
.]
.[
uw7doc
.]
.IR OSF/1 \(rg
states that
.BR putnextctl ()
will fail if the
.I type
argument is
.BR M_DELAY "(9), " M_PROTO "(9) or " M_PCPROTO "(9), but not " M_DATA (9),
which is quite peculiar, and then goes on to give an example for
.BR M_DELAY (9).
.[
osfdoc
.]
.BR M_DELAY "(9) should probably be " M_DATA (9)
in the failure list.
This means that
.IR AIX \(rg,
.IR UXP/V \(rg
and
.I LiS
are the oddballs in the documented behaviour.
Otherwise,
.BR putnextctl ()
is fairly consistent on permitting
.BR M_DELAY (9)
messages.
.B Linux Fast-STREAMS
.BR putnextctl ()
allows a
.I type
of
.BR M_DELAY (9)
to be specified.
.IP ""
Portable
.I STREAMS
drivers and modules will not pass a type of
.BR M_DELAY (9)
to
.BR putnextctl ().
.IP \(em
.IR HP-UX \(rg
.[
hpuxspg
.]
lists
.BR putnextctl ()
as a function that can only be passed a queue in the queue pair currently
being synchronized within a module procedure.
.IR HP-UX \(rg
.[
hpuxspg
.]
also lists
.BR putnextctl ()
as a utility that cannot be called from user functions or
.RI non- STREAMS
code; that is, contexts asynchronous to the Stream containing
.IR q .
.IP ""
.IR HP-UX \(rg
compatible drivers and modules will not call
.BR putnextctl ()
from outside of a
.BR qinit (9)
routine for the queue pair of
.IR q .
.IP \(em
.BR putnextctl ()
is not bug for bug compatible with
.IR LiS .
.IP ""
.BR putnextctl ()
returns failure when the operation fails.
Under
.IR LiS ,
.BR putnextctl ()
will return success even if the operation fails because of the following
conditions:
.IR q " and " q->q_next
are not
.BR NULL ,
but
.I q->q_next
points to something other than a queue structure;
the queue pointed to by
.I q->q_next
has a
.I q_info
pointer of
.BR NULL ;
the queue pointed to by
.I q->q_next
has no
.IR qi_putp (9)
procedure; or the queue pointed to by
.I q->q_next
is closing, or the queue has had
.IR qi_putp (9)
and
.IR qi_srvp (9)
procedure processing turned off
(e.g. with
.BR qprocsoff (9)).
.I LiS
should return failure when the operation fails.
.IP \(em
.BR putnextctl ()
allocates a message block and calls
.BR putnext (9).
For differences from
.IR LiS ,
see
.BR putnext (9).
.IP \(em
.BR putnextctl ()
protects dereferencing of the
.I q->q_next
pointer with the stream head read lock.
.I LiS
implements
.BR putnextctl ()
with a call to
.BR putctl (9)
using the
.I q->q_next
pointer for the queue.
.IP \(em
.BR putnextctl ()
may be called on a stream frozen with
.BR freezestr (9).
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg
.[
suxspg
.]
and
.IR UnixWare \(rg
.[
uw7spg
.]
do not permit
.BR putnextctl ()
to be called on a stream frozen with
.BR freezestr (9).
.IP ""
Portable
.I STREAMS
drivers and modules will not call
.BR putnextctl ()
on a stream frozen by the caller with
.BR freezestr (9).
.\".IP \(em
.\"Symbol
.\".BR lis_putnextctl ()
.\"is provided for compatibility with
.\".IR LiS .
.\"See
.\".BR liscompat (9).
.\".BR lis_putnextctl ()
.\"simply calls
.\".BR putnextctl ().
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.[
uslspg
.]
.\"
.\"
.SH HISTORY
.PP
.BR putnextctl ()
first appeared in
.IR "SVR 4.0 MP" " and " "SVR 4.2 MP" .
.[
svr4dk
.]
.[
usldk
.]
.\"
.\"
.[
$LIST$
.]
.TI
