'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) noenable.9.man,v 0.9.2.24 2006/04/05 09:44:14 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:14 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" noenable.9.man,v
.\" Revision 0.9.2.24  2006/04/05 09:44:14  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH NOENABLE 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B noenable
\- disables a \fISTREAMS\fR message queue from being scheduled
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "void noenable(queue_t *" q ");
.\"
.\"
.SH ARGUMENTS
.TP
.I q
the queue for which to suppress scheduling.
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.PP
.BR noenable ()
sets the
.B QNOENB
flag on the specified queue,
.IR q .
This tells the
.I STREAMS
scheduler that the queue not be enabled (scheduled for service by
.BR runqueues (9))
when a
.I ordinary priority
message is enqueued by
.BR putq (9)
or
.BR putbq (9),
or which any messae is enqueued by
.BR insq (9).
.BR noenable ()
has no effect on the enablig of queues (scheduling of queue
.IR qi_srvp (9)
procedures) when the queue is
back-enabled,
when
.BR qenable (9)
is called explicitly,
or when a message of a
.I high priority
message type is enqueued with
.BR putq (9)
or
.BR putbq (9).
.PP
.BR noenable ()
can be cancelled with
.BR enableok (9).
If
.BR noenable ()
has been called for a queue and
.BR enableok (9)
has not subsequently been called for the same queue, a second call to
.BR noenable ()
for the queue will have no effect.
Whether a queue has been disabled with a call to
.BR noenable ()
can be tested with
.BR canenable (9).
.\"
.\"
.SH USAGE
.PP
.BR noenable ()
can be used to temporarily suspend queue
.IR qi_srvp (9)
procedure processing for a
queue for
.I ordinary priority
messages enqueued with
.BR putq (9)
and
.BR putbq (9),
and any messages enqueued with
.BR insq (9).
This permits data messages to be enqueued with
.BR putq (9)
or
.BR putbq (9),
and any message to be enqueued with
.BR insq (9),
without enabling the queue (invoking the queue's
.IR qi_srvp (9)
procedure).
.PP
This facility can be used to provide message coallescing capabilities on read or write queues.
For example, multiple messages can be enqueued by a queue's
.IR qi_putp (9)
procedure without invoking the queue's
.IR qi_srvp (9)
procedure until a criteria is met.
Once the a sufficient time period has elapsed, or once a sufficient number of bytes have been
enqueued, the
.IR qi_putp (9)
procedure, or a
.BR timeout (9)
callback, can explicity invoke the
.IR qi_srvp (9)
procedure with
.BR qenable (9).
The queue's
.IR qi_srvp (9)
procedure, thus invoked, may coalesce smaller messages into larger ones.
.PP
Canonical processing in the Line Discipline,
.BR ldterm (4),
module can use this capability to perform a similar function.
.\"
.\"
.SH RETURN
.PP
.BR noenable ()
sets the
.B QNOENB
flag and returns void.
.\"
.\"
.SH ERRORS
.PP
.BR noenable ()
always succeeds.
.\"
.\"
.SH NOTICES
.PP
.BR noenable ()
does not remove the queue from the current
.BR runqueues (9)
schedule list.  It only sets the
.B QNOENB
flag to indicate whether the queue should be subsequently scheduled.
To stop a queue from being scheduled, use
.BR qprocsoff (9).
.\"
.\"
.SH CONTEXT
.PP
.BR noenable ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts (tasklets and bottom halves), and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR noenable ()
is MP-safe.
.BR noenable ()
uses atomic bit operations and does not write lock the queue.  Therefore,
.BR noenable ()
can be called for a queue that has been frozen with
.BR freezestr (9).
No global locks need to be held across a call to
.BR noenable ()
and
.BR noenable ()
takes no locks.
.PP
If one thread disables a queue with
.BR noenable ()
and another enables the queue with
.BR enableok (9),
there will be a race condition on the
.B QNOENB
flag.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR appq (9),
.BR canenable (9),
.BR enableok (9),
.BR freezestr (9),
.BR insq (9),
.BR putbq (9),
.BR putq (9),
.BR qenable (9),
.BR runqueues (9).
.\"
.\"
.SH BUGS
.PP
.BR noenable ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR noenable ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and systems based on
.IR "SVR 4" ,
.[
svr4spg
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
The function of
.BR noenable ()
on all implementations is presumably the same:
.BR noenable ()
simply sets the
.B QNOENB
flag in the
.I q_flag
member of the
.BR queue (9)
structure.  It is the effect of setting this flag on other
.I STREAMS
utility functions and the
.I STREAMS
scheduler and flow control mechanisms that tend to differ, at least in the documentation.
.IP \(em
.BR noenable ()
uses atomic bit operations and does not require taking the queue write lock.
This makes
.BR noenable ()
safe for use on a write locked stream that has been frozen with
.BR freezestr (9).
.I LiS
takes the queue spin lock and uses normal bit operations to set the flag.
.IP \(em
.BR noenable ()
may be called on a stream frozen with
.BR freezestr (9).
.IR "SVR 4.2MP DDI/DKI" ,
.[
usldk
.]
.IR SUPER-UX \(rg
.[
suxspg
.]
and
.IR UnixWare \(rg
.[
uw7spg
.]
do not permit
.BR noenable ()
to be called on a stream frozen with
.BR freezestr (9).
.IR Solaris \(rg
.[
solspg
.]
permits
.BR noenable ()
to be called on a stream frozen with
.BR freezestr (9).
.IP ""
Portable
.I STREAMS
drivers and modules will not invoke
.BR noenable ()
on a stream that has previously been frozen with
.BR freezestr (9).
.IP \(em
.BR noenable ()
called with an invalid
.I q
argument will have an undefined result.
In referenced versions of
.I LiS
.[
LiS
.]
the result is undefined in the same situations due to an
.I LiS
coding error.
Repaired versions of
.I LiS
will make
.BR noenable ()
fail silently in these situations.
.IP ""
Portable
.I STREAMS
drivers and modules will not invoke
.BR noenable ()
with an invalid
.I q
argument.
.IP \(em
.BR noenable ()
supresses the scheduling of queues for both
.I high priority
and
.I ordinary priority
messages enqueued with
.BR appq (9).
Only
.I LiS
provides the
.BR appq (9)
function so the behaviour of
.BR noenable ()
with regard to
.BR appq (9)
is non-portable anyway.
As with
.BR insq (9)
.I LiS
suppresses the scheduling of queues for any message enqueued with
.BR appq (9).
.IP ""
Portable
.I STREAMS
drivers and modules will not use the
.BR appq (9)
function call.
.I STREAMS
drivers and modules using the
.BR appq (9)
function call should not rely on the
.I LiS
behavior with regard to
.BR noenable ().
.IP \(em
.BR noenable ()
does not suppress the scheduling of queues when back-enabling is performed,
when
.BR qenable (9)
is explicitly called, or when
.I high priority
messages are enqueued with
.BR putq (9)
or
.BR putbq (9).
.IP ""
.IR AIX \(rg,
.IR HP-UX \(rg
and
.IR UXP/V \(rg
state that
.BR noenable ()
disables the scheduling of queues resulting from a
.I ordinary priority
message being placed on the queue with
.BR putq (9)
or
.BR putbq (9)
and that it disables scheduling of queues resulting from any message being
placed on the queue with
.BR insq (9).
.[
aixdoc
.]
.[
uxpdoc
.]
.I LiS
also follows this behaviour.
.[
lis
.]
.IP ""
.IR OSF/1 \(rg
and
.IR Solaris \(rg,
document
.BR noenable ()
a suppressing enabling of queues when an
.I ordinary priority
message is enqueued with
.BR putq (9),
.BR putbq (9),
or
.BR insq (9),
but makes no mention of
.I high priority
messages.
.IP ""
.IR Solaris \(rg
states that queue class is ignored by
.BR insq (9),
but lump
.BR insq (9)
together with
.BR putbq (9)
and
.BR putq (9)
when describing
.BR noenable ().
.[
osfdoc
.]
.[
soldoc
.]
.IR OSF/1 \(rg,
.IR Solaris \(rg,
.IR SUPER-UX \(rg
and
.IR UnixWare \(rg
state that
.BR noenable ()
disables the scheduling of queues resulting from a
.I ordinary priority
message being placed on the queue with
.BR putq (9),
.BR putbq (9)
or
.BR insq (9),
and that the scheduling of queues resulting from back-enabling or
.I high priority
messages being enqueued is never suppressed with
.BR noenable ().
.[
osfdoc
.]
.[
soldoc
.]
.[
suxdoc
.]
.[
uw7doc
.]
Yet
.IR SUPER-UX \(rg
documents
.BR insq (9)
as enabling the queue when any message is enqueued by
.BR insq (9)
unless
.BR noenable ()
has been called for the queue.
.[
suxdoc
.]
.\".IP \(em
.IR HP-UX \(rg
.[
hpuxspg
.]
does not talk about
.BR insq (9)
behaviour.
.\".IP \(em
.IP ""
Portable
.I STREAMS
drivers and modules should not rely upon the behaviour of
.BR insq (9)
with regard to
.I high priority
messages when
.BR noenable ()
is in effect.
The best practice is to explicitly enable, using
.BR qenable (9),
the queue immediately after a
.I high priority
message is inserted into the queue with
.BR insq (9);
thus yeilding like behaviour across all these systems.
.\".IP \(em
.\"Symbol
.\".BR lis_safe_noenable ()
.\"is provided for compatibility with
.\".IR LiS .
.\"See
.\".BR liscompat (9).
.\".BR lis_safe_noenable ()
.\"simply calls
.\".BR noenable ().
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR noenable ()
appears as part of
.IR "SVR 4.0 STREAMS" .
.[
svr4spg
.]
.PP
.BR noenable ()
first appeared in
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
