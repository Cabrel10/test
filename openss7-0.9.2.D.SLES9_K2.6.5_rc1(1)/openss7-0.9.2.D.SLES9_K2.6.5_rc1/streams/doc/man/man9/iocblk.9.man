'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) iocblk.9.man,v 0.9.2.13 2006/04/05 09:44:13 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:13 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" iocblk.9.man,v
.\" Revision 0.9.2.13  2006/04/05 09:44:13  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH IOCBLK 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B iocblk
\- \fISTREAMS\fP input-output control block structure
.\"
.\"
.SH SYNOPSIS
.PP
.nf
\fC\s-1
.B #include <sys/stream.h>

struct iocblk {
    int ioc_cmd;        /* command to perform */
    cred_t *ioc_cr;     /* credentials */
    uint ioc_id;        /* id of this ioctl */
#if defined __LP64__ && defined CONFIG_STREAMS_LIS_BCM
    uint ioc_count;     /* size of the data field */
#else
    ulong ioc_count;    /* size of the data field */
#endif
    int ioc_error;      /* ioctl error code (for errno) */
    int ioc_rval;       /* system call return value */
    long ioc_filler[4]; /* reserved for future use */
#define ioc_flag ioc_filler[1]; /* data model, IOC_NONE or IOC_ILP32 */
};

#define ioc_uid         ioc_cr->cr_uid
#define ioc_gid         ioc_cr->cr_gid
\s+1\fP
.fi
.\"
.\"
.SH MEMBERS
.PP
The
.B iocblk
structure contains the following members:
.\" ----------------------
.TP \w'ioc_count\(em'u
.I ioc_cmd
current input-output control command;
.PD 0
.\" ----------------------
.TP
.I ioc_cr
pointer to the invoking user credentials;
.\" ----------------------
.TP
.I ioc_id
current input-output control identification number;
.\" ----------------------
.TP
.I ioc_count
amount of data (in bytes) in an attached
.BR M_DATA (9)
message block, or the special value,
.BR TRANSPARENT .
.\" ----------------------
.TP
.I ioc_error
error number to return in
.BR errno (3);
.\" ----------------------
.TP
.I ioc_rval
return value to\
.BR ioctl (2s)
call;
.\" ----------------------
.TP
.I ioc_filler
padding for SVR 4 compatibility.
.\" ----------------------
.TP
.I ioc_flag
modifier flags (see
.IR \(lq\)COMPATIBILITY\(rq\) ,
below);
.PD
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.PP
The
.B iocblk
structure is one of a set of
.BR ioctypes (9)
structures including
.BR iocblk (9),
.BR copyreq (9),
and
.BR copyresp (9),
that are used for communicating between the
Stream head
or an internal driver or module using
.I STREAMS
messages.  The messages used and the placement of these structures into messages is illustrated in
the table below:
.RS 0
.sp
.TS
tab(:);
lelele
lbelelbe.
message:direction:contains
\_:\_:\_
M_IOCTL\fR(9):downstream:iocblk\fR(9)
M_COPYIN\fR(9):upstream:copyreq\fR(9)
M_COPYOUT\fR(9):upstream:copyreq\fR(9)
M_IOCDATA\fR(9):downstream:copyresp\fR(9)
M_IOCACK\fR(9):upstream:iocblk\fR(9)
M_IOCNAK\fR(9):upstream:iocblk\fR(9)
M_CTL\fR(9):both:iocblk\fR(9)
.TE
.sp
.RE
.PP
When the
.B iocblk
structure is part of a
.BR M_IOCTL (9)
message, the structure is associated with a command request; part of a
.BR M_IOCACK (9)
message, a positive acknowledgement of the command; and,
.BR M_IOCNAK (9)
message,
a negative acknowledgement.
When the structure is part of a
.BR M_CTL (9)
message (as with the
.BR ldterm (4)
.I STREAMS
module),
the
.I ioc_cmd
member itself will distinguish between a request and acknowledgement.  See
.BR ldterm (4).
.\"
.SS M_IOCTL
.PP
The
.BR M_IOCTL (9)
is sent downstream from the stream head or module to request an input-output control.
.PP
The
.I ioc_id
is a unique input-output control identification number.  This identifier is established by the
stream head.  Most
.I STREAMS
implementations only allow one input-output control to be active at a time.  However, an
input-output control may be abandonned by the stream head if a response is not forthcoming within a
time interval.  In that case, another input-output control may have been invoked.  This subsequent
input-output control will have a different identifier.  By tracking the identifier, the
.I STREAMS
stream head or stream end can determine if requests, responses or acknowledgements belong to the
same transaction.
.PP
For input, as part of a
.BR M_IOCTL (9)
or
.BR M_CTL (9)
message, the
.I ioc_count
member is only significant when the input-output control request derives from an internal module or
driver, or if the request was generated from a
.B I_STR
input-output control (see
.BR streamio (2))
from the stream head.  The data in the
.BR M_DATA (9)
block contains
.I ioc_count
bytes of data that was copied in from the user or was supplied by the sending driver or module.
.PP
Otherwise, if the input-output control derives from a transparent input-output control (see
.BR ioctl (2s))
from the stream head, then the value of the
.I ioc_count
member will be the special value,
.BR TRANSPARENT .
Transparent input-output controls require the use of the
.BR M_COPYIN , (9)
.BR M_COPYOUT (9)
and
.BR M_IOCDATA (9)
messages, containing the
.BR copyreq (9)
and
.BR copyresp (9)
data structures.
.PP
The
.I ioc_flag
field is significant in the
.B M_IOCTL (9)
message.  It is set by the Stream head an indicates to the module or driver the C language model
from which the
.BR ioctl (2s)
operation originated.  For an
.B ILP32
kernel, this field will always be set to zero
.RB ( 0 ", " IOC_NONE ).
For an
.B LP64
kernel, this field will either be set to
.B IOC_NATIVE
to indicate that the
.BR ioctl (2s)
originated from the same C language model as the kernel
.RB ( LP64 ),
or
.B IOC_ILP32
to indicate that the
.BR ioctl (2s)
originated from a different C language model than the kernel
.RB ( ILP32 ).
.\".\"
.\".SS M_COPYIN
.\".PP
.\"The
.\".BR M_COPYIN (9)
.\"message is sent upstream from the driver or module to the originator of the
.\".BR M_IOCTL (9)
.\"request, to request that the stream head copy in an amount of data from the user.  The same
.\".I ioc_id
.\"field is used in place in the
.\".BR copyreq (9)
.\"structure in the message.
.\"For additional information on the
.\".BR M_COPYIN (9)
.\"operation, see
.\".BR copyreq (9).
.\".\"
.\".SS M_COPYOUT
.\".PP
.\"The
.\".BR M_COPYOUT (9)
.\"message is sent upstream from the driver or module to the originator of the
.\".BR M_IOCTL (9)
.\"request, to request that the stream head copy out an amount of data to the user.  The same
.\".I ioc_cmd
.\"and
.\".I ioc_id
.\"fields are used in place in the
.\".BR copyreq (9)
.\"structure in the message.
.\"For additional information on the
.\".BR M_COPYOUT (9)
.\"operation, see
.\".BR copyreq (9).
.\".\"
.\".SS M_IOCDATA
.\".PP
.\"The
.\".BR M_IOCDATA (9)
.\"message is sent downtream from the stream head or module to indicate the success or failure of the
.\".BR M_COPYIN (9)
.\"or
.\".BR M_COPYOUT (9)
.\"operation.  The same
.\".I ioc_cmd
.\"and
.\".I ioc_id
.\"fields are used in place in the
.\".BR copyresp (9)
.\"structure in the message.
.\"For additional information on the
.\".BR M_IOCDATA (9)
.\"operation, see
.\".BR copyresp (9).
.\"
.SS M_IOCACK and M_IOCNAK
.PP
The
.BR M_IOCACK (9)
message is sent upstream to complete the input-output control operation with success and provide
positive acknowledgement, return value and error value for the request.
The
.BR M_IOCNAK (9)
message is sent upstream to complete the input-output control operation with failure and provide
negative acknowledgement, return value and error value for the request.
.PP
On output, in a
.BR M_IOCACK (9)
or
.BR M_CTL (9)
message, the
.I ioc_count
member indicates the amount of data bytes in the attached
.BR M_DATA (9)
message that will be copyied out to the user upon return from the
.BR streamio (2)
call.
This can only be used for internal controls using the
.BR M_CTL (9)
message, or for a
.BR M_IOCACK (9)
message in response to a
.BR M_IOCTL (9)
message that contained a
.I ioc_count
not equal to
.BR TRANSPARENT .
.PP
The
.I ioc_error
member is the value that will be stored in the
.IR errno (3)
variable upon return from the
.BR ioctl (2s)
call on both
.BR M_IOCACK (9)
and
.BR M_IOCNAK (9)
responses to
.BR M_IOCTL (9).
The
.I ioc_rval
member is the value that will be the return value of the
.BR ioctl (2s)
or
.BR streamio (2)
call on
.BR M_IOCACK (9).
.PP
The
.I ioc_flag
field in the
.BR M_IOCACK (9)
and
.BR M_IOCNAK (9)
messages is ignored by the Stream head.
.\"
.SS M_CTL
.PP
The
.BR M_CTL (9)
message is sent upstream or downstream between modules.  For an example, see
.BR ldterm (4).
When sent downstream, it operates in a manner similar to the
.BR M_IOCTL (9)
message described above.
When sent upstream, it operates in a manner similar to the
.BR M_IOCACK (9)
and
.BR M_IOCNAK (9)
messages described above.
.\"
.\"
.SH CONTEXT
.PP
Functions that operate on the
input-output control block
structure can be called from any context.  However, it is the caller's responsibility to ensure that
the calling thread has exclusive access to the
input-output control block structure.
When the
input-output control block structure
is contained in an
.BR M_IOCTL (9)
message that has just been removed from a
.BR queue (9)
in a
.IR qi_putp (9)
or
.IR qi_srvp (9)
procedure of the queue,
input-output control block
exclusivity is normally guaranteed.
.\"
.\"
.SH MP-STREAMS
.PP
Functions that access the
.B iocblk
structure are MP-safe.  However, it is the caller's responsibility to ensure exclusive access to the
structure before altering any of the members of the structure.
.PP
Because the input-output control block is normally stored in a
.I STREAMS
message, see
.BR datab (9)
for additional information.
.\"
.\"
.\".SH NOTICES
.\".PP
.\"
.\"
.SH EXAMPLES
.PP
See
.BR M_IOCTL (9)
for an example.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR datab (9),
.BR queue (9),
.IR qi_putp (9),
.IR qi_srvp (9).
.\"
.\"
.SH COMPATIBILITY
.PP
The
.B iocblk
structure is compatible with
.IR "SVR 4.2 MP EFT" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4.2" ,
.[
svr42
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IR Solaris \(rg
documents the
.I ioc_flag
member.
.[
soldoc
.]
.IR IRIX \(rg,
.IR SUPER-UX \(rg,
.IR UnixWare \(rg
and
.IR UXP/V \(rg
do not document the
.I ioc_flag
member.
.[
suxspg
.]
.[
uw7spg
.]
.[
uxpspg
.]
.IR Solaris \(rg
uses the
.I ioc_flag
member to indicate whether the input output control that invoked the operation was native to the
kernel
.RB ( IOC_NATIVE ") or (" IOC_NONE )
or was a 32-bit operation invoked on a kernel with 64-bit longs and pointers
.RB ( IOC_ILP32 ).
.B @PACKAGE_TITLE@
supports this flag for compatibility with modules or drivers written for
.IR Solaris \(rg.
.IP ""
Portable
.I STREAMS
drivers and modules will not access the
.I ioc_flag
member.
.IP \(em
.IR UnixWare \(rg
documents the
.I ioc_uid
and
.I ioc_gid
fields for
.IR "SCO OpenServer" \(rg
compatibility.
.I ioc_uid
and
.I ioc_gid
were present in
.IR "SVR 3.2" .
.[
svr3
.]
.IP ""
Portable
.I STREAMS
drivers and modules will not use the
.B ioc_uid
nor
.B iod_gid
macros and will not attempt to access the old
.I "SVR 3.2"
members.
.IP \(em
The order and size of the various members of the
.BR iocblk (9)
structure, and the associated aligned
.BR copyreq (9)
and
.BR copyresp (9)
structures, vary in
.I STREAMS
from implementation to implementation.  Some implementations have different structure definitions
depending upon the word size of a specific architecture.
.B @PACKAGE_TITLE@
.[
lfs
.]
follows the
.IR "SVR 4.2"
implementation as closely as possible.
.IP ""
Portable
.I STREAMS
drivers and modules will not rely upon a specific overall size of the
.BR iocblk (9)
structure, or the offset or alignment of any of its members.
.IP \(em
Lining up these input-output control block data structures is tedious and uninteresting.  See
.BR ioctypes (9)
for more information.
Various implementations exhibit various alignments.
.IP ""
Portable
.I STREAMS
drivers and modules will not rely upon alignment of any fields except the first three fields of each
structure, and the alignment and preservation of the
.I cq_private
and
.I cp_private
fields.
That is all that is guaranteed by the
.IR "SVR 4.2 SPG" .
.[
svr42spg
.]
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 EFT STREAMS" .
.[
svr42spg
.]
.\"
.\"
.SH HISTORY
.PP
The
.B iocblk
structure was combined with the
.BR copyreq (9)
and
.BR copyresp (9)
structures (see
.BR ioctypes (9))
in
.IR "SVR 4.0 STREAMS" .
.PP
The
.B iocblk
structure was introduced in
.IR "SVR 3" .
.[
svr3
.]
.\"
.\"
.[
$LIST$
.]
.TI
