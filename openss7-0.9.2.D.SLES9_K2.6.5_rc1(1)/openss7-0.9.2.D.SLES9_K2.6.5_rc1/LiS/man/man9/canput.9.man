'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) canput.9.man,v 1.1.4.5 2006/04/05 09:42:43 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:42:43 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" canput.9.man,v
.\" Revision 1.1.4.5  2006/04/05 09:42:43  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database lis.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so lis.macros
.\"
.\"
.TH CANPUT 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B canput, lis_canput
\- test flow control on a \fISTREAMS\fR message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP 8
.BI "int canput(queue_t *" q );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I q
the queue to test for flow control.
.\"
.\"
.SH DESCRIPTION
.PP
.BR canput ()
checks whether the stream is flow controlled starting at the
specified queue,
.IR q .
.BR canput ()
looks for the next queue which has a service routine or which has no
next queue.
.PP
If the next queue has the
.B QFULL
flag is clear indicating that the queue is not full, then
.BR canput ()
will return true (1).
.PP
If the next queue has the the
.B QFULL
flag is set indicating that the queue is full,
then
.BR canput ()
will return false (0).
.PP
When
.BR canput ()
returns false (0), it also sets the
.B QWANTW
flag for the queue upon which
.BR canput ()
stopped, indicating that the
.I STREAMS
executive should backenable
service procedures when the flow controlled queue is
no longer full.
.PP
It is the responsibility of a
.I STREAMS
module putting a band zero (0)
non-priority message to a message queue to check for flow control using
.BR canput ()
before placing a message on the queue with
.BR putq (9).
.\"
.\"
.SH RETURN
.PP
.BR canput ()
returns false (0) when the specified
.I STREAMS
message queue is flow controlled
and returns true (1) when the specified
.I STREAMS
message queue is not flow
controlled.
.\"
.\"
.SH ERRORS
.PP
.BR canput ()
always succeeds for a valid
.IR q .
If
.I q
is invalid, the result is undefined.
.\"
.\"
.SH CONTEXT
.PP
.BR canput ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR canput ()
is MP-safe.
.\"
.\"
.SH NOTICES
.PP
It is the responsibility of a
.I STREAMS
module putting a band zero (0)
non-priority message to a message queue to check for flow control using
.BR canput ()
before placing a message on the queue with
.BR putq (9).
.\"
.\"
.SH IMPLEMENTATION
.PP
In the
.B LiS
.[
LiS
.]
implementation, if
.BR canput ()
suffers an internal error, it will return false (0).
.PP
.B LiS
.[
LiS
.]
implements
\fB\)canput(\fI\)q\fB\))\fR\),
\fB\)canputnext(\fI\)q\fB\))\fR\) and
\fB\)bcanputnext(\fI\)q\fB\), \fI\)band\fB\))\fR\)
with macros that call
\fB\)bcanput(\fI\)q\fB\), \fI\)band\fB\))\fR\).
.\"
.\"
.SH "EXAMPLES"
.PP
.BR canput ()
is normally called before a call to
.BR putq (9)
as follows:
.sp
.nf
\fC\s-1\
void
example_putp(queue_t *q, mblk_t *mp)
{
	priv_t p = (priv_t *)q->q_ptr;
	queue_t *uq = p->upper_queue;
	if (!q->q_count && (mp->b_datap->db_type >= QPCTL
		            || canput(uq))) {
		/* put to upper if we are empty and
		   upper is not flow controlled */
		putq(uq, mp);
	} else {
		/* put to our own queue otherwise */
		putq(q, mp);
	}
}
\s+1\fR
.fi
.PP
Above, the example uses
.BR canput ()
from the lower queue put procedure to test the upper queue for flow control.
If the upper queue is flow controlled, the message is placed on the lower
queue.  Otherwise, if the lower queue is empty and the upper queue is not flow
controlled, the example places the message directly on the upper queue.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR putq (9),
.BR canputnext (9),
.BR bcanput (9),
.BR bcanputnext (9),
.BR noenable "(9) and "
.BR enableok (9).
.\"
.\"
.SH BUGS
.PP
.BR canput ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR canput ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4.2" ,
.[
svr42
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
If
.BR canput ()
suffers an internal error,
.I q
is
.BR NULL ,
or points to a structure other than a
.B queue_t 
structure,
it will return false (0).
Portable
.I STREAMS
drivers and modules will not pass
.B NULL
or invalid arguments to
.I STREAMS
functions.
.IP \(em
Under
.BR LiS ,
.BI canput( q ),
.BI canputnext( q )
and
.BI bcanputnext( q ", " band )
are macros that call
.BI bcanput( q ", " band ).
.IP \(em
.BR canput ()
may be called on a stream frozen with
.BR freezestr (9).
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg
.[
suxspg
.]
and
.IR UnixWare \(rg
.[
uw7spg
.]
do not permit
.BR canput ()
to be called on a stream frozen with
.BR freezestr (9).
Portable
.I STREAMS
drivers and modules should not call
.BR canput ()
on a stream frozen with
.BR freezestr (9).
.PP
For a fully functional
.I STREAMS
implementation, use
.BR "Linux Fast-STREAMS" .
.[
LfS
.]
.\"
.\"
.SH CONFORMANCE
.PP
SVR 4.2 MP DDI/DKI,
.[
usldk
.]
.IR Solaris \(rg
documentation.
.\"
.\"
.SH HISTORY
.PP
.BR canput ()
first appeared in SVR 3.
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
