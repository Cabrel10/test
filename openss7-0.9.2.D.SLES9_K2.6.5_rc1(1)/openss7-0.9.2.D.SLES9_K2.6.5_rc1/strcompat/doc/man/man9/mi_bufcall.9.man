'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) mi_bufcall.9.man,v 0.9.2.13 2006/04/05 10:05:03 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 10:05:03 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" mi_bufcall.9.man,v
.\" Revision 0.9.2.13  2006/04/05 10:05:03  brian
.\" - get references in right place
.\"
.\" Revision 0.9.2.12  2006/04/05 09:43:33  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strcompat.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strcompat.macros
.\"
.\"
.TH MI_BUFCALL 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B mi_bufcall
\- reliable alternative to \fBbufcall\fP(9)
.\"
.\"
.SH SYNOPSIS
.PP
.B #define _AIX_SOURCE
.br
.B #define _MAC_SOURCE
.br
.B #include <sys/stream.h>
.br
.B #include <sys/ddi.h>
.br
.B #include <sys/pse.h>
.HP
.BI "void mi_bufcall(queue_t *" q ", int " size ", int " priority );
.\"
.\"
.SH ARGUMENTS
.PP
.TP \w'\ priority\ 'u
.I q
Specifies the queue which is to be passed to
.BR qenable (9).
.TP
.I size
Specifies the required buffer size.
.TP
.I priority
Specifies the priority as used by the standard
.I STREAMS
.BR bufcall (9)
mechanism.
.\"
.\"
.SH DESCRIPTION
.PP
.BR mi_bufcall ()
provides a reliable alternative to
.BR bufcall (9).
Standard
.I STREAMS
.BR bufcall (9)
is intended to be called when
.BR allocb (9)
is unable to allocate a block for a message, and invokes a specified callback
function (typically
.BR qenable (9))
with a given queue when a large enough block becomes available.  This can
cause system problems if the stream closes so that that queue becomes invalid
before the callback function is invoked.
.PP
The
.BR mi_bufcall ()
is a reliable alternative, as the queue is not deallocated until the call is
complete.  It uses the standard
.BR bufcall (9)
mechanism with its own internal callback routine.  The callback routine
either invokes
.BR qenable (9)
with the specified
.I q
parameter, or simply deallocates the instance data associated with the stream
if the queue has already been closed.
.\"
.\"
.\".SH USAGE
.\".PP
.\"
.\"
.SH RETURN
.PP
.BR mi_bufcall ()
returns
.BR void .
.\"
.\"
.SH ERRORS
.PP
When
.BR mi_bufcall ()
fails, it fails silently (because it returns
.BR void ).
Having
.BR mi_bufcall ()
return
.B void
was not a particularly good idea.
.BR mi_bufcall ()
fails when there is insufficient memory available to allocate the necessary
internal data structures to represent the buffer call.  Because
.BR mi_bufcall ()
returns void, it is not possible to determine whether the call was successful
or whether it failed, rendering the function rather useless.
.PP
.IR MacOT \(rg
documentation
.[
macspg
.]
indicates that when
.BR mi_bufcall ()
detects a failure from the
.BR bufcall (9)
routine called internally, it sets a timer and continues to reattempt until
.BR bufcall (9)
succeeds.  The problem with this approach on
.B Linux Fast-STREAMS
is that both
.BR bufcall (9)
and
.BR timeout (9)
allocate a
.I STREAMS
event structure,
.BR strevent (9).
When
.BR bufcall (9)
fails, so will
.BR timeout (9).
.\"
.\"
.SH CONTEXT
.PP
.BR mi_bufcall ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR mi_bufcall ()
is MP-safe.
.\"
.\"
.SH NOTICES
.PP
.BR mi_bufcall ()
is an
.IR AIX \(rg-specific
and
.IR MacOT \(rg-specific
function:
.B _AIX_SOURCE
or
.B _MAC_SOURCE
must be defined before including DDI/DKI include files to expose this symbol.
.B Linux Fast-STREAMS
must also have been compiled with
.BR CONFIG_STREAMS_COMPAT_AIX ,
.BR CONFIG_STREAMS_COMPAT_AIX_MODULE ,
.BR CONFIG_STREAMS_COMPAT_MAC
or
.B CONFIG_STREAMS_COMPAT_MAC_MODULE
defined.
.PP
.BR mi_bufcall ()
is an
.IR AIX \(rg-specific
and
.IR MacOT \(rg-specific
function that should not be used by portable
.I STREAMS
drivers or modules.
A similar, and equally non-portable function, is the
.IR Solaris \(rg-specific
.BR qbufcall (9)
facility.
Portable
.I STREAMS
drivers and modules should use the more standard
.BR bufcall (9)
function directly.
.PP
.B Linux Fast-STREAMS
.[
lfs
.]
provides enhancements to the
.BR bufcall (9)
facility that permit it to function similar to
.BR mi_bufcall ()
without changing the
.BR bufcall (9)
function prototype.
See
.BR bufcall (9)
for more details.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR bufcall (9),
.BR qbufcall (9),
.BR unbufcall (9),
.BR qunbufcall (9),
.BR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
.BR mi_bufcall ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR mi_bufcall ()
is compatible with
.IR AIX \(rg
and
.IR MacOT \(rg
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR mi_bufcall ()
is an
.IR AIX \(rg-specific
and
.IR MacOT \(rg-specific
function and it should not be used by portable
.I STREAMS
drivers and modules.
.IP \(em
.IR MacOT \(rg
specifies
.[
macspg
.]
that
.BR mi_bufcall ()
uses the module instance list maintained by
.BR mi_open_comm (9)
and
.BR mi_close_comm (9)
to determine if the stream is still open before attempting the callback; that the standard
.BR bufcall (9)
function is used to schedule the callback; the ultimate callback is
.BR qenable (9)
on the queue passed to
.BR mi_bufcall ().
.B Linux Fast-STREAMS
does not use the module instance data list maintained by
.BR mi_open_comm (9)
and
.BR mi_close_comm (9);
it increases the reference count on the queue structure,
.IR q ,
which precludes it from be deallocated until after the buffer callback has run.  See also the
.B Linux Fast-STREAMS
enhancements to
.BR bufcall (9).
.IP \(em
.BR mi_bufcall ()
is provided for source level compatibility with
.IR AIX \(rg
and
.IR MacOT \(rg
for the purpose of porting
.IR AIX \(rg
or
.IR MacOT \(rg
drivers to
.BR Linux .
Because internal structures and definitions for
.B Linux Fast-STREAMS
.[
lfs
.]
differ from that of
.IR AIX \(rg
and
.IR MacOT \(rg
binaries are incompatible.
.IP \(em
.BR mi_bufcall ()
only provides functionality comparable to
.IR AIX \(rg
and
.IR MacOT \(rg
for use by
.I STREAMS
drivers and modules.  Any and all functionality provided by
.BR mi_bufcall ()
in support of
.RI non- STREAMS
devices are not supported.
.PP
See
.BR aixcompat (9),
.BR maccompat (9)
and
.BR STREAMS (9)
for more compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR AIX \(rg
.[
aixdoc
.]
.[
aixspg
.]
and
.IR MacOT \(rg
.[
macdoc
.]
.[
macspg
.]
documentation.
.\"
.\"
.SH HISTORY
.PP
.BR mi_bufcall ()
is an
.IR AIX \(rg-specific
function that first appeared in
.IR AIX \(rg " 3.2
and
.IR MacOT \(rg.
This is probably a
.IR MPS \(rg
.RI ( Mentat )
function inherited from
.IR OSF/1 \(rg
(thus the
.IR mi_ ).
.\"
.\"
.[
$LIST$
.]
.TI
