'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) esballoc.9.man,v 1.1.4.5 2006/04/05 09:42:43 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:42:43 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" esballoc.9.man,v
.\" Revision 1.1.4.5  2006/04/05 09:42:43  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database lis.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so lis.macros
.\"
.\"
.TH ESBALLOC 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B esballoc, lis_esballoc
\- allocate a \fISTREAMS\fR message and data block with a caller supplied data buffer
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP 8
.BI "mblk_t *esballoc(unsigned char *" base ", int " size, ", int " priority ", frtn_t *" freeinfo );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I base
a pointer to the buffer area for which to allocate a message header.
.TP
.I size
the size of the buffer area.
.TP
.I priority
the priority of the message header request.
.TP
.I freeinfo
a pointer to a structure describing the function and argument to pass to free the buffer.
.\"
.\"
.SH DESCRIPTION
.PP
.B ESBALLOC
is used where the
.I STREAMS
driver needs control over the location, allocation and deallocation of data
buffers.  This may be because the data buffers are subject to some physical
contraints (e.g. must be allocated in DMA-able memory, or must exist in
dual-ported RAM or in a decriptor ring).  This may also be because some other
mechanism outside of
.I STREAMS
has already allocated and passed the data buffer to a
.I STREAMS
driver.
.PP
Where it is not necessary that the caller provide the data buffer,
.BR allocb (9)
is more appropriate.
.PP
.B ESBALLOC
allocates a message block and a data block using the caller supplied data
buffer at
.I base
of the specified
.IR size " and " priority .
.PP
The
.I priority
can be one of the following values:
.TP 12
.B BPRI_LO
The caller requests a low priority message buffer.
.PD 0
.TP 12
.B BPRI_MED
The caller requests a medium priority message buffer.
.TP 12
.B BPRI_HI
The caller requests a high priority message buffer.
.PD
.PP
The data buffer of length
.I size
has already been allocated by the caller and is pointed to by the argument
.IR base .
In addition,
.B ESBALLOC
accepts a pointer to a
.B free_rtn
structure that contains the following elements:
.TP
.BI "void (*" free_func ")(char *)"
A function pointer
.I free_func
to a function returning void and taking a single character
pointer argument.  This function should perform whatever actions are necessary
to free the buffer pointed to by
.I base
in the call to
.BR ESBALLOC .
.TP
.BI "char *" free_arg
A character pointer argument
.I free_arg
that will be passed to a call to
.I free_func
when the message block returned by
.B ESBALLOC
is freed with
.BR freeb "(9) or " freemsg (9).
.PP
The allocated message block will have a data block type of
.BR M_DATA .
.\"
.\"
.SH RETURN
.PP
Upon success,
.B ESBALLOC
returns a pointer to the allocated message block.
.PP
Upon failure,
.B ESBALLOC
returns a
.B NULL
message pointer.
.\"
.\"
.SH ERRORS
.PP
When an error occurs,
.BR ESBALLOC
will return a
.B NULL
message pointer.
.PP
.BR ESBALLOC
will fail if
.I base
is
.BR NULL ,
or if
.I freeinfo
is
.BR NULL ,
or there is insufficient memory to allocate the necessary datastructures for
the message block or data block.
.PP
Failure to allocate a message block is typically followed by a call to
.BR esbbcall (9).
.\"
.\"
.SH CONTEXT
.PP
.BR esballoc ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
The priority
.B BPRI_WAITOK
must only be used from a blocking context.
.\"
.\"
.SH MP-STREAMS
.PP
.BR esballoc ()
is MP-safe.  The caller has exclusive access to the returned message.
.\"
.\"
.SH NOTICES
.PP
As with other post-SVR 4.2
.[
svr42
.]
compliant
.I STREAMS
implementations,
.B LiS
.[
LiS
.]
ignores the
.I priority
argument to
.BR ESBALLOC .
The message block
.I priority
was an SVR 3
.[
svr3
.]
concept which was found not to be useful, primarily due to
priority inversion.
For a history of the
.I priority
mechanism and a discussion as to why the mechanism was abandonned in SVR 4.2,
.[
svr42
.]
see \*(lqThe Magic Garden\*(rq section 7.2.2.
.[
magic
%S 7.2.2
.]
.\"
.\"
.SH EXAMPLES
.PP
The following examples shows how a data buffer suitable for use by Direct
Memory Access is allocated:
.nf
\fC\s-2
void xxx_free_func(char *buf)
{
    kfree(buf);
    MOD_DEC_USE_COUNT;
}

mblk_t *xxx_alloc_dma_buf(size_t bufsize)
{
    unsigned char *buf;
    MOD_INC_USE_COUNT;
    if ((buf = kmalloc(bufsize, GFP_ATOMIC | GFP_DMA))) {
        mblk_t *mp;
        frtn_t freertn = {
            free_func:&xxx_free_func,
            free_arg:(char *) buf,
        };
        if (!(mp = esballoc(buf, bufsize, BPRI_MED, &freertn)))
            xxx_free_func(buf);
        return (mp);
    }
    MOD_DEC_USE_COUNT;
    return (NULL);
}
\s+2\fP
.fi
.PP
The example, above, also shows the technique for keeping the current kernel
module from unloading before the free function is called for all outstanding
message blocks that reference the free function.  See
.RI \*(lq NOTICES \*(rq,
above.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR freeb (9),
.BR freemsg (9),
.BR bufcall "(9), and "
.BR esbbcall (9).
.\"
.\"
.SH BUGS
.PP
.BR esballoc ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR esballoc ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR esballoc ()
uses the priority mechanism described above under
.RI \*(lq NOTICES \*(rq,
above.
.IR "SVR 4.2 MP DDI/DKI" ,
.IR AIX \(rg,
.[
aixspg
.]
.IR Solaris \(rg
.[
solspg
.]
and
.I LiS
.[
lis
.]
ignore the
.I priority
argument as also described above under
.RI \*(lq NOTICES \*(rq.
Portable
.I STREAMS
drivers and modules will not rely upon the response of
.BR esballoc ()
to any given value of the
.I priority
argument.
.IP \(em
.BR esballoc ()
will return
.B NULL
only if the allocation fails.
Under LiS,
.BR esballoc ()
will return
.B NULL
if
.IR base " or " freeinfo
is
.BR NULL .
.BR esballoc ()
will panic when
.IR base " or " freeinfo
are
.BR NULL .
Under LiS, the same conditions will return
.BR NULL .
Portable
.I STREAMS
drivers and modules will not pass invalid or
.B NULL
arguments to
.BR esballoc ().
.IP \(em
.BR esballoc ()
accepts the priority
.BR BPRI_WAITOK ,
which is
.IR OSF/1 \(rg-specific
.[
osfspg
.]
and non-portable.
.BR BPRI_WAITOK
will block the calling thread if a message block is not immediately available,
and is only intended to be called from a blocking context (e.g. from the
.BR qopen (9)
and
.BR qclose (9)
procedures).
Portable
.I STREAMS
drivers and modules will only use the priority values of
.BR BPRI_LO ,
.BR BPRI_MED
and
.BR BPRI_HI .
.PP
For a fully functional
.I STREAMS
implementation, use
.BR "Linux Fast-STREAMS" .
.[
LfS
.]
.\"
.\"
.SH CONFORMANCE
.PP
SVR 4.2 MP DDI/DKI
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR esballoc ()
first appeared in SVR 4 DDI/DKI.
.[
svr4dk
.]
.\"
.\"
.[
$LIST$
.]
.TI
