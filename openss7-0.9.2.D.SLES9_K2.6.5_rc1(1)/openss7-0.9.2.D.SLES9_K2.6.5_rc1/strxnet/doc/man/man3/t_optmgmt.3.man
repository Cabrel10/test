'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) t_optmgmt.3.man,v 0.9.2.7 2006/04/05 09:44:44 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:44 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" t_optmgmt.3.man,v
.\" Revision 0.9.2.7  2006/04/05 09:44:44  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strxnet.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strxnet.macros
.\"
.\"
.\"
.\"
.TH T_OPTMGMT 3 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Library Calls"
.\"
.\"
.SH NAME
.B t_optmgmt
\- manage transport options
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <xti.h>
.HP 8
.BI "int t_optmgmt(int " fd ", const struct t_optmgmt *" req ", struct t_optmgmt *" ret );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I fd
the transport endpoint for which to manage options.
.TP
.I req
a pointer to a
.B t_optmgmt
structure containing the requested options.
.TP
.I ret
a pointer to a
.BR t_optmgmt
structure to contain the returned options.
.\"
.\"
.SH DESCRIPTION
.PP
.BR t_optmgmt ()
manages options associated with the underlying transport provider for the
endpoint
.IR fd .
.PP
.I fd
specifies the local transport endpoint upon which to manage options.
.PP
.I req
is a pointer to a
.B t_optmgmt
structure that provides the passed in option names and values.
.PP
.I ret
is a pointer to a
.B t_optmgmt
structure that provides the returned option names and values.
.PP
The
.B t_optmgmt
structure is formatted as follows:
.sp
.nf
\fC\s-1\
struct t_optmgmt {
        struct netbuf opt;
        t_scalar_t flags;
};
\fR\s+1
.fi
.PP
The
.B t_optmgmt
structure passes and returns the following members and information.
.TP
.I opt
is a
.BR netbuf (3)
structure that contains passed in
.IR "" ( req )
or returned
.IR "" ( ret )
options names and values.  Options are structured as described below under
.IR "\(lqOPTIONS\(rq" .
The
.IR req->opt.len and ret->opt.maxlen
is significant on call and the
.I ret->opt.len
is significant on return.
If
.I req->opt.len
is zero on call, no option names and values are passed.
If
.I ret->opt.maxlen
is zero on call or
.I ret->opt.len
is zero on return, no option names and values are returned.
.TP
.I flags
specifies and returns management flags.
.RS
.PP
The flags specified in 
.I req->flags
request one of four possible actions to be performed on the option contained
in the request,
.IR req->opt .
The flags specified
can be one of the following values:
.TP \w'T_PARTSUCCESS\(em'u
.B T_DEFAULT
requests that the default options for the specified option names, or if
.I req->opt.len
is zero, all default options, be returned.
.TP
.B T_CURRENT
requests that the current options for the specified option names, or if
.I req->opt.len
is zero, all current options, be returned.
.TP
.B T_CHECK
requests that the options specified in
.I req
be checked for validity and validity reported in
.IR ret .
.TP
.B T_NEGOTIATE
requests that the options specified in
.I req
be negoitated and the negotiated values returned in
.IR ret .
.PP
The flags returned in
.I ret->flags
represents the single most severe result of the operation.  The flags returned
will be one of the following values (in order of decreasing severity):
.TP \w'T_PARTSUCCESS\(em'u
.B T_NOTSUPPORT
indicates that at least one of the options specified in
.I req->opt
was not supported by the transport provider at the current privilege level of
the requesting user.
.TP
.B T_READONLY
indicates that at least one of the options specified in
.I req->opt
is read-only (for the current XTI/TLI state).
This return flag does not apply when the request flag was
.BR T_DEFAULT .
.TP
.B T_FAILURE
indicates that negotiation of at least one of the options specified in
.I req->opt
failed.  This is not used for illegal format or values.
This return flag does not apply when the request flag was
.BR T_DEFAULT " or " T_CURRENT .
.TP
.B T_PARTSUCCESS
indicates that the negotiation of at least one of the options specified in
.I req->opt
was negotiated to a value of lesser quality than the value requested.
This return flag only applies when the request flag was
.BR T_NEGOTIATE .
.TP
.B T_SUCCESS
indicates that all of the specified options were negotiated or returned
successfully.
.RE
.\"
.\"
.SH OPTIONS
.PP
Options within the
.I opt
buffer of the
.B t_optmgmt
structure (and other structures including XTI/TLI options) are formatted as a
contiguous list of options.  Each option in the list begins with a
.B t_opthdr
structure formatted as follows:
.sp
.nf
\fC\s-1\
struct t_opthdr {
    t_uscalar_t len;    /* Option length, incl. header */
    t_uscalar_t level;  /* Option level */
    t_uscalar_t name;   /* Option name */
    t_uscalar_t status; /* Negotiation result */
    char value[0];      /* and onwards...  */
};
\fR\s+1
.fi
.PP
The
.B t_opthdr
strucuture contains the following members:
.TP
.I len
the length of the option including the length of this header and the length of
the option value that follows.
.TP
.I level
the level of the option.
.I level
values are transport service provider specific with the exception of the
.B XTI_GENERIC
option level.
(See
.BR xti (3)).
.TP
.I name
the name of the option within the
.IR level .
.I name
values are transport service provider specific, with the exception of the
.B XTI_GENERIC
option names.
(See
.BR xti (3)).
.TP
.I status
the negotiation status of the option on return, ignored on input.
.TP
.I value
the value of the option.  This is a variable lenght field, the length of which
is specific to the option specified by
.IR level " and " name .
The format of option values is transport service provider specific.
.PP
Option headers in the options list are always aligned in memory to permit
direct access to the header.  This means that the next option in the list will
begin on the next alignment boundary for a
.B t_opthdr
structure.  A macro is provided to assist the XTI/TLI application writer in
locating the next option in the option list.
.PP
A number of macros are provided to assist with handling options in option
lists.  These macros are decribed as follows:
.TP
.BI T_OPT_FIRSTHDR( b )
takes a an argument
.I b
a pointer to the
.BR netbuf (3)
structure describing the options list and returns a pointer to the first
.B t_opthdr
structure in the list.
.TP
.BI T_OPT_NEXTHDR( b ", " p )
takes as arguments
.I b
a pointer to the
.BR netbuf (3)
structure describing the options list and
.I p
a pointer to the
.B t_opthdr
for the current option, and returns a pointer to the
.B t_opthdr
of the next option in the list, or
.B NULL
if there is no next option in the list.
.TP
.BI T_OPT_DATA( p )
takes as an argument
.I p
a pointer to the
.B t_opthdr
for the options and returns a unsigned character pointer to the
.I value
for the option.
.\"
.\"
.SH FLAGS
.PP
.BR t_optmgmt ()
provides four flags to specify what management actions are to be performed on
the specified options:
.BR T_DEFAULT ", " T_CURRENT ", " T_CHECK " and " T_NEGOTIATE .
.PP
For all actions, the transport user specifies the options that are of interest
and values (if required by the manamgement action) in
.IR req->opt.buf .
For each option level, the option
.B T_ALLOPT
can be requested on input.  All supported options of this level will then be
selected for the management action.
If
.I req->opt.len
is zero; that is, no option buffer is specified on input, then all options
known to the transport service provider are selected.
.PP
The result of options processing is returned in the
.I ret->opt.buf
buffer and the
.I ret->flags
overall result flags.
If
.I ret->opt.len
is zero; that is, no option buffer is provided for return,
.I ret->flags
will be set as described below, but the returned options and their status will be
discarded.
If
.I ret
is specified as
.BR NULL ,
option processing will be performed as described below, however, the returned
options and flags will be discarded.
.PP
Options processing may abort and
.BR t_optmgmt ()
will return
.RB [ TBADOPT ]
if an illegal option or an option with an unknown level is ecountered.
An illegal option consists of any an option header that does not completely
fit within the remaining option buffer, has a length less than the option
header size, has a length that exceeds the option buffer boundaries, has a
value length that is illegal for the option, or has a value that is illegal
for the option.
.PP
If
.BR t_optmgmt ()
encounters an illegal option, option processing ceases and
.RB [ TBADOPT ]
is returned.
If
.BR t_optmgmt ()
encounters an option level that is unknown to the transport
provider, option processing ceases and
.RB [ TBADOPT ]
is returned.
If
.BR t_optmgmt ()
encounters an option level that is known to the transport provider, but
an option name that is not, it returns
.B T_NOTSUPPORT
in the
.I status
field of the returned option.
When option processing is aborted and the action is
.BR T_NEGOTIATE ,
some options may have been succesfully negotiated before options processing
was aborted.  These options will retain their negotiated values.  To determine
which options may have retained a negotiated value, use the
.B T_CURRENT
management flag.
.\"
.\"
.SS T_DEFAULT
The
.B T_DEFAULT
management flag
allows the transport user to retrieve the default option values.
.PP
The user specifies the options of interest in
.IR req->opt.buf .
The option values are irrelevant and will be ignored; it is sufficient to
specify the
.B t_opthdr
part of an option only.
For each level, the option
.B T_ALLOPT
(see below) can be requested on input.  All supported options of this level
with their default values are then returned.  In this case,
.I ret->opt.maxlen
must be given at least the value
.I info->options
(see
.BR t_getinfo "(3), " t_open (3))
before the call. 
If
.I req->opt.len
is zero; that is, an empty option buffer is specified, then the options
selected are all options known to the transport service provider.
.PP
The default values are then returned in
.IR ret->opt.buf .
The
.I status
field returned is
.B T_NOTSUPPORT
if the protocol level does not support this option or the transport user
illegally requested a privileged option,
.B T_READONLY
if the option is read-only, and set to
.B T_SUCCESS
in all other cases.
The overall result of the request is returned in
.IR ret->flags .
This field contains the worst single result, whereby the rating is the same as
for
.BR T_NEGOTIATE .
.\"
.\"
.SS T_CURRENT
The
.B T_CURRENT
management flag allows the transport user to retrieve the currently effective
option values.
.PP
The user specifies the options of interest in
.IR req->opt.buf .
The option values are irrelevant and will be ignored; it is sufficient to
specify the
.B t_opthdr
part of an option only.
For each level, the option
.B T_ALLOPT
(see below) can be requested on input.  All supported options of this level
with their currently effective values are then returned. 
If
.I req->opt.len
is zero; that is, an emtpy option buffer is specified, then the options
selected are all options known to the transport service provider.
.PP
The currently effective values are then returned in
.IR ret->opt.buf .
The
.I status
field returned is
.B T_NOTSUPPORT
if the protocol level does not support this option or the transport user
illegally requested a privileged option,
.B T_READONLY
if the option is read-only, and set to
.B T_SUCCESS
in all other cases.
The overall result of the request is returned in
.IR ret->flags .
This field contains the worst single result, whereby the rating is the same as
for
.BR T_NEGOTIATE .
.\"
.\"
.SS T_CHECK
The
.B T_CHECK
management flag
allows the user to verify whether the options specified in the
.B T_OPTMGMT_REQ
are supported by the transport provider.
.PP
The user specifies the options of interest in
.IR req->opt.buf .
The special option name
.B T_ALLOPT
cannot be used for
.B T_CHECK
and will generate a
.RB [ TBADOPT ]
error if specified.  Also, if
.I req->opt.len
is zero,
.BR [ TBADOPT ]
will be returned.
.PP
If an option is specified with no option value (it consists of only a
.B t_opthdr
structure), the option is returned with its
.I status
field set to
.B T_SUCCESS
if it is supported,
.B T_NOTSUPPORT
if it is not or needs additional user priviledges, and
.B T_READONLY
if it is read-only (in the current XTI/TLI state).  No option value is returned.
If an option is specified with an option value, the
.I status
field of the
returned option has the same value as if the user had tried to negotiate this
value with
.BR T_NEGOTIATE .
If the
.I status
is
.BR T_SUCCESS ", " T_FAILURE ", " T_NOTSUPPORT " or " T_READONLY ,
the returned option value is the same as the one requested on input. 
.\"
.\"
.SS T_NEGOTIATE
The
.B T_NEGOTIATE
management flag
allows the transport user to negotiate option values.
.PP
The user specifies the options of interest and their values in the
.BR T_OPTMGMT_REQ .
The negotiated option values are returned in the
.BR T_OPTMGMT_ACK .
For each level the option
.B T_ALLOPT
can be requested on input.  No value is given with this option; only the
.B t_opthdr
part is specified.  This input request to negotiate all supported options of
this level to their default values.  The result is returned option by option
in
.BR T_OPTMGMT_ACK .
(Note that depending on the state of the transport endpoint, not all requests
to negotiate the default value may be successful.) 
If
.I req->opt.len
is zero; that is, an empty option buffer is specified, then the options
selected for negotation are all options known to the transport provider.  This
will initiate a negotiation of all options to their default values.
.PP
The
.I status
field of each returned option is set to indicate the result of the
negotiation.  The value is
.B T_SUCCESS
if the proposed value was negotiated,
.B T_PARTSUCCESS
if a degrated value was negotiated,
.B T_FAILURE
if the negotiation failed (according to the negotiation rules),
.B T_NOTSUPPORT
if the transport provider does not support this option or illegally request
negotiation of a privileged option, and
.B T_READONLY
if modification of a read-only option was requested.  If the
.I status
is
.BR T_SUCCESS ", " T_FAILURE ", " T_NOTSUPPORT " or " T_READONLY ,
the returned option value is the same as the one requested on input.
The overall result of the negotiation is returned in
.IR ret->flags .
This field contains the worst single result, whereby the rating is done
according to the order
.BR T_NOTSUPPORT ", " T_READONLY ", " T_FAILURE ", " T_PARTSUCCESS ", " T_SUCCESS .
The value
.B T_NOTSUPPORT
is the worst result and
.B T_SUCCESS
is the best.
.\"
.\"
.SH CAVEATS
.PP
.BR t_optmgmt ()
is valid in any state other than
.BR T_UNINIT .
.PP
.BR t_optmgmt ()
is valid for all transport service providers regardless of service type.
Not all transport service providers necessarily support this function.
.\"
.\"
.SH "RETURN VALUE"
.PP
Upon success,
.BR t_optmgmt ()
returns zero (0).
Upon failure,
.BR t_optmgmt ()
returns -1 and sets
.IR t_errno (3)
to an appropriate error number.
.\"
.\"
.SH ERRORS
.PP
When
.BR t_optmgmt ()
fails, it returns -1 and sets
.IR t_errno (3)
to an appropriate error number as follows:
.TP \w'[TNOTSUPPORT]\(em'u
.RB [ TBADF ]
.I fd
is invalid.
.TP
.RB [ TBADFLAG ]
The argument
.I req->flags
contains invalid flags.
.TP
.RB [ TBADOPT ]
The options specified were of an invalid format or contained invalid information.
See
.IR "\(lqOPTIONS\(rq" ,
above, for more information on option formats.
.TP
.RB [ TBUFOVFLW ]
The \fImaxlen\fR field of a \fBnetbuf\fR(3) structure passed to the call was
non-zero, but insufficient to hold the available opaque information.  See,
\fBnetbuf\fR(3) for more information.
.TP
.RB [ TNOTSUPPORT ]
The call requires the use of a TLI primitive not supported by the underlying transport provider.
.TP
.RB [ TOUTSTATE ]
The call was issued with the interface in an incorrect state.
.TP
.RB [ TPROTO ]
A protocol error occured between the XTI/TLI library and the underlying transport provider.
.TP
.RB [ TSYSERR ]
A \fBLinux\fR system error occured and the \fBLinux\fR error number is set in \fIerrno\fR(3).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR errno (3),
.BR netbuf (3),
.BR t_errno (3).
.\"
.\"
.SH "BUGS"
.PP
.BR t_optmgmt ()
has no known bugs.
.BR t_optmgmt ()
has been tested for the described behavior using the
.BR test-xnet (8)
and
.BR test-xnet_thr (8)
conformance test suites.
.\"
.\"
.SH COMPATIBILITY
.PP
The XTI/TLI library functions are compatible with 
SVR4.2,
.[
svr42
.]
XNS 5.2,
.[
xns
.]
SUSv2.
.[
susv2
.]
Compatibility is tested using the
.BR test-xnet (8)
and
.BR test-xnet_thr (8)
test case executables and the
.I @PACKAGE_TITLE@
.B autotest
test suite.
.\"
.\"
.SH "CONFORMING TO"
.PP
XTI/TLI,
.[
XTI
.]
TPI,
.[
TPI Revision 2.0.0
.]
XPG5,
XNS 5.2,
.[
xns
.]
SUSv2.
.[
susv2
.]
Conformance is tested using the
.BR test-xnet (8)
and
.BR test-xnet_thr (8)
test case executables and the
.I @PACKAGE_TITLE@
.B autotest
test suite.
.\"
.\"
.SH HISTORY
.PP
.B t_optmgmt
first appeared in SVR4.2.
.[
svr42
.]
.\"
.\"
.SH VERSIONS
.PP
This manpage was written for the OpenSS7 XTI/TLI Library.
.\"
.\"
.[
$LIST$
.]
.T4
