'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) tpi.7.man,v 0.9.2.7 2006/04/05 09:44:49 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:49 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" tpi.7.man,v
.\" Revision 0.9.2.7  2006/04/05 09:44:49  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strxnet.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strxnet.macros
.\"
.\"
.TH TPI 7 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "Transport Provider Interface (TPI)"
.SH NAME
.B tpi
\- Transport Provider Interface
.SH SYNOPSIS
.PP
.B #include <sys/tpi.h>
.HP
.BI "int " tpi_stream " = open(" tpi_device ", " flags );
.HP
.BI "int " tpi_xtistr " = t_open(" tpi_device ", " flags);
.HP
.BI "int " tpi_socket " = socket(" pfamily ", " socktype ", " protocol );
.SH DESCRIPTION
.PP
.\"
.\"
.\"
.\"
.\"
.\"
.PP
To support a framework for providing networking products in the
.BR UNIX \(rg
system, an effort is underway to define service interfaces that map to
strategic levels of the Open Systems Interconnection (OSI) Reference Model.
These service interfaces hide implementation details of a particular service
from the consumer of the service.  This enables system programmers to develop
software independent of the particular protocol that provides a specific
service.  The interfaces being specified for
.BR UNIX \(rg
System V are defined within the
.IR STREAMS (4)
environment.  This document specifies a kernel-level interface that supports
the services of the Transport Layer for connection-mode and connectionless
mode services.  This specification applies to System V Release 4.2 ES/MP.
.SS "Transport Provider Interface"
.PP
.PP
The transport interface defines a message interface to a transport provider
implemented under
.IR STREAMS (4).
(It is assumed that the reader of this document is familiar with the concept
.IR STREAMS (4).)
This version of the transport provider interface supports the XPG4 version of
the X/Open Transport Interface (XTI/TLI).  A user communicates to a transport
provider via a full duplex path known as a stream.  This stream provides a
mechanism in which messages may be passed to the transport provider from the
transport user and vice versa.
.PP
.IR STREAMS (4)
messages that are used to communicate transport service primitives between the
transport user and the transport provider may have one of the following
formats:
.IP 1. 4
A
.B M_PROTO
message block followed by zero or more
.B M_DATA
message blocks.  The
.B M_PROTO
message block contains the type of transport service primitive and all the
relevant arguments associated with the primitive.  The
.B M_DATA
blocks contain transport user data associated with the transport service
primitive.
.IP 2. 4
One
.B M_PCPROTO
message block containing the type of transport service primitive and all the
relevant arguments associated with the primitive.
.IP 3. 4
One or more
.B M_DATA
message blocks containing transport user data.
.PP
The following sections describe the transport primitives which define both a
connection-mode and connectionless-mode transport service.  For both types of
transport service, two types of primitives exist: primitives which originate
from the transport user and primitives which originate from the transport
provider.  The primitives which originate from the transport user make
requests to the transport provider or respond to an event of the transport
provider.  The primitives which originate from the transport provider are
either confirmations of a request or are indications to the transport user
that an event has occurred.  Section 2 lists the primitive types along with
the mapping of those primitives to the
.IR STREAMS (4)
message types and the transport primitives of the ISO IS 8072 and IS 8072/DAD
transport service definitions.  The format of these primitives and the rules
governing the use of them are described in the sections that follow.
.\"
.\"
.\"
.\"
.SS "Local Management"
.PP
The following management primitives are common to all modes of transport
service providers.
The transport service provider provides the following local management
services:
.PP
.B Information Service
The information service provides the transport services user with the ability
to query the transport service provider concerning options and parameters
specific to the transport service provider and associated with the transport
connection.
The information services use the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_INFO_REQ (7):
Requests information concerning the transport service provider, limits, modes
and options.
This primitive requires local acknowledgment with the
.BR T_INFO_ACK "(7) or " T_ERROR_ACK (7)
primitives
.IP \(em \w'\(em\(em'u
.BR T_INFO_ACK (7):
Provides information concerning the transport service provider, limits, modes
and options.
.PP
.B Bind Service
The bind service provides the transport services user with the ability to bind
the requesting stream to a transport endpoint address.  The bind service also
permits the negotiation of the number of outstanding connection indications on
a connection mode transport service provider.
The bind service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_BIND_REQ (7):
Requests the binding of the stream to a transport endpoint address.
This primitive requires local acknowledgment with the
.BR T_BIND_ACK "(7) or " T_ERROR_ACK (7)
primitives.
.IP \(em \w'\(em\(em'u
.BR T_BIND_ACK (7):
Provides acknowledgment of the bound transport endpoint address.
.PP
.B Unbind Service
The unbind service provides the transport services user with the ability to
unbind the requesting stream from the transport endpoint address to which it
is currently bound.
The unbind service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_UNBIND_REQ (7):
Requests the stream be unbound from the bound transport endpoint address.
This primitive requires local acknowledgment with the
.BR T_OK_ACK "(7) or " T_ERROR_ACK (7)
primitives.
.PP
.B Receipt Acknowledgment Service
The receipt acknowledgment service provides an indication to the transport
service user of the positive or negative acknowledgment of the previous
primitive issued by the channel service user.
The receipt acknowledgment service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_OK_ACK (7):
Provides positive acknowledgment of request and response primitives that
require acknowledgment.
.IP \(em \w'\(em\(em'u
.BR T_ERROR_ACK (7):
Provides negative acknowledgment of the request and response primitives that
require acknowledgment.
.PP
.B Options Management Service
The options management service provides a mechanism whereby the transport
service user can query and negotiate parameters associated with transport
service provider and the transport connection.
The options management service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_OPTMGMT_REQ (7):
Requests the management of transport service provider options.
This primitive requires local acknowledgment using the
.BR T_OPTMGMT_ACK "(7) or " T_ERROR_ACK (7)
primitives.
.IP \(em \w'\(em\(em'u
.BR T_OPTMGMT_ACK (7):
Provides acknowledgment of the management of transport service provider
options.
.PP
.B Address Service
The address service provides the transport services user with the ability to
query bound and connected transport endpoint addresses.
The address service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_ADDR_REQ (7):
Requests the bound and connected endpoint addresses.
This primitive requires local acknowledgment using the
.BR T_ADDR_ACK "(7) or " T_ERROR_ACK (7)
primitives.
.IP \(em \w'\(em\(em'u
.BR T_ADDR_ACK (7):
Provides the bound and connected endpoint addresses.
.PP
.B Capability Service
The capability service provides the transport services user with the ability
to query bound and connected transport addresses, token values associated with
the requesting stream, and other optional transport capabilities.
The capability service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_CAPABILITY_REQ (7):
Requests information concerning the capabilities of the transport service
provider, limits, modes, tokens and options.
This primitive requires local acknowledgment using the
.BR T_CAPABILITY_ACK "(7) or " T_ERROR_ACK (7)
primitives.
.IP \(em \w'\(em\(em'u
.BR T_CAPABILITY_ACK (7):
Provides information concerning the capabilities of the transport service
provider, limits, modes, tokens and options.
.SS "Connectionless Data Transfer"
.PP
The transport service provider provides the following connectionless data
transfer services:
.PP
.B Data Transfer Service
The connectionless mode data transfer service provides the ability to transfer
connectionless mode data between the transport services user to the transport
services provider.  It also provides indication to the transport services user
of some protocol errors related to the transmission of unit data.
The data transfer service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_UNITDATA_REQ (7):
Requests the transmission of connectionless data.
.IP \(em \w'\(em\(em'u
.BR T_UNITDATA_IND (7):
Provides indication of the reception of connectionless data.
.IP \(em \w'\(em\(em'u
.BR T_UDERROR_IND (7):
Provides indication of errors encountered in the transmission of
connectionless data.
.SS "Connection Establishment"
.PP
The following primitives establish a transport connection with a connection
oriented transport service provider.
The transport service provider provides the following connection establishment
services:
.PP
.B Connection Service
The connection service provides the transport services user with the ability
to form outgoing transport connections as well as acceppt or reject incoming
transport connections.
THe connection service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_CONN_REQ (7):
Requests connection to a peer transport endpoint.
.IP \(em \w'\(em\(em'u
.BR T_CONN_CON (7):
Provides confirmation of connection to a peer transport endpoint.
.IP \(em \w'\(em\(em'u
.BR T_CONN_IND (7):
Provides indication of a connection request from a peer transport endpoint.
.IP \(em \w'\(em\(em'u
.BR T_CONN_RES (7):
Responds to an outstanding connection indication.
.SS "Connection Data Transfer"
.PP
The following primitives provider for the transfer of data with a connection
oriented transport service provider.
The transport service provider provides the following connection mode data
transfer services:
.PP
.B Data Transfer Service
The connection mode data transfer service provides the ability to transfer
normal connection mode data between the transport services user and the
transport service provider.  It also provides the ability to exchange data in
transport inteface data units smaller that the overall transport service data
unit.
The connection mode data transfer service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_DATA_REQ (7):
Requests the transmission of data on a transport connection.
.IP \(em \w'\(em\(em'u
.BR T_DATA_IND (7):
Provides indication of the reception of data on a transport connection.
.PP
.B Expedited Data Transfer Service
The connection mode data transfer service provides the ability to transfer
expedited connection mode data between the transport services user and the
transport service provider.  It also provides the ability to exchange data in
transport inteface data units smaller that the overall expedited transport
service data unit.
The connection mode data transfer service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_EXDATA_REQ (7):
Requests the transmission of expedited data on a transport connection.
.IP \(em \w'\(em\(em'u
.BR T_EXDATA_IND (7):
Provides indication of the reception of expedited data on a transport connection.
.PP
.B Options Data Transfer Service
The connection mode options data transfer service provides that ability to
transfer normal or expedited connection mode data with options between the
transport services user and the transport services provider.  It also provides
the ability to exchange data in transport interface data units smaller than
the overall normal or expedited transport service data unit.
The connection mode options data transfer service uses the following
primitives:
.IP \(em \w'\(em\(em'u
.BR T_OPTDATA_REQ (7):
Requests the transmission of data with options on a transport connection.
.IP \(em \w'\(em\(em'u
.BR T_OPTDATA_IND (7):
Provides indication of the reception of data with options on a transport connection.
.SS "Connection Release"
.PP
The transport service provider provides the following connection release
services:
.PP
.B Release Service
The release service provides the transport services user with the ability to
generate an abortive release of an existing transport connection, refuse an
incomin transport connection, or accept the release of a transport connection.
The release service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_DISCON_REQ (7):
Requests that a transport connection be released.
.IP \(em \w'\(em\(em'u
.BR T_DISCON_IND (7):
Provides indication that a transport connection has been released.
.PP
.B Orderly Release Service
The orderly release service provides the transport services user with the
ability to perform or accept an orderly release of an existing transport
connection.
The orderly release service uses the following primitives:
.IP \(em \w'\(em\(em'u
.BR T_ORDREL_REQ (7):
Requests that a transport connection be released in an orderly fashion.
.IP \(em \w'\(em\(em'u
.BR T_ORDREL_IND (7):
Provides indication that a transport connection is to be released in an
orderly fashion.
.SH "SEE ALSO"
.PP
.BR T_ADDR_ACK (7),
.BR T_ADDR_REQ (7),
.BR T_BIND_ACK (7),
.BR T_BIND_REQ (7),
.BR T_CAPABILITY_ACK (7),
.BR T_CAPABILITY_REQ (7),
.BR T_CONN_CON (7),
.BR T_CONN_IND (7),
.BR T_CONN_REQ (7),
.BR T_CONN_RES (7),
.BR T_DATA_IND (7),
.BR T_DATA_REQ (7),
.BR T_DISCON_IND (7),
.BR T_DISCON_REQ (7),
.BR T_ERROR_ACK (7),
.BR T_EXDATA_IND (7),
.BR T_EXDATA_REQ (7),
.BR T_INFO_ACK (7),
.BR T_INFO_REQ (7),
.BR T_OK_ACK (7),
.BR T_OPTDATA_IND (7),
.BR T_OPTDATA_REQ (7),
.BR T_OPTMGMT_ACK (7),
.BR T_OPTMGMT_REQ (7),
.BR T_ORDREL_IND (7),
.BR T_ORDREL_REQ (7),
.BR T_UDERROR_IND (7),
.BR T_UNBIND_REQ (7),
.BR T_UNITDATA_IND (7),
.BR T_UNITDATA_REQ (7).
.SH HISTORY
.PP
The Transport Provider Interface first appeared in SVR 4.
.[
svr4
.]
.SH CONFORMANCE
.PP
This interface conforms to TPI Version 2, Draft 2.
.[
TPI Revision 2.0.0
.]
.XX
.[
magic
.]
.[
advprog
.]
.[
$LIST$
.]
.TI
