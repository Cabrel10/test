'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) freeb.9.man,v 0.9.2.22 2006/04/05 09:44:12 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:12 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" freeb.9.man,v
.\" Revision 0.9.2.22  2006/04/05 09:44:12  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH FREEB 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B freeb
\- frees a \fISTREAMS\fR message block
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "void freeb(mblk_t *" bp ");
.\"
.\"
.SH ARGUMENTS
.TP
.I bp
a pointer to the block to free.
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.PP
.BR freeb ()
frees the message block pointed to by
.I bp
and the associated data block and data buffer.
.PP
Freeing a message block might or might not result in the deallocation of the
message block, data block or data buffer, depending upon the internal
implementation, the binding of message blocks to data blocks and whether the
buffer is an internal or external buffer.
.PP
Message blocks will be detached from the data block and the data block reference count,
.IR mp->b_datap->db_ref ,
decremented.  Message blocks that reside in a message-data block,
.BR mdblock (9),
in which the data block is unused will then be freed.
.PP
Data blocks will be detached from the data buffer when the data block reference count,
.IR mp->b_datap->db_ref
drops to zero as a result of the message block being detached.
Data blocks that reside in a message-data block,
.BR mdblock (9),
in which the message block is unused will then be freed.
.PP
For external data buffers that are to be freed, the free function,
.IR mp->b_datap->db_frtnp->free_func ,
will be called with the free argument,
.IR mp->b_datap->db_frtnp->free_arg ,
provided previously to the
.BR esballoc (9)
call.
This call will be made before either the message block or data block are freed.
.\"
.\"
.SH RETURN
.PP
.BR freeb ()
returns void.
.\"
.\"
.SH ERRORS
.PP
If the block pointer,
.IR bp ,
passed to
.BR freeb ()
is
.BR NULL ,
then
.BR freeb ()
will silently fail.
.\"
.\"
.SH CONTEXT
.PP
.BR freeb ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts (tasklets and bottom halves), and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR freeb ()
is MP-safe; however, the caller must ensure that it has the last remaining
reference to the message block.
See also
.BR esballoc (9)
for additional considerations.
.\"
.\"
.\".SH NOTICES
.\".PP
.\"
.\"
.SH IMPLEMENTATION
.PP
.BR freemsg (9)
is implemented with a looping call to
.BR freeb (),
following along the
.I b_cont
pointer of each message block in the message block chain beginning with the passed in message block,
.IR mp .
.PP
.BR freeb ()
checks whether the message block being free is a
.B NULL
pointer, whether the message block is still enqueued on a
.I STREAMS
message queue,
and whether the message block is detached from a data block (one double free scenario).  If any of
these are the case, an error message will be printed to the system logs and no further action will
be taken.
.PP
.BR "Linux Fast-STREAMS" ,
like most
.IR "SVR 4"-based
systems, allocates a message block,
.BR mblk_t (9),
and a data block,
.BR dblk_t (9),
in a single allocation of a message-data block,
.BR mdblock (9).
Also, buffers below the size
.B FASTBUF
are allocated as an internal buffer as part of the message-data block,
.BR mdblock (9),
as well.  This speeds allocation of small messages and only causes slight overhead to the\
.BR freeb ()
function to detect when each of the elements many be freed.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR allocb (9),
.BR esballoc "(9), and
.BR freemsg (9).
.\"
.\"
.SH BUGS
.PP
.BR freeb ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR freeb ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and implementations based on
.I SVR 4
.[
svr4dk
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR freeb ()
is a widely implemented
.I STREAMS
function.
Portable
.I STREAMS
drivers and modules may use this function.
.\".IP \(em
.\"Symbol
.\".BR lis_freeb ()
.\"is provided for compatibility with
.\".IR LiS .
.\"See
.\".BR liscompat (9).
.\".BR lis_freeb ()
.\"calls
.\".BR freeb ()
.\"directly.
.IP \(em
.I LiS
.[
LiS
.]
uses a complicated message block and data block binding scheme with embedded
data buffers
.B FASTBUF
or less in size.  Determining the point at which a buffer is actually freed is
rather complicated.
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR freeb ()
appears as part of
.IR "SVR 4.0 STREAMS" .
.[
svr4spg
.]
.PP
.BR freeb ()
appeared first in
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
