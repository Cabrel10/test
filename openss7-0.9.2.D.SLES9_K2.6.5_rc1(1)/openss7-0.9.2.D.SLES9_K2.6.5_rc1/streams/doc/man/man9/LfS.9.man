'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) LfS.9.man,v 0.9.2.22 2006/04/05 10:05:04 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 10:05:04 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" LfS.9.man,v
.\" Revision 0.9.2.22  2006/04/05 10:05:04  brian
.\" - get references in right place
.\"
.\" Revision 0.9.2.21  2006/04/05 09:44:02  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH LfS 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B LfS
\-\ introduction to \fISTREAMS\fR kernel functions
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stropts.h>
.br
.B #include <sys/stream.h>
.br
.B #include <sys/kmem.h>
.br
.B #include <sys/cmn_err.h>
.br
.B #include <sys/ddi.h>
.br
.B #include <sys/dki.h>
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS ,
.IR DDI/DKI .
.\"
.\"
.SH OVERVIEW
.PP
.B @PACKAGE_TITLE@
.[
lfs
.]
is an implementation of
.IR "SVR 4.2 MP STREAMS"
.[
svr42spg
.]
for the
.BR GNU/Linux
operating system.
This manual page discusses the
.B @PACKAGE_TITLE@
package.
For more general information on
.IR STREAMS ,
see
.BR STREAMS (9).
.\"
.\"
.SH DESCRIPTION
.PP
.SS "Header Files"
.PP
.PD 0
.HP
.B <sys/stropts.h>
.HP
.B <sys/stream.h>
.HP
.B <sys/kmem.h>
.HP
.B <sys/cmn_err.h>
.HP
.B <sys/ddi.h>
.HP
.B <sys/dki.h>
.PD
.PP
.SS "Common Drivers"
.PP
.PD 0
.HP
.BR pipe (4)
\-\ STREAMS-based software pipes
.HP
.BR fifo (4)
\-\ STREAMS-based first-in first-out special file, named pipe
.HP
.BR clone (4)
\-\ the STREAMS clone driver
.HP
.BR sad (4)
\-\ the STREAMS administrative driver
.HP
.BR socksys (4)
\-\ STREAMS XTI/TLI access to sockets.
.HP
.BR ticlts (4)
\-\ STREAMS XTI/TLI connectionless local transport provider
.HP
.BR ticots (4)
\-\ STREAMS XTI/TLI connection-oriented local transport provider
.HP
.BR ticotsord (4)
\-\ STREAMS XTI/TLI connection-oriented orderly release local transport provider
.HP
.BR spx (4)
\-\ STREAMS bi-directional pipe device
.PD
.PP
.SS "Common Modules"
.PP
.PD 0
.HP
.BR pipemod (4)
\-\ STREAMS module supporting flush handling in STREAMS fifos and pipes
.HP
.BR ldl (4)
\-\ a STREAMS DLPI interface to Linux network devices
.HP
.BR connld (4)
\-\ STREAMS module supporting the generation of unique new STREAMS pipes from
an existing pipe end
.HP
.BR timod (4)
\-\ a STREAMS XTI/TLI compatibility interface
.HP
.BR tirdwr (4)
\-\ a STREAMS XTI/TLI read write compatibility interface
.HP
.BR sockmod (4)
\-\ a STREAMS TPI to sockets compatibility module
.PD
.PP
.SS "System Calls"
.PP
.PD 0
.HP
.BR getmsg (2)
\-\ get next message from a STREAMS character device
.HP
.BR getpmsg (2s)
\-\ get next message from a STREAMS character device
.HP
.BR putmsg (2)
\-\ put a message to a STREAMS character device
.HP
.BR putpmsg (2s)
\-\ put a message to a STREAMS character device
.HP
.BR poll (2s)
\-\ wait for some event on a STREAMS character device
.HP
.BR fattach (3)
\-\ attach a STREAMS open file to a path name in the file system
.HP
.BR fdetach (3)
\-\ detach a STREAMS file from a path name in the file system
.HP
.BR isastream (2)
\-\ determine whether an open file is a STREAMS character device
.HP
.BR open (2s)
\-\ open and possibly create a file or device
.HP
.BR close (2s)
\-\ close a file descriptor
.HP
.BR read "(2), " readv (2s)
\-\ read from a file descriptor
.HP
.BR write "(2), " writev (2s)
\-\ write to a file descriptor
.HP
.BR pipe (2s)
\-\ create a STREAMS pipe
.HP
.BR ioctl (2s)
\-\ control device
.HP
.BR streamio (7)
\-\ STREAMS ioctl commands
.PD
.PP
.SS "Module and Driver Registration Functions"
.PP
.PD 0
.HP
.BR register_inode (9),
\-\ register a STREAMS special file system node
.HP
.BR register_strdev (9),
\-\ register a STREAMS device
.HP
.BR register_strdev_major (9),
\-\ register a STREAMS device to a major device number
.HP
.BR register_strdev_minor (9),
\-\ register a STREAMS device to a minor device number
.HP
.BR register_strmod (9),
\-\ register a STREAMS module to a module id
.HP
.BR unregister_inode (9),
\-\ unregister a STREAMS special file system node
.HP
.BR unregister_strdev (9),
\-\ unregister a STREAMS device
.HP
.BR unregister_strdev_major (9),
\-\ unregister a STREAMS device from a major device number
.HP
.BR unregister_strdev_minor (9),
\-\ unregister a STREAMS device from a minor device number
.HP
.BR unregister_strmod (9),
\-\ unregister a STREAMS module from a module id
.PD
.PP
.SS "Message Handling Functions"
.PP
.PD 0
.HP
.BR adjmsg (9)
\-\ trim bytes from the front or back of a STREAMS message
.HP
.BR allocb (9)
\-\ allocate a STREAMS message and data block
.HP
.BR allocb_physreq (9)
\-\ allocate a STREAMS message and data block
.HP
.BR allocq (9)
\-\ allocate a STREAMS queue pair
.HP
.BR bufcall (9)
\-\ install a STREAMS buffer callback
.HP
.BR copyb (9)
\-\ copy a STREAMS message block
.HP
.BR copymsg (9)
\-\ copy a STREAMS message
.HP
.BR datamsg (9)
\-\ tests a STREAMS message type for data
.HP
.BR dupb (9)
\-\ duplicate a STREAMS message block
.HP
.BR dupmsg (9)
\-\ duplicate a STREAMS message
.HP
.BR esballoc (9)
\-\ allocate a STREAMS message and data block with a caller supplied data buffer
.HP
.BR esbbcall (9)
\-\ installs a buffer callback for an extended STREAMS message block
.HP
.BR freeb (9)
\-\ frees a STREAMS message block
.HP
.BR freemsg (9)
\-\ frees a STREAMS message
.HP
.BR isdatablk (9)
\-\ tests a STREAMS data block for data type
.HP
.BR isdatamsg (9)
\-\ tests a STREAMS data block for data type
.HP
.BR linkb (9)
\-\ link a message block to a STREAMS message
.HP
.BR linkmsg (9)
\-\ link a message block to a STREAMS message
.HP
.BR msgdsize (9)
\-\ calculate the size of the data in a STREAMS message
.HP
.BR msgpullup (9)
\-\ pull up bytes in a STREAMS message
.HP
.BR msgsize (9)
\-\ calculate the size of the message blocks in a STREAMS message
.HP
.BR pullupmsg (9)
\-\ pull up the bytes in a STREAMS message
.HP
.BR rmvb (9)
\-\ remove a message block from a STREAMS message
.HP
.BR testb (9)
\-\ test is a STREAMS message can be allocated
.HP
.BR unbufcall (9)
\-\ removes a STREAMS buffer callback
.HP
.BR unlinkb (9)
\-\ unlink a message block from a STREAMS message
.HP
.BR xmsgsize (9)
\-\ calculate the size of message blocks in a STREAMS message
.PD
.PP
.SS "Queue Handling Functions"
.PP
.PD 0
.HP
.BR appq (9)
\-\ append a STREAMS message after another
.HP
.BR backq (9)
\-\ find the upstream or downstream STREAMS queue
.HP
.BR bcanget (9)
\-\ test retrieval on a STREAMS message queue
.HP
.BR bcanput (9)
\-\ test flow control on a STREAMS message queue
.HP
.BR bcanputnext (9)
\-\ test flow control on a STREAMS message queue
.HP
.BR canenable (9)
\-\ test whether a STREAMS message queue can be scheduled
.HP
.BR canget (9)
\-\ test retreival on a STREAMS message queue
.HP
.BR canput (9)
\-\ test flow control on a STREAMS message queue
.HP
.BR canputnext (9)
\-\ test flow control on a STREAMS message queue
.HP
.BR enableok (9)
\-\ allows a STREAMS message queue to be scheduled
.HP
.BR flushband (9)
\-\ flushes band STREAMS messages from a message queue
.HP
.BR flushq (9)
\-\ flushes messages from a STREAMS message queue
.HP
.BR freeq (9)
\-\ deallocate a STREAMS queue pair
.HP
.BR getq (9)
\-\ gets a message from a STREAMS message queue
.HP
.BR insq (9)
\-\ inserts a message into a STREAMS message queue
.HP
.BR noenable (9)
\-\ disables a STREAMS message queue from being scheduled
.HP
.BR OTHERQ (9)
\-\ return the other queue of a STREAMS queue pair
.HP
.BR put (9)
\-\ invokes a STREAMS message queue put procedure
.HP
.BR putbq (9)
\-\ puts a message back on a STREAMS message queue
.HP
.BR putctl1 (9)
\-\ puts a 1 byte control message on a STREAMS message queue
.HP
.BR putctl (9)
\-\ puts a control message on a STREAMS message queue
.HP
.BR putnext (9)
\-\ puts a message on the downstream STREAMS message queue
.HP
.BR putnextctl1 (9)
\-\ puts a 1 byte control message on the downstream STREAMS message queue
.HP
.BR putnextctl (9)
\-\ puts a control message on the downstream STREAMS message queue
.HP
.BR putq (9)
\-\ puts a message on a STREAMS message queue
.HP
.BR qattach (9)
\-\ attach a module onto a STREAMS file
.HP
.IR qi_qclose (9)
\-\ closes a STREAMS driver or module
.HP
.BR qdetach (9)
\-\ detach a module from a STREAMS file
.HP
.BR qenable (9)
\-\ schedules a STREAMS message queue service procedure
.HP
.IR qi_qopen (9)
\-\ call a STREAMS driver or module open routine
.HP
.BR qprocsoff (9)
\-\ disables STREAMS message queue processing for multi-processing
.HP
.BR qprocson (9)
\-\ enables a STREAMS message queue for multi-processing
.HP
.BR qreply (9)
\-\ replys to a message from a STREAMS message queue
.HP
.BR qsize (9)
\-\ return the number of messages on a queue
.HP
.BR qcountstrm (9)
\-\ return the downstream message count on a stream
.HP
.BR qwait (9)
\-\ wait for a queue procedure to execute
.HP
.BR qait_sig (9)
\-\ wait for a queue procedure to execute or signal
.HP
.BR RD (9)
\-\ return the read queue of a STREAMS queue pair
.HP
.BR rmvq (9)
\-\ remove a message from a STREAMS message queue
.HP
.BR SAMESTR (9)
\-\ test for STREAMS pipe or fifo
.HP
.BR strqget (9)
\-\ gets information about a STREAMS message queue
.HP
.BR strqset (9)
\-\ sets attributes of a STREAMS message queue
.HP
.BR WR (9)
\-\ return the write queue of a STREAMS queue pair
.PD
.PP
.SS "Miscellaneous Functions"
.PP
.PD 0
.HP
.BR kmem_alloc (9)
\-\ allocate kernel memory
.HP
.BR kmem_free (9)
\-\ deallocates kernel memory
.HP
.BR kmem_zalloc (9)
\-\ allocate kernel memory
.HP
.BR kmem_zalloc_node (9)
\-\ allocate kernel memory
.HP
.BR cmn_err (9)
\-\ print a kernel command error
.HP
.BR bcopy (9)
\-\ copy byte strings
.HP
.BR bzero (9)
\-\ zero a byte string
.HP
.BR copyin (9)
\-\ copy bytes from user to kernel
.HP
.BR copyout (9)
\-\ copy bytes from kernel to user
.HP
.BR delay (9)
\-\ delay for an interval
.HP
.BR drv_hztomsec (9)
\-\ convert clock ticks to milliseconds
.HP
.BR drv_hztousec (9)
\-\ convert clock ticks to microseconds
.HP
.BR drv_msectohz (9)
\-\ convert milliseconds to clock ticks
.HP
.BR drv_priv (9)
\-\ determine if user is privileged
.HP
.BR drv_usectohz (9)
\-\ convert microseconds to clock ticks
.HP
.BR drv_usecwait (9)
\-\ wait for a specified number of microseconds
.HP
.BR max (9)
\-\ determine the maximum of two variables
.HP
.BR min (9)
\-\ determine the minimum of two variables
.HP
.BR getmajor (9)
\-\ get the major device number for a device
.HP
.BR getminor (9)
\-\ get the minor device number for a device
.HP
.BR makedevice (9)
\-\ create a device from major and minor device numbers
.HP
.BR mknod (9)
\-\ create a special or ordinary file
.HP
.BR mount (9)
\-\ mount a file system
.HP
.BR strlog (9)
\-\ pass a message to the STREAMS logger
.HP
.BR timeout (9)
\-\ start a timer
.HP
.BR umount (9)
\-\ unmount a file system
.HP
.BR unlink (9)
\-\ remove a file
.HP
.BR untimeout (9)
\-\ stop a timer
.PD
.PP
.SS "AIX\(rg 5L Version 5.1 Compatibility Functions"
.PP
.PD 0
.HP
.BR mi_bufcall (9)
\-\ reliable alternative to \fBbufcall\fP(9)
.HP
.BR mi_open_comm (9)
\-\ \fISTREAMS\fP common minor device open utility
.HP
.BR mi_close_comm (9)
\-\ \fISTREAMS\fP common minor device close utility
.HP
.BR mi_next_ptr (9)
\-\ \fISTREAMS\fP minor device list traversal
.HP
.BR wantio (9)
\-\ perform direct I/O from a \fISTREAMS\fR driver
.HP
.BR wantmsg (9)
\-\ provide a filter of wanted messages for a \fISTREAMS\fP module
.PD
.PP
.SS "LiS Compatibility Functions"
.PP
.PD 0
.HP
.BR lis_adjmsg (9)
\-\ trim bytes from the front or back of a STREAMS message
.HP
.BR lis_allocb (9)
\-\ allocate a STREAMS message and data block
.HP
.BR lis_allocb_physreq (9)
\-\ allocate a STREAMS message and data block
.HP
.BR lis_allocq (9)
\-\ allocate a STREAMS queue pair
.HP
.BR lis_appq (9)
\-\ append a STREAMS message after another
.HP
.BR lis_backq (9)
\-\ find the upstream or downstream STREAMS queue
.HP
.BR lis_bcanput (9)
\-\ test flow control on a STREAMS message queue
.HP
.BR lis_bcanputnext (9)
\-\ test flow control on a STREAMS message queue
.HP
.BR lis_bcopy (9)
\-\ copy byte strings
.HP
.BR lis_bufcall (9)
\-\ install a STREAMS buffer callback
.HP
.BR lis_bzero (9)
\-\ zero a byte string
.HP
.BR lis_canenable (9)
\-\ test whether a STREAMS message queue can be scheduled
.HP
.BR lis_canput (9)
\-\ test flow control on a STREAMS message queue
.HP
.BR lis_canputnext (9)
\-\ test flow control on a STREAMS message queue
.HP
.BR lis_cmn_err (9)
\-\ print a kernel command error
.HP
.BR lis_copyb (9)
\-\ copy a STREAMS message block
.HP
.BR lis_copymsg (9)
\-\ copy a STREAMS message
.HP
.BR lis_datamsg (9)
\-\ tests a STREAMS message type for data
.HP
.BR lis_date (9)
\-\ the version and release date of LfS
.HP
.BR lis_dupb (9)
\-\ duplicate a STREAMS message block
.HP
.BR lis_dupmsg (9)
\-\ duplicate a STREAMS message
.HP
.BR lis_enableok (9)
\-\ allows a STREAMS message queue to be scheduled
.HP
.BR lis_esballoc (9)
\-\ allocate a STREAMS message and data block with a caller supplied data buffer
.HP
.BR lis_esbbcall (9)
\-\ installs a buffer callback for an extended STREAMS message block
.HP
.BR lis_find_strdev (9)
\-\ finds a streamtab entry for a device
.HP
.BR lis_flushband (9)
\-\ flushes band STREAMS messages from a message queue
.HP
.BR lis_flushq (9)
\-\ flushes messages from a STREAMS message queue
.HP
.BR lis_freeb (9)
\-\ frees a STREAMS message block
.HP
.BR lis_freemsg (9)
\-\ frees a STREAMS message
.HP
.BR lis_freeq (9)
\-\ deallocate a STREAMS queue pair
.HP
.BR lis_getq (9)
\-\ gets a message from a STREAMS message queue
.HP
.BR lis_insq (9)
\-\ inserts a message into a STREAMS message queue
.HP
.BR lis_isdatablk (9)
\-\ tests a STREAMS data block for data type
.HP
.BR lis_isdatamsg (9)
\-\ tests a STREAMS data block for data type
.HP
.BR lis_linkb (9)
\-\ link a message block to a STREAMS message
.HP
.BR lis_mknod (9)
\-\ create a special or ordinary file
.HP
.BR lis_mount (9)
\-\ mount a file system
.HP
.BR lis_msgdsize (9)
\-\ calculate the size of the data in a STREAMS message
.HP
.BR lis_msgpullup (9)
\-\ pull up bytes in a STREAMS message
.HP
.BR lis_msgsize (9)
\-\ calculate the size of message blocks in a STREAMS message
.HP
.BR lis_noenable (9)
\-\ disables a STREAMS message queue from being scheduled
.HP
.BR lis_OTHER (9)
\-\ return the other queue of a STREAMS queue pair
.HP
.BR lis_OTHERQ (9)
\-\ return the other queue of a STREAMS queue pair
.HP
.BR lis_pullupmsg (9)
\-\ pull up the bytes in a STREAMS message
.HP
.BR lis_putbq (9)
\-\ puts a message back on a STREAMS message queue
.HP
.BR lis_putctl1 (9)
\-\ puts a 1 byte control message on a STREAMS message queue
.HP
.BR lis_putctl (9)
\-\ puts a control message on a STREAMS message queue
.HP
.BR lis_putnext (9)
\-\ puts a message on the downstream STREAMS message queue
.HP
.BR lis_putnextctl1 (9)
\-\ puts a 1 byte control message on the downstream STREAMS message queue
.HP
.BR lis_putnextctl (9)
\-\ puts a control message on the downstream STREAMS message queue
.HP
.BR lis_putq (9)
\-\ puts a message on a STREAMS message queue
.HP
.BR lis_qattach (9)
\-\ attach a module onto a STREAMS file
.HP
.BR lis_qclose (9)
\-\ closes a STREAMS driver or module
.HP
.BR lis_qdetach (9)
\-\ detach a module from a STREAMS file
.HP
.BR lis_qenable (9)
\-\ schedules a STREAMS message queue service procedure
.HP
.BR lis_qopen (9)
\-\ call a STREAMS driver or module open routine
.HP
.BR lis_qprocsoff (9)
\-\ disables STREAMS message queue processing for multi-processing
.HP
.BR lis_qprocson (9)
\-\ enables a STREAMS message queue for multi-processing
.HP
.BR lis_qreply (9)
\-\ replies to a message from a STREAMS message queue
.HP
.BR lis_qsize (9)
\-\ return the number of messages on a queue
.HP
.BR lis_RD (9)
\-\ return the read queue of a STREAMS queue pair
.HP
.BR lis_register_strdev (9)
\-\ register a STREAMS device
.HP
.BR lis_register_strmod (9)
\-\ register a STREAMS module
.HP
.BR lis_rmvb (9)
\-\ remove a message block from a STREAMS message
.HP
.BR lis_rmvq (9)
\-\ remove a message from a STREAMS message queue
.HP
.BR lis_safe_canenable (9)
\-\ test whether a STREAMS message queue can be scheduled
.HP
.BR lis_safe_enableok (9)
\-\ allows a STREAMS message queue to be scheduled
.HP
.BR lis_safe_noenable (9)
\-\ disables a STREAMS message queue from being scheduled
.HP
.BR lis_safe_OTHERQ (9)
\-\ return the other queue of a STREAMS queue pair
.HP
.BR lis_safe_putnext (9)
\-\ puts a message on the downstream STREAMS message queue
.HP
.BR lis_safe_qreply (9)
\-\ replies to a message from a STREAMS message queue
.HP
.BR lis_safe_RD (9)
\-\ return the read queue of a STREAMS queue pair
.HP
.BR lis_safe_SAMESTR (9)
\-\ test for STREAMS pipe or fifo
.HP
.BR lis_safe_WR (9)
\-\ return the write queue of a STREAMS queue pair
.HP
.BR lis_SAMESTR (9)
\-\ test for STREAMS pipe or fifo
.HP
.BR lis_strqget (9)
\-\ gets information about a STREAMS message queue
.HP
.BR lis_strqset (9)
\-\ sets attributes of a STREAMS message queue
.HP
.BR lis_testb (9)
\-\ test is a STREAMS message can be allocated
.HP
.BR lis_timeout (9)
\-\ start a timer
.HP
.BR lis_umount2 (9)
\-\ unmount a file system
.HP
.BR lis_umount (9)
\-\ unmount a file system
.HP
.BR lis_unbufcall (9)
\-\ removes a STREAMS buffer callback
.HP
.BR lis_unlink (9)
\-\ remove a file
.HP
.BR lis_unlinkb (9)
\-\ unlink a message block from a STREAMS message
.HP
.BR lis_unregister_strdev (9)
\-\ unregister a STREAMS device
.HP
.BR lis_unregister_strmod (9)
\-\ unregister a STREAMS module
.HP
.BR lis_untimeout (9)
\-\ stop a timer
.HP
.BR lis_version (9)
\-\ the version and release date of LfS
.HP
.BR lis_WR (9)
\-\ return the write queue of a STREAMS queue pair
.HP
.BR lis_xmsgsize (9)
\-\ calculate the size of the message blocks in a STREAMS message
.PD
.PP
.\"
.\"
.SH RETURN
.PP
.\"
.\"
.SH ERRORS
.PP
.\"
.\"
.SH CONTEXT
.PP
.\"
.\"
.SH MP-STREAMS
.PP
.\"
.\"
.SH NOTICES
.PP
.\"
.\"
.SH IOCTLS
.PP
See
.BR streamio (7).
.\"
.\"
.SH SYSCTLS
.PP
.B Linux Fast-STREAMS
provides and supports a number of system controls that can be accessed using
the
.B /proc/sys/streams/*
files, with the
.BR sysctl (2)
interface, or using
.BR sysctl (8).
.PP
The following
.B STREAMS
specific system controls are provided by
.BR "Linux Fast-STREAMS" :
.TP
.B sys.streams.cltime
Defines the default time interval (in milliseconds) that closing stream will
linger for messages to clear its queues before finally closing.
Valid values are zero (0) or greater (MAXINT).
The default value is the traditional UNIX value of 15,000 milliseconds (15 seconds).
This system control defines the default for all new streams.
The value for a given stream can be changed with the
.BR streamio (7)
IO control
.BR I_CLTIME ,
after the stream is opened and before the stream is closed.
.TP
.B sys.streams.max_apush
Defines the maximum number of modules that can be configured for autopush onto
a
.I STREAMS
driver.
Valid values are zero (0) or greater (MAXINT).
The default value is the traditional UNIX value of 8 modules.
This system control defines the maximum for all new autopush configurations.
Existing autopush configurations are unchanged.
.TP
.B sys.streams.max_mblk
Defines the maximum number of combined message data blocks that will be held
on the per-CPU free list between runs of
.BR runqueues (9).
Valid values are zero (0) or greater (MAXINT).
The default value is the traditional UNIX value of 10 blocks.
This system control defines the maximum for the next run of
.BR runqueues (9)
for all CPUs.
Increasing or decreasing this number may have a positive or negative performance impact.
.TP
.B sys.streams.max_stramod
Defines the maximum number of autopush structures that can be defined for the
entire system.
Valid values are zero (0) or greater (MAXINT).
The default value is eight (8) ???????
This system control defines the system-wide maximum.
.TP
.B sys.streams.max_strdev
Defines the maximum number of streams devices.  This is normally the maximum
number of character devices (MAX_CHRDEV).
Valid values are zero (0) or greater (MAXINT).
The default value is MAX_CHRDEV (256).
This is a read-only system control.
.TP
.B sys.streams.max_strmod
Defines the maximum number of streams modules.  This is normally the maximum
number of character devices (MAX_CHRDEV).
Valid values are zero (0) or greater (MAXINT).
The default value is MAX_CHRDEV (256).
This is a read-only system control.
.TP
.B sys.streams.msg_priority
Defines whether allocation priority will be honoured or whether all allocations
will be treated the same.  See
.BR allocb (9).
When true (non-zero), allocation priority will be honoured when allocating
message blocks.  When false (zero), allocation priority will be ignored.
Valid values are zero (0) or non-zero.
The default value is zero (0).
Changing this value may have a positive or negative impact on system
performance.
.TP
.B sys.streams.nband
Defines the number of queue bands available.
Valid values are zero (0) or greater (MAXINT).
The default value is the traditional UNIX value of 256.
This system control defines the system wide value.
This system control is read-only.
.TP
.B sys.streams.nstrmsgs
Defines the maximum number of combined message data blocks that will be
allocated.
Valid values are zero (0) or greater (MAXINT).
The default value is 2^12.
Changing this value may have a positive or negative impact on system
performance.  Setting this value to a small number may be useful for debugging
.I STREAMS
drivers and modules.
.TP
.B sys.streams.nstrpush
Deinfes the maximum number of modules that can be pushed on a stream.  This
includes both autopushed modules and modules pushed using the
.B I_PUSH
IO control of
.BR streamio (7).
Valid values are zero (0) or greater (MAXINT).
The default value is the tranditional UNIX value of 64.
This is the default values for all new streams.  Existing streams are
unaffected.
.TP
.B sys.streams.hiwat
Defines the default high water mark (in message bytes) for 
the stream head.
Valid values are zero (0) or greater (MAXINT).
The default value is 5120.
This is the default value for all new stream heads.  Existing stream heads are
unaffected.  The value on existing stream heads can be changed by a driver or
module by sending an
.BR M_SETOPTS (9)
message to the stream head.
.TP
.B sys.streams.lowat
Defines the default low water mark (in mesasge bytes) for
the stream head.
Valid values are zero (0) or greater (MAXINT).
The default value is 1024.
This is the default value for all new stream heads.  Existing stream heads are
unaffected.  The value on existing stream heads can be changed by a driver or
module by sending an
.BR M_SETOPTS (9)
message to the stream head.
.TP
.B sys.streams.maxpsz
Defines the maximum packet size accepted (in message bytes) for the
stream head.
Valid values are zero (0) or greater (MAXINT).
The default value is 2^12.
This is the default value for all new stream heads.  Existing stream heads are
unaffected.  The value on existing stream heads can be changed by a driver or
module by sending an
.BR M_SETOPTS (9)
message to the stream head.
.TP
.B sys.streams.minpsz
Defines the minimum packet size accepted (in message bytes) for the
stream head.
Valid values are zero (0) or greater (MAXINT).
The default value is 0.
This is the default value for all new stream heads.  Existing stream heads are
unaffected.  The value on existing stream heads can be changed by a driver or
module by sending an
.BR M_SETOPTS (9)
message to the stream head.
.TP
.B sys.streams.reuse_fmodsw
Defines whether fmodsw table entries will be reused.
When false (zero), fmodsw table entries will not be reused.  When true
(non-zero), fmodsw table entries will be reused.
Valid values are zero (0) and non-zero.
The default value is false (zero).
.TP
.B sys.streams.rtime
Defines the time interval (in milliseconds) that the stream head will wait to
forward held messages when SNDHOLD is set for the stream head.
Valid values are zero (0) or greater (MAXINT).
The default value is 10 milliseconds (one clock tick).
This is the system wide value for all streams.
Changing this value may have a positive or negative impact on system
performance.
.TP
.B sys.streams.strhold
Defines whether the SNDHOLD feature is active or not.  When false (0), the
SNDHOLD feature is deactivated.  When true (non-zero), the SNDHOLD feature is
activated.
Valid values are zero (0) or non-zero.
The default value is false (0).
This is the default value for all new streams.  Existing streams are
unaffected.
This setting can be examined and altered on an open stream using the
.B I_GWROPT
and
.B I_SWROPT
IO controls of
.BR streamio (7).
.TP
.B sys.streams.strctlsz
Defines the maximum
.I STREAMS
control part size.
Valid values are zero (0) or greater (MAXINT).
The default value is 2^12.
This is the system wide maximum.  Existing allocations are unaffected by
lowering this value.
Changing this value can have an impact on users of
.BR putpmsg (2s).
.TP
.B sys.streams.strmsgsz
Defines the maximum
.I STREAMS
message size.
Valid values are zero (0) or greater (MAXINT).
The default value is 2^18.
This is the system wide maximum.  Existing allocations are unaffected by
lowering this value.
Changing this value can have an impact on users of
.BR write (2s),
.BR writev (2s),
and
.BR putpmsg (2s).
.TP
.B sys.streams.strthresh
Defines the maximum amount of memory that will be allocated for use by the
.I STREAMS
subsystem via
.BR kmem_alloc (9)
or
.BR kmem_zalloc (9),
or indirectly using
.BR allocb (9)
or allocating other
.I STREAMS
datastructures.
Valid values are zero (0) or greater (MAXINT).
This is the system wide maximum.  Existing allocations are unaffected by
lowering this value.
Changing this value to a low value may have some use in debugging
.I STREAMS
drivers and modules.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR adjmsg (9),
.BR allocb (9),
.BR allocq (9),
.BR appq (9),
.BR backq (9),
.BR bcanget (9),
.BR bcanput (9),
.BR bcanputnext (9),
.BR bcopy (9),
.BR bufcall (9),
.BR bzero (9),
.BR canenable (9),
.BR canget (9),
.BR canput (9),
.BR canputnext (9),
.BR cmn_err (9),
.BR copyb (9),
.BR copyin (9),
.BR copymsg (9),
.BR copyout (9),
.BR datamsg (9),
.BR delay (9),
.BR drv_hztomsec (9),
.BR drv_hztousec (9),
.BR drv_msectohz (9),
.BR drv_priv (9),
.BR drv_usectohz (9),
.BR drv_usecwait (9),
.BR dupb (9),
.BR dupmsg (9),
.BR enableok (9),
.BR esballoc (9),
.BR esbbcall (9),
.BR flushband (9),
.BR flushq (9),
.BR freeb (9),
.BR freemsg (9),
.BR freeq (9),
.BR getmajor (9),
.BR getminor (9),
.BR getq (9),
.BR insq (9),
.BR isdatablk (9),
.BR isdatamsg (9),
.BR kmem_alloc (9),
.BR kmem_free (9),
.BR kmem_zalloc (9),
.BR kmem_zalloc_node (9),
.BR linkb (9),
.BR linkmsg (9),
.BR makedevice (9),
.BR max (9),
.BR min (9),
.BR msgdsize (9),
.BR msgpullup (9),
.BR msgsize (9),
.BR noenable (9),
.BR OTHERQ (9),
.BR pullupmsg (9),
.BR put (9),
.BR putbq (9),
.BR putctl (9),
.BR putctl1 (9),
.BR putnext (9),
.BR putnextctl (9),
.BR putnextctl1 (9),
.BR putq (9),
.BR qattach (9),
.IR qi_qclose (9),
.BR qenable (9),
.IR qi_qopen (9),
.BR qprocsoff (9),
.BR qprocson (9),
.BR qreply (9),
.BR qsize (9),
.BR qcountstrm (9),
.BR qwait (9),
.BR qwait_sig (9),
.BR RD (9),
.BR register_inode (9),
.BR register_strdev (9),
.BR register_strdev_major (9),
.BR register_strdev_minor (9),
.BR register_strmod (9),
.BR rmvb (9),
.BR rmvq (9),
.BR SAMESTR (9),
.BR strlog (9),
.BR strqget (9),
.BR strqset (9),
.BR testb (9),
.BR unbufcall (9),
.BR unlinkb (9),
.BR unregister_inode (9),
.BR unregister_strdev (9),
.BR unregister_strdev_major (9),
.BR unregister_strdev_minor (9),
.BR unregister_strmod (9),
.BR WR (9),
.BR xmsgsize (9),
.BR allocb_physreq (9),
.BR connld (9),
.BR fifo (9),
.BR mknod (9),
.BR mount (9),
.BR noenable (9),
.BR OTHERQ (9),
.BR pipemod (9),
.BR qdetach (9),
.BR timeout (9),
.BR umount (9),
.BR unlink (9),
.BR untimeout (9),
.BR lis_adjmsg (9),
.BR lis_allocb (9),
.BR lis_allocb_physreq (9),
.BR lis_allocq (9),
.BR lis_appq (9),
.BR lis_backq (9),
.BR lis_bcanput (9),
.BR lis_bcanputnext (9),
.BR lis_bcopy (9),
.BR lis_bufcall (9),
.BR lis_bzero (9),
.BR lis_canenable (9),
.BR lis_canput (9),
.BR lis_canputnext (9),
.BR lis_cmn_err (9),
.BR lis_copyb (9),
.BR lis_copymsg (9),
.BR lis_datamsg (9),
.BR lis_date (9),
.BR lis_dupb (9),
.BR lis_dupmsg (9),
.BR lis_enableok (9),
.BR lis_esballoc (9),
.BR lis_esbbcall (9),
.BR lis_find_strdev (9),
.BR lis_flushband (9),
.BR lis_flushq (9),
.BR lis_freeb (9),
.BR lis_freemsg (9),
.BR lis_freeq (9),
.BR lis_getq (9),
.BR lis_insq (9),
.BR lis_isdatablk (9),
.BR lis_isdatamsg (9),
.BR lis_linkb (9),
.BR lis_mknod (9),
.BR lis_mount (9),
.BR lis_msgdsize (9),
.BR lis_msgpullup (9),
.BR lis_msgsize (9),
.BR lis_noenable (9),
.BR lis_OTHER (9),
.BR lis_OTHERQ (9),
.BR lis_pullupmsg (9),
.BR lis_putbq (9),
.BR lis_putctl1 (9),
.BR lis_putctl (9),
.BR lis_putnext (9),
.BR lis_putnextctl1 (9),
.BR lis_putnextctl (9),
.BR lis_putq (9),
.BR lis_qattach (9),
.BR lis_qclose (9),
.BR lis_qdetach (9),
.BR lis_qenable (9),
.BR lis_qopen (9),
.BR lis_qprocsoff (9),
.BR lis_qprocson (9),
.BR lis_qreply (9),
.BR lis_qsize (9),
.BR lis_RD (9),
.BR lis_register_strdev (9),
.BR lis_register_strmod (9),
.BR lis_rmvb (9),
.BR lis_rmvq (9),
.BR lis_safe_canenable (9),
.BR lis_safe_enableok (9),
.BR lis_safe_noenable (9),
.BR lis_safe_OTHERQ (9),
.BR lis_safe_putnext (9),
.BR lis_safe_qreply (9),
.BR lis_safe_RD (9),
.BR lis_safe_SAMESTR (9),
.BR lis_safe_WR (9),
.BR lis_SAMESTR (9),
.BR lis_strqget (9),
.BR lis_strqset (9),
.BR lis_testb (9),
.BR lis_timeout (9),
.BR lis_umount2 (9),
.BR lis_umount (9),
.BR lis_unbufcall (9),
.BR lis_unlink (9),
.BR lis_unlinkb (9),
.BR lis_unregister_strdev (9),
.BR lis_unregister_strmod (9),
.BR lis_untimeout (9),
.BR lis_version (9),
.BR lis_WR (9),
.BR lis_xmsgsize (9).
.\"
.\"
.SH BUGS
.PP
.\"
.\"
.SH COMPATIBILITY
.PP
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.\"
.\"
.SH HISTORY
.PP
.I STREAMS
first appeared in
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
