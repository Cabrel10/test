'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) unfreezestr.9.man,v 0.9.2.25 2006/04/05 09:44:19 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:19 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" unfreezestr.9.man,v
.\" Revision 0.9.2.25  2006/04/05 09:44:19  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH UNFREEZESTR 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B unfreezestr
\- thaw the state of a stream queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #undef _SUN_SOURCE
.br
.B #undef _LIS_SOURCE
.br
.B #include <sys/stream.h>
.br
.B #include <sys/ddi.h>
.HP
.BI "void unfreezestr(queue_t *" q ", pl_t " pl );
.sp 2
.PP
.B #define _SUN_SOURCE
.br
.B #define _LIS_SOURCE
.br
.B #include <sys/stream.h>
.br
.B #include <sys/ddi.h>
.HP
.BI "void unfreezestr(queue_t *" q );
.PD
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I q
the queue within the
Stream
to thaw.
.PD 0
.TP
.I pl
the interrupt priority level to restore.
.PD
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.PP
.BR unfreezestr ()
thaws the state of the
Stream
containing queue,
.IR q .
Streams are normally in the thawed state.
The purpose of
.BR unfreezestr ()
is to thaw the state of the
Stream
containing queue,
.IR q ,
after freezing the
Stream
with
.BR freezestr (9).
.PP
.BR unfreezestr ()
must be called before returning in the same thread in which
.BR freezestr (9)
was called.
.PP
The
.I SVR 4.2
version of
.BR unfreezestr ()
must be called with the value returned by
.BR freezestr (9)
as the
.I pl
argument to the call.
.\"
.\"
.SH USAGE
.PP
.BR unfreezestr ()
is intended to be used from a
.I STREAMS
driver or module
.IR qi_qopen (9),
.IR qi_qclose (9),
.IR qi_putp (9),
or
.IR qi_srvp (9),
procedure to thaw the state of the
Stream
previously frozen with
.BR freezestr (9),
once
.I STREAMS
utilities that directly altered the state of a queue within the
Stream
were called, or direct searching or manipulation of a queue has been performed,
in a Symetric Multi-Processor (SMP) environment.
.PP
Prior to
.IR "SVR 4.1 MP" ,
the proper approach when performing similar functions was to bracket operations that manipulated or
searched queues with
.BR splstr (9)
and
.BR splx (9).
In the Uni-Processor (UP) environment, calling
.BR freezestr (9)
has the same effect as calling
.BR splstr (9),
and calling
.BR unfreezestr ()
has the same effect as calling
.BR splx (9).
.\"
.\"
.SH RETURN
.PP
.BR unfreezestr ()
returns
.BR void .
.\"
.\"
.SH ERRORS
.PP
.BR unfreezestr ()
always succeeds.
.\"
.\"
.SH CONTEXT
.PP
.BR unfreezestr ()
can be called from any context, including user context, module procedures, callouts, callbacks, soft
interrupts (tasklets and bottom halves), and interrupt service routines.
In general
.BR unfreezestr ()
must be called before returning from the same context in which
.BR freezestr (9)
was called.
.\"
.\"
.SH MP-STREAMS
.PP
.BR unfreezestr ()
is MP-safe; however, the caller is responsible for the validity of the
reference
.IR q .
References to
.I q
from a procedure, call out or callback predicated on the queue pair to which
.I q
belongs are guaranteed valid.  The caller must guarantee the validity from
call outs, callbacks, soft interrupts (tasklets and bottom halves), and interrupt service routines not
predicated on the queue pair to which
.I q
belongs.
In general,
.I q
is valid from the moment that
.BR qprocson (9)
returns until the moment that
.BR qprocsoff (9)
is called.
.PP
In the Uni-Processor (UP) environment,
.BR splx (9)
can be called instead of
.BR unfreezestr ().
.\"
.\"
.SH NOTICES
.PP
.BR unfreezestr ()
called with with an invalid
.I q
pointer will have undefined results.
.PP
If
.BR unfreezestr ()
is called twice for the same queue, or is called without first calling
.BR freezestr (9),
results will be undefined, and may panic or lock the kernel.
.\"
.\"
.SH EXAMPLES
.PP
See
.BR freezestr (9).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR freezestr (9),
.BR allocq (9)
.BR appq (9),
.BR bcanget (9),
.BR bcanput (9),
.BR bcanputnext (9),
.BR bufcall (9),
.BR canget (9),
.BR canput (9),
.BR canputnext (9),
.BR enableok (9),
.BR esbbcall (9),
.BR flushband (9),
.BR flushq (9),
.BR getq (9),
.BR insq (9),
.BR noenable (9),
.BR put (9)
.BR putbq (9),
.BR putq (9),
.BR qbufcall (9)
.IR qi_qclose (9),
.BR qcountstrm (9),
.BR qenable (9),
.IR qi_qopen (9),
.BR qprocsoff (9)
.BR qprocson (9)
.BR qreply (9),
.BR qsize (9),
.BR qtimeout (9)
.BR qwriter (9)
.BR rmvq (9),
.BR SAMESTR (9).
.BR setq (9),
.IR qi_srvp (9),
.BR STREAMS (9),
.BR strqget (9),
.BR strqset (9),
.BR timeout (9).
.\"
.\"
.SH BUGS
.PP
.BR unfreezestr ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR unfreezestr ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and systems based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg,
.[
suxspg
.]
.IR UnixWare \(rg
.[
uw7spg
.]
and
.IR LiS
.[
lis
.]
provide this function.
.IR AIX \(rg,
.[
aixspg
.]
.IR HP-UX \(rg,
.[
hpuxspg
.]
.IR OSF/1 \(rg
.[
osfspg
.]
and
.IR UXP/V \(rg
.[
uxpspg
.]
do not provide this function.
.RI ( HP-UX \(rg
provides the symbols, but they do nothing.)
.IR HP-UX \(rg
.[
hpuxspg
.]
lists
.BR unfreezestr ()
as a function that can only be passed a queue in the queue pair currently
being synchronized within a module procedure.
.IR HP-UX \(rg
.[
hpuxspg
.]
also lists
.BR unfreezestr ()
as a utility that cannot be called from user functions or
.RI non- STREAMS
code; that is, contexts asynchronous to the Stream containing
.IR q .
.IR Solaris \(rg
.[
solspg
.]
and
.IR LiS
provide the function prototype:
.BI "void unfreezestr(queue_t *" q ).
.IR HP-UX \(rg,
.[
hpuxspg
.]
.IR SUPER-UX \(rg
.[
suxspg
.]
and
.IR UnixWare \(rg
.[
uw7spg
.]
provide the prototype
.BR "void unfreezestr(queue_t *" q ", pl_t " pl ).
.IP ""
Portable
.I STREAMS
drivers and modules will avoid the use of
.BR freezestr (9)
and
.BR unfreezestr ().
.IP \(em
.IR LiS
.[
LiS
.]
provides a particularly broken version of this function.  See
.BR freezestr (9)
for more information.
.IP ""
Portable
.I STREAMS
drivers and modules that use this function in the SMP environment will use
.B @PACKAGE_TITLE@
.[
lfs
.]
in place of
.IR LiS .
.IP \(em
.I "SVR 4.2 MP DDI/DKI"
specifies that the following functions cannot be called on a frozen stream:
.BR bcanput (9),
.BR bcanputnext (9),
.BR canput (9),
.BR canputnext (9),
.BR enableok (9),
.BR flushband (9),
.BR flushq (9),
.BR getq (9),
.BR noenable (9),
.BR put (9),
.BR putb (9),
.BR putq (9),
.BR qenable (9),
.BR qprocsoff (9),
.BR qprocson (9),
.BR qreply (9),
.BR qsize (9),
.BR SAMESTR (9).
.IP ""
Portable
.I STREAMS
drivers and modules will not call these functions on a
Stream
frozen by the caller.
.IP \(em
.I "SVR 4.2 MP DDI/DKI"
specifies that the following functions must have the
Stream
frozen by the caller across the call:
.BR insq (9),
.BR rmvq (9),
.BR strqget (9),
.BR strqset (9).
.IP ""
Portable
.I STREAMS
drivers and modules, operating in the SMP environment, will bracket calls to these functions with
.BR freezestr (9)
and
.BR unfreezestr ().
Portable
.I STREAMS
drivers and modules, operating in the UP environment, will bracket calles to these functions with
either
.BR freezestr (9)
and
.BR unfreezestr (),
or with
.BR splstr (9)
and
.BR splx (),
but not a mixture of the two.
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.[
uslspg
.]
.\"
.\"
.SH HISTORY
.PP
A version of
.BR freezestr ()
first appeared in
.IR "SVR 4.0 MP" " and " "SVR 4.2 MP" .
.[
svr4dk
.]
.[
usldk
.]
.\"
.\"
.[
$LIST$
.]
.TI
