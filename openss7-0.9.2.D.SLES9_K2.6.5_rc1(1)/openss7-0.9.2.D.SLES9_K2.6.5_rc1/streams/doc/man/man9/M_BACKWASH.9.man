'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) M_BACKWASH.9.man,v 0.9.2.10 2006/04/05 09:44:02 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:02 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" M_BACKWASH.9.man,v
.\" Revision 0.9.2.10  2006/04/05 09:44:02  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH M_BACKWASH 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B M_BACKWASH
\- \fISTREAMS\fP backwash direct I/O message
.\"
.\"
.SH FORMAT
.PP
The
.B M_BACKWASH
message block is a
.BR datab (9)
structure and associated data buffer that contains no data.
.PP
An
.B M_BACKWASH
message is a normal priority message that consists of one
.B M_BACKWASH
message block followed by a
.BR M_DATA (9),
.BR M_PROTO (9),
or
.BR M_PCPROTO (9)
message.  Note that the attached message can consist of one or more message blocks: see
.BR M_DATA (9),
.BR M_PROTO (9),
and
.BR M_PCPROTO (9),
for the format of those messages.
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS ,
implementation extension.
.\"
.\"
.SH DESCRIPTION
.PP
.B M_BACKWASH
is a message used in conjunction with
.BR M_BACKDONE (9),
.BR M_LETSPLAY (9),
and
.BR M_DONTPLAY (9)
to coordinate the establishment of direct IO from the driver, bypassing the
Stream head
and any
pushed modules, using the
.BR wantio (9)
utility.  See
.BR wantio (9).
.\"
.PP
.B M_BACKWASH
messages cannot be generated by a user level process.
.B M_BACKWASH
messages arriving at the
Stream head
are discarded (ignored and freed).
.B M_BACKWASH
messages should only be generated by a driver or module in response to a
.BR M_BACKDONE (9)
message as described under
.RI \(lq USAGE ,\(rq
below.
.\"
.\"
.SH USAGE
.PP
Before calling
.BR wantio (9)
for an active
Stream,
and shifting from normal
Stream head
IO to driver direct IO,
the following steps should be performed by the driver:
.IP (1) \w'(0)\(em'u
Send a
.BR M_LETSPLAY (9)
message upstream with a
.BR strlp (9)
structure in the message.
.IP ""
Once the
.BR M_LETSPLAY (9)
message reaches the
Stream head,
the
Stream head
compares the
.I lp_count
count with the number of modules pushed on the
Stream.
If the two are equal, all modules pushed on
the
Stream
agree to driver direct IO, and the
Stream head
returns an
.BR M_BACKDONE (9)
message.  If the two are different, some module pushed on the
Stream
does not agree to driver direct
IO, and the
Stream head
returns an
.BR M_DONTPLAY (9)
message.
.IP (2)
Wait for an
.BR M_DONTPLAY (9)
or
.BR M_BACKDONE (9)
message received on the write queue.
.IP ""
When an intervening module receives an
.BR M_BACKDONE (9)
message, it delivers all queued data as
.B M_BACKWASH
messages, and any
.B M_BACKWASH
messages received from upstream,
and sends the
.BR M_BACKDONE (9)
message downstream.
In this way, all queue data is delivered to the driver's write queue as
.B M_BACKWASH
messages followed by a
.BR M_BACKDONE (9)
message.
.IP (3)
If an
.BR M_DONTPLAY (9)
message is received, the driver cannot call
.BR wantio (9).
.IP (4)
If an
.BR M_BACKDONE (9)
message is received, the driver can handle any
.B M_BACKWASH
messages representing pushed data and then call
.BR wantio (9).
.\"
.\"
.SH NOTICES
.PP
.B M_BACKWASH
is an
.IR AIX \(rg
specific message.
.\"
.\"
.SH EXAMPLES
.PP
A canonical handling of
.B M_BACKWASH
messages in a module's write-side (downstream)
.IR qi_putp (9)
and
.IR qi_srvp (9)
procedure is as follows:
.PP
Module
.IR qi_putp (9)
procedure:
.nf
\fC\s-1
   1  /* module put procedure */
   2  int
   3  xxx_putp(queue_t *q, mblk_t *mp)
   4  {
   5      switch (mp->b_datap->db_type) {
   6      ...
   7      case M_BACKWASH:
   8      case M_BACKDONE:
   9      case M_DONTPLAY:
  10  #if have_service_procedure
  11          putq(q, mp);
  12  #else
  13          putnext(q, mp);
  14  #endif
  15          break;
  16      ...
  17      }
  18  }
\s+1\fP
.fi
.PP
Module
.IR qi_srvp (9)
procedure:
.PP
.nf
\fC\s-1
   1  /* driver put procedure */
   2  int
   3  xxx_putp(queue_t *q, mblk_t *mp)
   4  {
   5      switch (mp->b_datap->db_type) {
   6      ...
   7      case M_BACKWASH:
   8  #if have_service_procedure
   9          putq(q, xchg(&mp->b_cont, NULL));
  10  #else
  11          /* process message */
  12  #endif
  13          freeb(mp);
  14          break;
  15      case M_BACKDONE:
  16          freemsg(mp);
  17          /* now direct IO can be performed */
  18          wantio(...);
  19          break;
  20      case M_DONTPLAY:
  21          freemsg(mp);
  22          /* cancel wantio */
  23          break;
  24      ...
  25      }
  26  }
\s+1\fP
.fi
.\"
.\"
.SH "SEE ALSO"
.PP
.BR datab (9),
.BR M_BACKDONE (9),
.\".BR M_BACKWASH (9),
.BR M_DONTPLAY (9),
.BR M_LETSPLAY (9),
.BR wantio (9),
.BR msgb (9).
.\"
.\"
.SH COMPATIBILITY
.PP
The
.B M_BACKWASH
.I STREAMS
message is compatible with
.IR AIX \(rg,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
Only
.IR AIX \(rg
.[
aixspg
.]
documents the
.BR M_BACKWASH "(9), " M_LETSPLAY "(9), " M_DONTPLAY "(9) and " M_BACKDONE (9)
data block types.
These data block types are provided for source compatibility with drivers
written for
.IR AIX \(rg
.[
aixspg
.]
and should not be used by portable
.I STREAMS
drivers and modules.
It might be necessary to define
.B _AIX_SOURCE
before including
.B sys/stream.h
to expose these symbols.
.IP ""
Portable
.I STREAMS
drivers and modules will not use the
.BR M_BACKWASH "(9), " M_LETSPLAY "(9), " M_DONTPLAY "(9) or " M_BACKDONE (9)
data block types.
.IP \(em
.B M_BACKWASH
is an
.IR AIX \(rg
specific message, provided by
.B @PACKAGE_TITLE@
.[
lfs
.]
for compatibility with
.IR AIX \(rg.
.IP ""
Portable
.I STREAMS
drivers and modules will not use this message.
.IP \(em
Binary compatibiltiy is not guaranteed.
.PP
See
.BR aixcompat (9)
and
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR AIX \(rg
documentation.
.[
aixspg
.]
.\"
.\"
.SH HISTORY
.PP
The
.B M_BACKWASH
message first appeared in
.IR AIX \(rg.
.[
aixspg
.]
.\"
.\"
.[
$LIST$
.]
.TI
