'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) putnext.9.man,v 1.1.4.5 2006/04/05 09:42:44 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:42:44 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" putnext.9.man,v
.\" Revision 1.1.4.5  2006/04/05 09:42:44  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database lis.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so lis.macros
.\"
.\"
.TH PUTNEXT 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B putnext, lis_putnext
\- puts a message on the downstream \fISTREAMS\fR message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP 8
.BI "void putnext(queue_t *" q ", mblk_t *" mp );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I q
the queue upstream of the queue to which to put the message.
.TP
.I mp
the message to put to the downstream queue.
.\"
.\"
.SH DESCRIPTION
.PP
.BR putnext ()
invokes the put procedure of the queue
.I q->q_next
with the message pointed to by
.IR mp.
.PP
.BR putnext ()
is normally invoked from within the put or service procedure belonging to
queue
.IR q .
.PP
It is the responsibility of a procedure calling
.BR putnext ()
with a low priority message pointed to by
.I mp
to first call
.BR canputnext (9)
for the queue to check for flow control.
If
.BR canputnext (9)
fails for queue
.IR q ,
the procedure should not normally invoke
.BR putnext ()
with a low priority message for the flow controlled queue
.IR q->q_next .
.\"
.\"
.SH RETURN
.PP
.BR putnext ()
returns void.
.\"
.\"
.SH ERRORS
.PP
.BR putnext ()
fails silently and frees the message pointed to by
.I mp
when the following occurs:
the message pointer
.I mp
is
.BR NULL ;
the queue pointer
.I q
is
.BR NULL ;
the structure pointed to by
.I q
is not a queue structure;
the pointer
.I q->q_next
is
.BR NULL .
.PP
.BR putnext ()
fails silently when a queue band structure cannot be allocated for the band
specified in
.IR mp->b_band .
The caller can ensure that a queue band structure exists for the band in quest
by calling
.BR strqset (9)
for the band.
.\"
.\"
.SH CONTEXT
.PP
.BR putnext ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
Consideration must be given when calling
.BR putnext ()
from interrupt service routine context that the next module in the stream
might not be prepared to be called at interrupt service routine context.
.\"
.\"
.SH MP-STREAMS
.PP
.BR putnext ()
is MP-safe; however, the caller must ensure exclusive access to the passed in
message,
.IR mp .
The driver or module put procedure invoked must also be MP-safe.
.\"
.\"
.SH NOTICES
.PP
The
.B LiS
.[
LiS
.]
implementation of
.BR putnext ()
also fails silently if
.I q->q_next
has a
.I q_info
pointer of
.BR NULL ;
the queue pointed to by
.I q->q_next
has no put procedure; or the
queue pointed to by
.I q->q_next
is closing, or the queue has had put and service routine processing turned off
(e.g. with
.BR qprocsoff (9)).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR putq (9),
.BR canputnext (9).
.\"
.\"
.SH BUGS
.PP
.BR putnext ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR putnext ()
is source-level compatible with SVR 4.2 DDI/DKI
.[
usldk
.]
and
.IR Solaris \(rg
with the following portability considerations:
.IP \(em \w'\(em\(em'u
Under
.IR LiS ,
.BR putnext ()
fails silently if
.I q->q_next
has a
.I q_info
pointer of
.BR NULL ;
the queue pointed to by
.I q->q_next
has no put procedure; or the
queue pointed to by
.I q->q_next
is closing, or the queue has had put and service routine processing turned off
(e.g. with
.BR qprocsoff (9)).
.IP \(em
Under
.IR LiS ,
.BR putnext ()
simply calls
.BR put ()
with the
.I q->q_next
pointer.
This does not protect agains simultaneous pushes and pops of modules and other actions that could
affect
.I q->q_next
and the structure of the stream.
.IP \(em
.BR put "(9), " putnext "(), " qreply (9)
will invoke a queue's put procedure shared an multi-threaded.
This is equivalent to
.IR Solaris \(rg
drivers with the
.B D_MP
flag set or with the
.B D_MTPUTSHARED
flag set.
.sp
Older versions of
.I LiS
hold an exclusive nesting queue procedures lock while calling
.BR putnext ()
executes.
.I LiS
.BR lis_safe_putnext ()
and
.BR lis_safe_qreply (9)
call the
.BR lis_safe_putmsg (9)
function, meaning that all message passing functions in
.I LiS
lock out interrupts until the entire thread of execution completes.
.sp
Because
.I LiS
also uses this lock for service procedures, this means that while the
.I LiS
schedule is running (at kernel thread priority 50), interrupts, timeouts, bottom
halves, hi tasklets and soft interrupts are indefinitely postponed.  This is not
acceptable for soft real-time performance.  Rewrite
.I LiS
put procedures to be MP-safe.
.IP \(em
.IR UnixWare \(rg
.[
uw7spg
.]
and
.IR SUPER-UX \(rg
.[
suxspg
.]
do not permit
.BR putnext ()
to be called on a stream frozen with
.BR freezestr (9).
.PP
For a fully functional and compatible
.I STREAMS
implementation, use
.BR "Linux Fast-STREAMS" .
.[
LfS
.]
.\"
.\"
.SH CONFORMANCE
.PP
SVR 4.2 DDI/DKI,
.[
usldk
.]
SVID,
.[
svid
.]
XID.
.[
xbd5
.]
.\"
.\"
.SH HISTORY
.PP
.BR putnext ()
first appeared in SVR 3.
.[
svr3spg
.]
In SVR 3,
.[
svr3spg
.]
4 and 4.2,
.BR putnext ()
returned
.BR int .
C compilers at the time did not support
.B void
as a return value, and the value returned by
.BR putnext ()
was ignored.
.\"
.\"
.SH VERSIONS
.PP
.BR putnext ()
first appeared in SVR 3.
.[
svr3
.]
In SVR 3,
.[
svr3
.]
4 and 4.2,
.BR putnext ()
returned
.BR int .
C compilers at the time did not support
.B void
as a return value, and the value returned by
.BR putnext ()
was ignored.
.\"
.\"
.[
$LIST$
.]
.TI
