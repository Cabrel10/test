'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) qbackenable.9.man,v 0.9.2.12 2006/04/05 09:44:15 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:15 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" qbackenable.9.man,v
.\" Revision 0.9.2.12  2006/04/05 09:44:15  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH QBACKENABLE 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B qbackenable
\- perform back enabling on a \fISTREAMS\fR queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.br
.B #include <sys/strsubr.h>
.HP
.BI "void qbackenable(queue_t *" q ", const unsigned char " band ", const char " bands []);
.\"
.\"
.SH ARGUMENTS
.PP
.TP \w'\fIbands\fR\(em'u
.I q
the queue to back enable from;
.PD 0
.TP
.I band
the (highest) band number to back-enable; and,
.TP
.I bands
an optional pointer to an array of flags, one for each band, that indicates precisely which bands to
back-enable.
.PD
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS ,
internal,
implementation specific.
.\"
.\"
.SH DESCRIPTION
.PP
.BR qbackenable ()
performs back-enabling operations for the
.I STREAMS
utilities
.BR getq (9),
.BR rmvq (9),
.BR flushq (9),
and
.BR flushband (9).
When any of these functions is called and the call results in a queue or queue band becoming
unblocked with regard to flow control,
and the
.B QWANTW
or
.B QB_WANTW
flag is set in
.I q_flag
or
.I qb_flag
indicating that a backward queue with a
.IR qi_srvp (9)
service procedure wished to write to the queue or queue band,
.BR qbackenable ()
will be called to effect the back-enabling of the backward queue.
.PP
Because
.BR getq (9)
and
.BR rmvq (9)
remove only one message from the message queue,
.BR getq (9)
and
.BR rmvq (9)
can only unblock one queue or queue band.
For
.BR getq (9)
and
.BR rmvq (9),
the
.I band
argument passed to
.BR qbackenable ()
indicates the band number that has become unblocked, and the
.I bands
argument passed to
.BR qbackenable ()
is
.BR NULL .
.PP
Because
.BR flushq (9)
and
.BR flushband (9)
can remove many messages from the message queue,
.BR flushq (9)
and
.BR flushband (9)
can unblock the queue and multiple queue bands.
For
.BR flushq (9)
and
.BR flushband (9),
the
.I band
argument passed to
.BR qbackenable ()
indicates the highest band number that has become unblocked, and the
.I bands
argument passed to
.BR qbackenable ()
is an array of
.B NBAND
elements of type
.BR "unsigned char" ,
each containing a single flag that is set when the corresponding band has become unblocked.
.PP
.BR qbackenable ()
searches backward in the Stream for a feeding queue that has a
.IR qi_srvp (9)
service procedure, or for which there is no further backward queue (it is a Stream head write queue
or a Stream end read queue).
If the queue to be back-enabled is anything but a
Stream head write queue, the queue is simply enabled with
.BR qenable (9).
When the queue to be enabled is a Stream head write queue,
.BR qbackenable ()
sets the corresponding
.B QBACK
or
.B QB_BACK
bit for every queue or queue band for which flow control has subsided using the
.I band
and
.I bands
arguments.
.PP
The
.B QBACK
and
.B QB_BACK
bits are set in the Stream head write queue so that the Stream head write queue
.IR qi_srvp (9)
service procedure,
.BR strwsrv (9),
thus enabled, can determine whether to indicate
.B S_WRNORM
or
.B S_WRBAND
events under the proper situations [see
.BR I_SETSIG (7)],
.BR strwsrv (9)
also uses these flages to determine whether to send
.RI { SIGPOLL }
or
.RI { SIGURG }
signals, and so that these signals can have the appropriate band number populated in the
.I POSIX
extended signal information,
.IR si_band .
See
.BR strwsrv (9)
for more information.
.\"
.SS Back-Enabling
.PP
Back-enabling occurs in
.I STREAMS
when a previously flow controlled (blocked) queue or queue band, becomes unblocked.
.PP
A flow controlled (blocked) queue or queue band is one for which
.B QFULL
or
.B QB_FULL
was set by
.BR appq (9),
.BR insq (9),
.BR putq (9),
.BR putbq (9),
.BR appq (9),
because the
.IR q_count " or " qb_count
for the queue exceeded the
.IR q_hiwat " or " qb_hiwat
high water thresholds, as a result of placing a message on the queue.
.PP
.BR canput (9),
.BR canputnext (9),
.BR bcanput (9),
.BR bcanputnext (9),
look for the first forward queue with a
.IR qi_srvp (9)
service procedure, or which has no further forward queue (it is a Stream head read queue or Stream
end write queue).
If the
.BR QFULL
or
.BR QB_FULL
bit is set for the queue or queue band, these functions return
.I false
.RB ( 0 )
and set the
.BR QWANTW
or
.BR QB_WANTW
bit on the queue or queue band to indicate that a feeding queue wishes to write to a queue or queue
band and encountered it full.
.PP
A queue or queue band becomes unblocked, when
.IR q_count " or " qb_count
falls beneath the
.IR q_lowat " or " qb_lowat
low water thresholds, or the queue or queue band becomes empty, as a result of removing a message,
or messages, from the queue with
.BR rmvq (9),
.BR getq (9),
.BR flushq (9),
.BR flushband (9),
and the
.B QFULL
or
.B QB_FULL
flags are cleared.
When a queue or queue band becomes unblocked, and the
.B QWANTW
or
.B QB_WANTW
bit is set indicating that a backward queue
.IR qi_srvp (9)
service procedure wanted to write to the queue or queue band when it was blocked,
these functions call
.BR qbackenable ().
.PP
.BR qbackenable ()
searches for the first backward queue that has a
.IR qi_srvp (9)
definition, or which has no further backward queue (it is a Stream head write queue or Stream end
read queue).
.\"
.\"
.SH RETURN
.PP
.BR qbackenable ()
returns
.BR void .
.\"
.\"
.SH ERRORS
.PP
.BR qbackenable ()
is always successful.
.\"
.\"
.SH CONTEXT
.PP
.BR qbackenable ()
can be called from any context, including user context, module procedures, call-outs, callbacks, soft
interrupts (tasklets and bottom halves), and interrupt service routines.
.PP
.BR qbackenable ()
must be called in
.I STREAMS
synchronous context for an intermediate queue pair, but may be called from an asynchronous context
for a queue ending a Stream at a Stream end.  That is,
for intermediate modules,
.BR qbackenable ()
must be called from within a queue or module procedure,
.IR qi_putp (9),
.IR qi_srvp (9),
.IR qi_qopen (9),
.IR qi_qclose (9),
for a queue in the queue pair for which the procedure belongs,
or for any queue in a Stream frozen by the caller with
.BR freezestr (9).
For queues ending a Stream, those for which
.I q->q_next
is
.BR NULL ,
.BR qbackenable ()
can be called for the queue from an asynchronous context.
See
.BR mp-streams (9)
for more information on synchronous and asynchronous contexts.
.\"
.\"
.SH MP-STREAMS
.PP
.BR qbackenable ()
is MP-safe.
Because
.BR qbackenable ()
can be invoked outside of
.IR STREAMS ,
(note that
.BR getq (9)
or other functions invoking
.BR qbackenable ()
can be called from outside
.IR STREAMS ),
it acquires a Stream head plumbing read lock for
the Stream head of the Stream containing
.IR q .
This protects dereference of
.I q_next
pointers along the Stream during the call, regardless of context.
.\"
.\"
.SH NOTICES
.PP
.BR qbackenable ()
is an internal
.I STREAMS
function which was not intended to be called by
the
.I STREAMS
driver or module writer.
.BR qbackenable ()
is not part of the DDI/DKI and should not be called by portable programs.
.BR qbackenable ()
is highly implementation dependent in function and prototype.  Use of this
function by a driver or module will guarantee that it is not portable even between
releases of
.BR "@PACKAGE_TITLE@" .
.\"
.\"
.SH IMPLEMENTATION
.PP
.BR qbackenable ()
is optimized to only take a Stream head plumbing read lock when necessary.  When
.I q
has a
.I q_next
pointer, (that is, it is an intermediate module), no Stream head plumbing read lock is acquired
This is because, for a module on the trunk,
.BR qbackenable ()
should only be invoked from a Stream synchronous context.  That is, from a put or service procedure
(that already has acquired a Stream head plumbing read lock), or an open or close routine (that have
acquired the
.B STRWOPEN
bit on the Stream head suppressing, other plumbing activities on the Stream).
When
.I q
has no
.I q_next
pointer, (that is, a terminal queue at a Stream end), a Stream head plumbing read lock is acquired.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR runqueues (9),
.BR qenable (9),
.BR noenable (9),
.IR qi_srvp (9),
.BR scheduleq (9),
.IR qi_qclose (9),
.BR freezestr (9),
.BR enableok (9).
.\"
.\"
.SH BUGS
.PP
.BR qbackenable ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR qbackenable ()
is compatible with descriptions of
.I STREAMS
internals for
.IR "SVR 4" ,
.[
magic
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR qbackenable ()
is roughly compatible with the internal operations described for
.IR "SVR 4 STREAMS"
in
.RI \(lq "The Magic Garden Explained" \(rq.
.[
magic
.]
.IP ""
.BR qbackenable ()
is an internal function that will not be called by portable
.I STREAMS
drivers or modules.
.IP \(em
.I SVR 4.2 MP
and systems based on
.I SVR 4
do not export this function.
.IP \(em
Source and Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4" .
.[
svr4spg
.]
.\"
.\"
.SH HISTORY
.PP
.BR qbackenable ()
is new for
.BR "@PACKAGE_TITLE@" .
.\"
.\"
.[
$LIST$
.]
.TI
