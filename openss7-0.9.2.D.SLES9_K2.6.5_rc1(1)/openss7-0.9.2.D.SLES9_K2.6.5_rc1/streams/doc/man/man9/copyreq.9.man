'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) copyreq.9.man,v 0.9.2.10 2006/04/05 09:44:10 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:10 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" copyreq.9.man,v
.\" Revision 0.9.2.10  2006/04/05 09:44:10  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH COPYREQ 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B copyreq
\- \fISTREAMS\fP copy request block structure
.\"
.\"
.SH SYNOPSIS
.PP
.nf
\fC\s-1
.B #include <sys/stream.h>

struct copyreq {
    int cq_cmd;        /* command being performed */
    cred_t *cq_cr;     /* credentials */
    uint cq_id;        /* id of this ioctl */
    caddr_t cq_addr;   /* data address */
    size_t cq_size;    /* size of data */
    int __pad1;
    int __pad2;
    uint cq_flag;      /* request flags (must be zero) */
    mblk_t *cq_private; /* private state information */
};

#define cq_uid          cq_cr->cr_uid
#define cq_gid          cq_cr->cr_gid

#define STRCANON        0x01    /* b_cont data block contains 
                                   canonical format specifier */
#define RECOPY          0x02    /* perform I_STR copyin
                                   again, this time using
                                   canonical format specifier */
\s+1\fP
.fi
.\"
.\"
.SH MEMBERS
.PP
The
.B copyreq
structure contains the following members:
.\" ----------------------
.TP \w'cq_private\(em'u
.I cq_cmd
current input-output control command;
.PD 0
.\" ----------------------
.TP
.I cq_cr
pointer to the invoking user credentials;
.\" ----------------------
.TP
.I cq_id
current input-output control identification number;
.\" ----------------------
.TP
.I cq_addr
address from which to
.BR copyin (9)
or
.BR copyout (9);
.\" ----------------------
.TP
.I cq_size
amount of data (in bytes) in an attached
.BR M_DATA (9)
message block to
.BR copyout (9),
or amount of data to
.BR copyin (9);
.\" ----------------------
.TP
.I __pad1
padding for alignment;
.\" ----------------------
.TP
.I __pad2
padding for alignment;
.\" ----------------------
.TP
.I cq_flag
modifier flags (see
.IR \(lq\)COMPATIBILITY\(rq\) ,
below);
.\" ----------------------
.TP
.I cq_private
pointer to a private state
.BR mblk_t (9).
.PD
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.PP
The
.B copyreq
structure is one of a set of
.BR ioctypes (9)
structures including
.BR iocblk (9),
.BR copyreq (9),
and
.BR copyresp (9),
that are used for communicating between the
Stream head
or an internal driver or module using
.I STREAMS
messages.  The messages used and the placement of these structures into messages is illustrated in
the table below:
.RS 0
.sp
.TS
tab(:);
lelele
lbelelbe.
message:direction:contains
\_:\_:\_
M_IOCTL\fR(9):downstream:iocblk\fR(9)
M_COPYIN\fR(9):upstream:copyreq\fR(9)
M_COPYOUT\fR(9):upstream:copyreq\fR(9)
M_IOCDATA\fR(9):downstream:copyresp\fR(9)
M_IOCACK\fR(9):upstream:iocblk\fR(9)
M_IOCNAK\fR(9):upstream:iocblk\fR(9)
M_CTL\fR(9):both:iocblk\fR(9)
.TE
.sp
.RE
.\" -----------
.PP
When the
.B copyreq
structure is part of a
.BR M_COPYIN (9)
message, it is part of a
.BR copyin (9)
request; part of a
.BR M_COPYOUT (9)
message,
.BR copyout (9)
request.
.\" -----------
.PP
The members of the
.B copyreq
structure align with those of the
.BR iocblk (9)
and
.BR copyresp (9)
structures as follows:
.RS 0
.sp
.TS
tab(:);
lbelbelbe
lilili.
iocblk\fR(9)\fP:copyreq\fR(9)\fP:copyresp\fR(9)\fP
\_:\_:\_
ioc_cmd:cq_cmd:cp_cmd
ioc_cr:cq_cr:cp_cr
ioc_id:cq_id:cp_id
\fR\-:cq_addr:cp_rval
ioc_count:cq_size:\fR\-
ioc_error:\fR\-:\fR\-
ioc_rval:\fR\-:\fR\-
\fR\-:cq_flag:\fR\-
\fR\-:cq_private:cp_private
ioc_flag:\fR\-:cp_flag
.TE
.sp
.RE
.\" -----------
.PP
The
.BR M_COPYIN (9)
or
.BR M_COPYOUT (9)
message is sent upstream to the
Stream head
from a driver or module actively processing a received
.I transparent
.BR M_IOCTL (9)
message, requesting the
Stream head
to perform a
.BR copyin (9)
or
.BR copyout (9)
operation with the user.
.\" -----------
.PP
While running the module's
.IR qi_putp (9)
or
.IR qi_srvp (9)
procedure, there is no user context present against which to perform a
.BR copyin (9)
or
.BR copyout (9)
operation.  The
.BR M_COPYIN (9)
or
.BR M_COPYOUT (9)
message is used to request that the
Stream head,
executing in user context, perform the
.BR copyin (9)
or
.BR copyout (9)
operation on the module's behalf and report the results in an
.BR M_IOCDATA (9)
message passed back downstream.
.\" -----------
.PP
The
.I cq_cmd
field contains the input-output control command number that was originally passed by the
Stream head
to the responding module in the
.BR M_IOCTL (9)
message.  This is also the
.I command
argument to the
.BR ioctl (2s)
call invoked by user.
.\" -----------
.PP
The
.I cq_cr
field contains a pointer to the user credential that was originally passed by the
Stream head
to the responding module in the
.BR M_IOCTL (9)
message.  These are the credentials of the user that initiated the
.BR ioctl (2s)
call and began the transaction.
.PP
The
.B cq_uid
and
.BR cq_gid ,
macros are for backwards compatibility with
.IR "SVR 3.2" .
Under
.IR "SVR 3.2" ,
these were adjacent members of type
.B ushort
and occupied the same space as the
.I cq_cr
pointer.
Under
.IR "SVR 4"
these became macros with the same name as the old members.
.\" -----------
.TP \w'cq_private\(em'u
.I cq_id
The
.I cq_id
field is the unique input-output control identification number that was originally passed by the
Stream head
to the responding module in the
.BR M_IOCTL (9)
message.
Most
.I STREAMS
implementations only allow one input-output control to be active at a time.  However, an
input-output control may be abandonned by the
Stream head
if a response is not forthcoming within a time interval.  In that case, another input-output control
may have been invoked.  This subsequent input-output control will have a different identifier.  By
tracking the identifier, the
Stream head
or
Stream end
can determine if requests, response or acknoweldgements belong to the same transaction.
.\" -----------
.TP
.I cq_flag
The
.I cq_flag
field contains implementation specific flags.
.B @PACKAGE_TITLE@
neither defines nor recognizes any flags.  It also does not alter the flags field in any structure.
This field can be used by drivers and modules to pass limited state information.
.\" -----------
.TP
.I cq_addr
The
.I cq_addr
field is populated by the responding module and contains the address from or to which the responding
module is requesting a
.BR copyin (9)
or
.BR copyout (9)
operation.  This field will be overwritten in the
Stream head
response with the
.I cp_rval
member of the
.BR copyresp (9)
structure in the
.BR M_IOCDATA (9)
message.
Therefore, if the reponding module requires the address for further processing after the
Stream head
responds, it should be stored in the state information associated with
.IR cq_private .
.\" -----------
.TP
.I cq_size
The
.I cq_size
field is populated by the responding module and contains the number of bytes the responding module
is requesting by copied in a
.BR copyin (9)
or
.BR copyout (9)
operation.
This field is not guaranteed preserved in the
Stream head
response as there is no corresponding member in the
.BR copyresp (9)
structure of the
.BR M_IOCDATA (9)
message.
Therefore, if the responding module requires the count for further processing after the
Stream head
responds, it should be stored in the state information associated with
.IR cq_private .
This filed aligns with the
.I ioc_count
field of the
.BR iocblk (9)
structure significant in the
.BR M_IOCTL (9)
and
.BR M_IOCACK (9)
messages.
.\" -----------
.TP
.I cq_private
The
.I cq_private
field can be used by the responding module to store a state value or pointer to an area where the
state is maintained.  The value stored in the
.I cq_private
field is preserved to the
.I cp_private
field of the
.BR copyresp (9)
structure contained in the
.BR M_IOCDATA (9)
message sent by the
Stream head
to report the result of the action.  Any value stored here will be preserved: it does not have to be
a pointer to an
.BR mblk_t (9).
.\"
.\"
.SH USAGE
.PP
The alignment of the
.B copyreq
structure with the
.BR iocblk (9)
and
.BR copyresp (9)
structures is tuned for transforming, in place, one structure into another, and one
input-output control related
.I STREAMS
message type into another, without the need to free and allocate message blocks.
.PP
The
.BR iocblk (9)
structure in a received
.I tranparent
.BR M_IOCTL (9)
message is tranformed into a
.B copyreq
structure for a responding
.BR M_COPYIN (9)
message.
The
Stream head
transforms the
.B copyreq
structure in the
.BR M_COPYIN (9)
message into a
.BR copyresp (9)
structure for a reporting
.BR M_IOCDATA (9)
message.
The responding module may then transform the
.BR copyresp (9)
structure in the
Stream head's
reporting
.BR M_IOCDATA (9)
message into another
.B copyreq
structure for an
.BR M_COPYOUT (9)
message.
This is illustrated in the table below:
.RS 0
.sp
.TS
tab(:);
lblbsclbs
l1l1l1c1l1l.
Mod:Received::Sent
_
RM:M_IOCTL:iocblk:->:M_IOCNAK:iocblk
RM:M_IOCTL:iocblk:->:M_IOCACK:iocblk
RM:M_IOCTL:iocblk:->:M_COPYIN:copyreq
SH:M_COPYIN:copyreq:->:M_IOCDATA:copyresp
RM:M_IOCDATA:copyresp:->:M_COPYOUT:copyreq
SH:M_COPYOUT:copyreq:->:M_IOCDATA:copyresp
RM:M_IOCDATA:copyresp:->:M_IOCACK:iocblk
_
.T&
llssss.
RM:\- Responding Module
SH:\- Stream head
.TE
.sp
.RE
.PP
The responding module generates a
.B copyreq
structure from either a
.B iocblk (9)
structure contained in a
.BR M_IOCTL (9)
message, or a
.B copyresp (9)
structure contained in a
.BR M_IOCDATA (9)
message.
The
Stream head
generates a
.BR copyresp (9)
structure from the
.B copyreq
structure contained in either a
.BR M_COPYIN (9)
message, or a
.BR M_COPYOUT (9)
message.
.\"
.\"
.SH CONTEXT
.PP
Functions that operate on the
.B copyreq
structure can be called from any context.  However, it is the caller's responsibility to ensure that
the calling thread has exclusive access to the
copy request structure.
When the
copy request structure
is contained in an
.BR M_COPYIN (9)
or
.BR M_COPYOUT (9)
transformed from an
.BR M_IOCTL (9)
or
.BR M_IOCDATA (9)
message that has just been removed from a
.BR queue (9)
in a
.IR qi_putp (9)
or
.IR qi_srvp (9)
procedure of the queue,
copy request structure
exclusivity is normally guaranteed.
.\"
.\"
.SH MP-STREAMS
.PP
Functions that access the
.B copyreq
structure are MP-safe.  However, it is the caller's responsibility to ensure exclusive access to the
structure before altering any of the members of the structure.
.PP
Because the copy request structure is normally stored in a
.I STREAMS
message, see
.BR datab (9)
for additional information.
.\"
.\"
.\".SH NOTICES
.\".PP
.\"
.\"
.SH EXAMPLES
.PP
See
.BR M_COPYIN (9)
for an example.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR datab (9),
.BR queue (9),
.IR qi_putp (9),
.IR qi_srvp (9).
.\"
.\"
.SH COMPATIBILITY
.PP
The
.B iocblk
structure is compatible with
.IR "SVR 4.2 MP EFT" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4.2" ,
.[
svr42
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IR Solaris \(rg,
.IR IRIX \(rg,
.IR SUPER-UX \(rg,
.IR UnixWare \(rg
and
.IR UXP/V \(rg
document the
.I cq_flag
member.
.[
soldoc
.]
.[
suxspg
.]
.[
uw7spg
.]
.[
uxpspg
.]
As far as I can tell the
.I cq_flag
member and the
.B STRCANON
and
.B RECOPY
flags were used in implementations of SVR 3.2
.[
svr3
.]
.IR STREAMS ;
however,
I cannot find documentation of how it ever worked.
Therefore,
.B @PACKAGE_TITLE@
does not implement the cannonical format specifier feature.
.IP ""
Portable
.I STREAMS
drivers and modules will set the
.I cq_flag
member to zero
.RB ( 0 ).
.IP \(em
.IR UnixWare \(rg
documents the
.I cq_uid
and
.I cq_gid
fields for
.IR "SCO OpenServer" \(rg
compatibility.
.I cq_uid
and
.I cq_gid
were present in
.IR "SVR 3.2" .
.[
svr3
.]
.IP ""
Portable
.I STREAMS
drivers and modules will not use the
.B cq_uid
nor
.B cq_gid
macros and will not attempt to access the old
.I "SVR 3.2"
members.
.IP \(em
The order and size of the various members of the
.BR iocblk (9)
structure, and the associated aligned
.BR copyreq (9)
and
.BR copyresp (9)
structures, vary in
.I STREAMS
from implementation to implementation.  Some implementations have different structure definitions
depending upon the word size of a specific architecture.
.B @PACKAGE_TITLE@
.[
lfs
.]
follows the
.IR "SVR 4.2"
implementation as closely as possible.
.IP ""
Portable
.I STREAMS
drivers and modules will not rely upon a specific overall size of the
.BR copyreq (9)
structure, or the offset or alignment of any of its members.
.IP \(em
Lining up these input-output control block data structures is tedious and uninteresting.  See
.BR ioctypes (9)
for more information.
Various implementations exhibit various alignments.
.IP ""
Portable
.I STREAMS
drivers and modules will not rely upon alignment of any fields except the first three fields of each
structure, and the alignment and preservation of the
.I cq_private
and
.I cp_private
fields.
That is all that is guaranteed by the
.IR "SVR 4.2 SPG" .
.[
svr42spg
.]
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 EFT" .
.[
svr42
.]
.\"
.\"
.SH HISTORY
.PP
The
.B copyreq
structure was combined with the
.BR copyreq (9)
and
.BR iocblk (9)
structures (see
.BR ioctypes (9))
in
.IR "SVR 4.0 STREAMS" .
.PP
The
.B copyreq
structure was introduced in
.IR "SVR 3" .
.[
svr3
.]
.\"
.\"
.[
$LIST$
.]
.TI
