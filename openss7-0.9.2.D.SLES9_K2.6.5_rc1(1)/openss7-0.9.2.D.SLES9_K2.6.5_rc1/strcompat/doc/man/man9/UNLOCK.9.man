'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) UNLOCK.9.man,v 0.9.2.7 2006/04/05 09:43:30 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:43:30 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" UNLOCK.9.man,v
.\" Revision 0.9.2.7  2006/04/05 09:43:30  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strcompat.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strcompat.macros
.\"
.\"
.TH UNLOCK 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B UNLOCK
\- release a basic lock
.\"
.\"
.SH SYNOPSIS
.PP
.B #define _SVR4_SOURCE
.br
.B #include <sys/ksynch.h>
.br
.B #include <sys/ddi.h>
.HP
.BI "void UNLOCK(lock_t *" lockp ", pl_t " pl );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I lockp
A pointer to the basic lock to release.
.TP
.I pl
A priority level to set if required after releasing the lock.
.\"
.\"
.SH DESCRIPTION
.PP
.BR LOCK_ALLOC (9),
.BR LOCK_DEALLOC (9),
.BR LOCK (9),
.BR LOCK_OWNED (9),
.BR TRYLOCK (9)
and
.BR UNLOCK (9)
are a set of primitive functions for allocating, deallocating, locking,
testing, attempting to lock and unlocking a basic lock of type
.BR lock_t .
.PP
.BR UNLOCK ()
releases the basic lock specified by the
.I lockp
argument and then restores the priority level specified by the
.I pl
argument.
.\"
.\"
.SH USAGE
.PP
.BR UNLOCK ()
is normally called in the reverse order as any call to
.BR LOCK (9)
or successful call to
.BR TRYLOCK (9).
.BR UNLOCK ()
is normally called with the same interrupt priority level in the
.I pl
argument that was returned as a return value from a call to
.BR LOCK (9)
or successful call to
.BR TRYLOCK (9).
.\"
.\"
.SH RETURN
.PP
.BR UNLOCK ()
returns
.BR void .
.\"
.\"
.SH ERRORS
.PP
.BR UNLOCK ()
is always successful.  If
.BR UNLOCK ()
is passed invalid or uninitialized arguments, or a
.I lockp
argument that has not been acquired by the calling context, then the results
will be indeterminate.
.\"
.\"
.SH CONTEXT
.PP
.BR UNLOCK ()
can be called from any context, provided that the context has previously
acquired the lock specified by
.I lockp
with
.BR LOCK (9)
or
.BR TRYLOCK (9).
.\"
.\"
.SH MP-STREAMS
.PP
.BR UNLOCK ()
is MP-safe.
.\"
.\"
.SH NOTICES
.PP
Basic locks of type
.B lock_t
are not recursive.  Calling
.BR LOCK (9)
for a basic lock that has been acquired by the calling processor with
.BR LOCK (9)
or
.BR TRYLOCK (9)
will result in single party deadlock.
.PP
.BR UNLOCK ()
is a
.IR "SVR 4.2" -specific
function:
.B _SVR4_SOURCE
must be defined before including DDI/DKI include files to expose this symbol.
.B Linux Fast-STREAMS
must also have been compiled with
.B CONFIG_STREAMS_COMPAT_SVR4
or
.B CONFIG_STREAMS_COMPAT_SVR4_MODULE
defined.
.\"
.\"
.SH IMPLEMENTATION
.PP
.BR UNLOCK ()
is implemented by unlocking
.I lockp
with
.BR spin_unlock (9)
and restoring the interrupt priority level
.I pl
with
.BR splx (9).
.\"
.\"
.SH EXAMPLES
.PP
The following is an example of the use of
.BR UNLOCK ():
.RS
.nf
\fC\s-1\
pl_t pl;
lock_t *lockp;
lockp = LOCK_ALLOC(0, plstr, NULL, KM_SLEEP);
 ...
pl = LOCK(lockp, plhi);
{
    /* manipulate protected data */
    ...
}
UNLOCK(lockp, pl);
 ...
LOCK_DEALLOC(lockp);
\s+1\fP
.fi
.RE
.\"
.\"
.SH "SEE ALSO"
.PP
.BR LOCK (9),
.BR LOCK_ALLOC (9),
.BR LOCK_DEALLOC (9),
.BR LOCK_OWNED (9),
.BR TRYLOCK (9),
.BR UNLOCK (9),
.BR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
.BR UNLOCK ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR UNLOCK ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI"
.[
usldk
.]
and systems based on
.IR "SVR 4.2 MP" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR UNLOCK ()
is provided for source level compatibility with
.IR "SVR 4.2"
for the purpose of porting
.IR "SVR 4.2"
drivers to
.BR Linux .
Because internal structures and definitions for
.B Linux Fast-STREAMS
.[
lfs
.]
differ from that of
.IR "SVR 4.2"
binaries are incompatible.
.IP \(em
.BR UNLOCK ()
only provides functionality comparable to
.IR "SVR 4.2"
for use by
.I STREAMS
drivers and modules.
Any and all functionality provided by
.BR UNLOCK ()
in support of
.RI non- STREAMS
devices are not supported.
.PP
See
.BR STREAMS (9)
for more compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.[
uslspg
.]
.\"
.\"
.SH HISTORY
.PP
.BR UNLOCK ()
first appeared in
.IR "SVR 4.2" .
.[
svr42
.]
.\"
.\"
.[
$LIST$
.]
.TI
