'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) allocb.9.man,v 0.9.2.29 2006/04/05 09:44:05 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:05 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" allocb.9.man,v
.\" Revision 0.9.2.29  2006/04/05 09:44:05  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH ALLOCB 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B allocb
\- allocate a \fISTREAMS\fR message and data block
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "mblk_t *allocb(size_t " bsize ", uint " pri );
.\"
.\"
.SH ARGUMENTS
.TP
.I bsize
the size of the message buffer to allocate.
.PD 0
.TP
.I pri
the priority of the request.
.PD
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.\".PP
.\".BR allocb ()
.\"returns a pointer to a message block of type
.\".BR M_DATA (9),
.\"in which the data buffer contains at least
.\".I bsize
.\"bytes.
.\".I pri
.\"is one of
.\".BR BPRI_LO ,
.\".BR BPRI_MED ,
.\"or
.\".BR BPRI_HI ,
.\"and indicates how criticlaly the module needs the buffer.
.\".I pri
.\"is currently unused and is maintained only for compatiblity with applications developed under prior
.\"to
.\".IR UNIX "\(rg " "System V Release 4.0" .
.\"If a block cannot be allocated as requested,
.\".BR allocb ()
.\"returns a
.\".B NULL
.\"pointer.
.\".PP
.\"When a message is allocated via
.\".BR allocb ()
.\"the
.\".I b_band
.\"field of the
.\".BR mblk_t (9)
.\"is initially set to zero.  Modules and drivers may set this field if so desired.
.PP
.BR allocb ()
allocates a message block,
.BR msgb (9),
a data block,
.BR datab (9),
and an associated data buffer of the requested size,
.IR bsize ,
at the requested priority,
.IR pri .
.PP
If the requested size,
.IR bsize ,
is less than the
.I STREAMS
constant
.BR FASTBUF ,
then a data block,
.BR datab (9),
with an internal data buffer of size
.B FASTBUF
will be created.
If the requested size,
.IR bsize ,
is larger than the
.I STREAMS
constant
.BR FASTBUF ,
then a data block,
.BR datab (9),
with an external data buffer of at least size
.I bsize
will be allocated.
.PP
The
.I pri
can be one of the following values:
.sp
.TS
expand tab(:);
lb0ls.
BPRI_LO\ \ :requests a low priority message buffer.
BPRI_MED\ \ :requests a medium priority message buffer.
BPRI_HI\ \ :requests a high priority message buffer.
BPRI_WAITOK\ \ :block for a low priority message buffer.
.TE
.PP
If
.BR allocb ()
is called with a
.I pri
other than
.BR BPRI_LO ", " BPRI_MED ", " BPRI_HI " or " BPRI_WAITOK ,
the request will be treated as
.BR BPRI_LO .
.PP
The
.I pri
argument is ignored by
.I "SVR 4"
.[
svr4spg
.]
and later implementations.
.\"
.\"
.SH USAGE
.PP
Priority
.B BPRI_WAITOK
is added for
.IR OSF/1 \(rg
.[
osfspg
.]
compatibility.
.B BPRI_WAITOK
is used primarily by the
Stream head
under conditions when it is acceptable to sleep awaiting the allocation of a message block.
.PP
Non-portable
.I STREAMS
drivers and modules must only use
.BR BPRI_WAITOK
from a blocking context; that is, it is acceptable to use this priority from within a module or
driver
.IR qi_qopen (9)
open or
.IR qi_qclose (9)
close routine.
An example of a situation where
.B BPRI_WAITOK
would be used from a driver or module
.IR qi_qopen (9)
open routine would be when the module needs to pre-allocate message blocks for use by
.IR qi_putp (9)
or
.IR qi_srvp (9)
procedures, and if allocation failed would otherwise have to return an error from the
.IR qi_qopen (9)
open routine.
.PP
For consistency with past implementations of
.IR STREAMS ,
it is common practise for a driver or module to specify
.B BPRI_MED
for all message allocations with
.BR allocb ().
.\"
.\"
.SH RETURN
.PP
Upon success,
.BR allocb ()
will return a pointer to the message block,
.BR msgb (9),
of the allocated 3-tuple.
The associated
.BR datab (9)
data block will have a data block type of
.BR M_DATA (9).
All bands,
.IR b_band ,
and flags,
.IR b_flag ,
will be cleared.
Message data pointers,
.I b_rptr
and
.IR b_wptr ,
will be set to the beginning of the data block buffer area.
The allocated data block,
.BR datab (9),
will have a reference count,
.IR db_ref ,
of one
.RB ( 1 ).
.PP
Upon failure,
.BR allocb ()
will
return a
.B NULL
pointer.
.PP
If priority
.BR BPRI_WAITOK
is specified for
.IR pri ,
.BR allocb ()
always succeeds.
.\"
.\"
.SH ERRORS
.PP
When an error occurs,
.BR allocb ()
will return a
.B NULL
message pointer.
.PP
.BR allocb ()
will only fail if
.I pri
is other than
.B BPRI_WAITOK
and there is insufficient
.I STREAMS
memory to allocate the necessary data structures for the message block, data block or data buffer,
for the given value of
.I bsize
and
.IR pri .
.PP
Failure to allocate a message block is typically followed by a call to
.BR bufcall (9).
.\"
.\"
.SH CONTEXT
.PP
When
.I pri
is other than
.BR BPRI_WAITOK ,
.BR allocb ()
can be called from any context, including user context, module procedures, call outs, callbacks,
soft interrupts (tasklets and bottom halves), and interrupt service routines.  (As a general rule,
it is not wise to perform memory allocations in interrupt service routines.)
When
.I pri
is
.BR BPRI_WAITOK ,
.BR allocb ()
can only be called from a blocking context (process context, module
.IR qi_qopen (9)
and
.IR qi_qclose (9)
procedures).
.\"
.\"
.SH MP-STREAMS
.PP
.BR allocb ()
is MP-safe.  The caller has exclusive access to the returned message.
.\"
.\"
.SH NOTICES
.PP
Many
.RI post- "SVR 3"
.[
svr3
.]
.I STREAMS
implementations ignore the
.I pri
argument to
.BR allocb ().
The message block
.I pri
was an
.I SVR 3
.[
svr3spg
.]
concept which was found not to be useful, primarily due to priority inversion.
For a history of the priority mechanism, and a discussion as to why the
mechanism was abandoned in
.IR "SVR 4" ,
.[
svr4spg
.]
see
.RI \*(lq "The Magic Garden Explained"
.[ [\fB
magic
%P Section 7.2.2
.] \fR].\(rq
.\"
.\"
.SH IMPLEMENTATION
.PP
.B @PACKAGE_TITLE@
allocates
.BR FASTBUF -sized
3-tuples
.RB ( msgb "(9) structure, " datab "(9) structure,
and data buffer internal to the
.BR datab "(9) structure)
in a single memory cache allocation of a
.BR mdbblock
implementation structure.  This is consistent with descriptions for
.I SVR 4
as described in
.RI \(lq "The Magic Garden Explained"
.[ [\fB
magic
.] \fR].\(rq
.PP
.B Linux Fast-STREAMS
.[
LfS
.]
keeps two stores for combined message data blocks
.RB ( mdbblock ):
a per-CPU free block list that is maintained during the
.BR runqueues (9)
pass to hold free message blocks (but freed to the memory cache at the end of
the pass), and an
.BR mdbblock
memory cache.
.PP
In consideration of priority,
.BR allocb ()
uses the following allocation differences based on the value of
.IR pri :
.TP \w'\ BPRI_WAITOK\ 'u
.B BPRI_LO
The mesasge block will be allocated from the
.I STREAMS
.BR mdbblock
memory cache.
.BR kmem_cache_alloc ()
will not be permitted to grow the
.BR mdbblock
memory cache to meet the request.  When speed is not critical and a lower probability of success is
acceptable, use
.BR BPRI_LO .
.TP
.B BPRI_MED
The message block will be allocated from the
.I STREAMS
.BR mdbblock
memory cache.
.BR kmem_cache_alloc ()
will be permitted to grow the
.BR mdbblock
memory cache as necessary to meet the request.  Where speed is not so critical, but a higher
probability of success is needed, use
.BR BPRI_MED .
.TP
.B BPRI_HI
The message block will be allocated from the per-CPU
.I STREAMS
scheduler fast free chain, or if there is no message block in the fast free chain, it will be
allocated from the
.BR mdbblock
memory cache.
.BR kmem_cache_alloc ()
will be permitted to grow the
.BR mdbblock
memory cache as necessary to meet the request.  Where speed is critical, and a high probability of
success is also needed, use
.BR BPRI_HI .
When
.BR allocb ()
is called immediately following
.BR freeb (9)
or
.BR freemsg (9),
.BR BPRI_HI
will often (always on UP, likely on MP) obtain the same block that was freed.
.TP
.B BPRI_WAITOK
The buffer allocation will be treated as
.BR BPRI_LO ,
but the caller will block waiting to obtain a buffer.  Where sleeping is acceptable, and a
guarantee of success is also needed, use
.BR BPRI_WAITOK .
.\".PP
.\"In this way, the
.\".I pri
.\"argument determines the delay in satisfying the request rather than the
.\"ultimate probability of success, permitting low latency tasks to specify
.\".BR BPRI_HI ,
.\"high-latency and blocking tasks to specify
.\".BR BPRI_LO " or " BPRI_WAITOK ,
.\"and somewhere in between to specify
.\".BR BPRI_MED .
.SS System Controls
.PP
In addition to memory exhaustion,
.BR allocb ()
will fail to allocate a combined message data block if the number of message
blocks allocated by
.I STREAMS
exceeds the system control 
.BR sys.streams.nstrmsgs .
.B sys.streams.nstrmsgs
defines the maximum number of combined message data blocks that will be 
allocated on a system-wide basis.  This is a run-time system control: see
.BR sysctl (2)
and
.BR sysctl (8).
.PP
Also,
.BR allocb ()
will fail to allocate a buffer if the number of bytes allocated by
.BR kmem_alloc "(9) or " kmem_zalloc (9)
exceeds the system control
.BR sys.streams.strthresh .
.B sys.streams.strthresh
defines the maximum amount of memory that will be allocated for use by the
.I STREAMS
subsystem via
.BR kmem_alloc "(9) or " kmem_zalloc (9),
or indirectly using
.BR allocb (),
or allocating other streams data structures.
.SS /proc Filesystem
.PP
The current number and high water mark since boot of allocated combined
message data blocks are present in the Strinfo array and can be viewed from
.BR /proc/streams/strinfo .
.\"
.\"
.SH "SEE ALSO"
.PP
.BR mblk_t (9),
.BR freeb (9),
.BR freemsg (9),
.BR bufcall (9).
.\"
.\"
.SH BUGS
.PP
.BR allocb ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR allocb ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
and systems based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IR AIX \(rg
.[
aixspg
.]
and
.IR HP-UX \(rg
.[
hpuxspg
.]
deny priority requests based on two system tunable thresholds in the number
of bytes of memory allocated for
.IR STREAMS :
a low fraction above which requests of priority
.B BPRI_LO
will be refused, a medium fraction above which requests of priority
.B BPRI_MED
will be refused, and \*(lqthewall\*(rq at which all requests are refused.
.IR MacOT \(rg,
.[
macspg
.]
.IR OSF/1 \(rg,
.[
osfspg
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg,
.[
suxspg
.]
.IR UnixWare \(rg,
.[
uw7spg
.]
.IR UXP/V \(rg
.[
uxpspg
.]
and
.I LiS
.[
lis
.]
only fail allocation when the system is out of memory.
.IR UnixWare \(rg
.[
uw7spg
.]
documentation
says that some implementations may fail based on priority,
.IR pri ,
but
.IR UnixWare \(rg
.[
uw7spg
.]
doesn't.
.IP ""
Portable
.I STREAMS
drivers and modules should not rely on any setting of priority, should always specify
.B BPRI_MED
in accordance with common practise, and should assume that the implementation ignores the
.I pri
argument.
.IP \(em
.IR OSF/1 \(rg
.[
osfspg
.]
introduced the
.B BPRI_WAITOK
priority level, which is provided also by
.BR allocb ()
for compatibility with
.IR OSF/1 \(rg.
.[
osfspg
.]
.B BPRI_WAITOK
is normally only used by stream heads and in the
.IR qi_qopen (9)
or
.IR qi_qclose (9)
procedure (which run in user context and may sleep).
.IP ""
Portable
.I STREAMS
drivers and modules will not use the
.BR BPRI_WAITOK
priority.
.IP \(em
.BR allocb ()
uses the priority mechanism described above under
.IR \*(lqNOTICES\*(rq .
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
permits implementations to decide how to use the priority argument.
.IR IRIX \(rg,
.[
irixdoc
.]
.IR MacOT \(rg,
.[
macspg
.]
.IR OSF/1 \(rg,
.[
osfspg
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg,
.[
suxspg
.]
.IR UnixWare \(rg,
.[
uw7spg
.]
.IR UXP/V \(rg
.[
uxpspg
.]
and
.I LiS
.[
lis
.]
ignore the
.I pri
argument as also described under
.IR \*(lqNOTICES\*(rq ,
above,
and only deny allocation when the system is out of memory.
.IR AIX \(rg,
.[
aixspg
.]
.IR HP-UX \(rg,
.[
hpuxspg
.]
uses thresholds and denies buffers on the basis of priority,
.IR pri .
.IP ""
Portable
.I STREAMS
drivers and modules should not rely on any setting of priority, should always specify
.B BPRI_MED
in accordance with common practise, and should assume that the implementation ignores the
.I pri
argument.
.IP \(em
.IR MacOT \(rg
.[
macspg
.]
uses type
.B int
for the
.I pri
argument instead of
.BR uint .
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for more compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.I "SVR 4.2 MP DDI/DKI"
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR allocb ()
appears as part of
.IR "SVR 4.0 STREAMS" .
.[
svr4spg
.]
.PP
.BR allocb ()
first appeared in 
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
