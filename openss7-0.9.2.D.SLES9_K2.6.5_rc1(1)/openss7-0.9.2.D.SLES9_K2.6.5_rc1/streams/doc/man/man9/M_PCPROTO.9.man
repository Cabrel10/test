'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) M_PCPROTO.9.man,v 0.9.2.10 2006/04/05 09:44:03 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:44:03 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" M_PCPROTO.9.man,v
.\" Revision 0.9.2.10  2006/04/05 09:44:03  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so streams.macros
.\"
.\"
.TH M_PCPROTO 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B M_PCPROTO
\- \fISTREAMS\fP priority protocol message
.\"
.\"
.SH FORMAT
.PP
The
.B M_PCPROTO
message block is a
.BR datab (9)
structure and associated data buffer that contains unstructured data.  (Any structure imposed on the
.B M_PCPROTO
data buffer is defined outside of
.IR STREAMS .)
.PP
An
.B M_PCPROTO
message is a high priority message that consists of one or more
.B M_PCPROTO
message blocks followed by zero or more
.BR M_DATA (9)
message blocks.
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.PP
The
.B M_PCPROTO
message is intended to contain high priority control information and associated data.  The message format is
one or more
.B M_PCPROTO
message blocks followed by zero or more
.BR M_DATA (9)
message blocks.
(Note that a user level process can only generate
.B M_PCROTO
messages containing a single
.B M_PCPROTO
message block followed by one or more
.BR M_DATA (9)
message blocks when using the
.BR putmsg (2)
or
.BR putpmsg (2s)
system calls.)
.PP
The semantics of the
.B M_PCPROTO
and
.BR M_DATA (9)
message blocks are determined by the
.I STREAMS
module that receives the message, and is normally defined as part of the service interface
description between modules.
.PP
For example, the
.IR "Transport Provider Interface" ,
.BR tpi (7),
describes the format of
.B M_PCPROTO
and
.BR M_DATA (9)
message blocks contained in
.B M_PCPROTO
messages that are passed to a driver or module implementing the
.BR tpi (7)
service interface.  The service interface exists between the user level process and the receiving
driver or module, or, between drivers and modules.
.PP
The
.B M_PCPROTO
message block will normally contain high priority service interface control information and the
.BR M_DATA (9)
message blocks will normally contain service interface user data.
.PP
.B M_PCPROTO
messages are generally sent in both the downstream and upstream directions on a Stream.
.B M_PCPROTO
messages sent upstream and arriving at the Stream head are available to be read by user level
processes using the
.BR read (2s),
.BR getmsg (2),
or
.BR getpmsg (2s)
system calls.
.B M_PCPROTO
messages can be sent downstream from the Stream head by a user level process using the
.BR putmsg (2),
or
.BR putpmsg (2s)
system calls.
(The
.BR write (2s)
cannot be used to generate
.B M_PCPROTO
messages.)
.PP
When describing
.IR STREAMS -specific
system calls, the contents of the
.B M_PCPROTO
message block is referred to as the
.IR "control part" ,
and any
.BR M_DATA (9)
message blocks contained in the message are referred to collectively as the
.IR "data part" .
For the
.BR getmsg (2),
.BR getpmsg (2s),
.BR putmsg (2),
and
.BR putpmsg (2s)
system calls, the control and data parts are passed separately.
For the
.BR read (2s)
system call, the control and data parts are optionally passed together, or the the control part is
discarded.
.PP
Although its use is not recommended, the format of
.B M_PCPROTO
and
.BR M_PROTO (9)
(generically
.IR PROTO )
messages sent upstream to the Stream head allows multiple
.I PROTO
blocks at the beginning of the message.
.BR getmsg (2),
.BR getpmsg (2s),
and
.BR read (2s),
will compact multiple
.I PROTO
blocks into a single control part,
multiple
.BR M_DATA (9)
blocks, as single data part,
when passing them to the user process.
The
.BR putmsg (2)
and
.BR putpmsg (2s)
system calls will never generate a
.B M_PCPROTO
message with more than one
.B M_PCPROTO
message block, but may generate
.B M_PCPROTO
messages that contain more than one
.BR M_DATA (9)
message block.
.PP
.B M_PCPROTO
messages, by nature of the initial block message type, are high-priority messages, and are,
therefore, not subject to flow control restrictions within a Stream.
In contrast, the
.BR M_PROTO (9)
message is a normal priority message serving the same purpose, that is subject to flow control
restrictions.
.PP
When an
.B M_PCPROTO
message is placed on a queue, that queue's
.IR qi_srvp (9)
procedure is always enabled.  The
Stream head
will allow only one
.B M_PCPROTO
message to be placed in its read queue at a time.  If an
.B M_PCPROTO
message is already in the queue when another arrives, the second message is silently discarded and
its message blocks freed.
.\"
.B M_PCPROTO
messages can be generated directly by user level processes using the
.BR putmsg (2)
and
.BR putpmsg (2s)
system calls.
.B M_PCPROTO
messages can be consumed by user level processes using the
.BR read (2s),
.BR getmsg (2),
and
.BR getpmsg (2s)
system calls.
.B M_PCPROTO
message can be generated by drivers and modules.
.\"
.\"
.SH USAGE
.PP
.BR M_PROTO (9)
and
.B M_PCPROTO
messages are the work horses of a service interface under
.IR STREAMS .
They are generated by both user level processes as well as drivers and modules.
These messages normally represent service primitives within a service interface definition at a
message passing boundary within a Stream.
The
.B M_PCPROTO
data buffer usually has a defined structure with an initial member that identifies the service
primitive, and additional members that provide the parameters associated with the service primitive.
The
.BR M_DATA (9)
data buffers that follow usually contain unstructured user data.
.PP
.\"
.\"
.SH EXAMPLES
.PP
For an example of the formulation of a
.B M_PCPROTO
message, see the examples for the
.BR M_PROTO (7)
message.  Aside from being a high-priority message,
.B M_PCPROTO
messages are used in an identical manner to
.BR M_PROTO (7)
messages.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR read (2s),
.BR write (2s),
.BR getmsg (2),
.BR putmsg (2),
.BR getpmsg (2s),
.BR putpmsg (2s),
.BR datab (9),
.BR msgb (9).
.\"
.\"
.SH COMPATIBILITY
.PP
The
.B M_PCPROTO
.I STREAMS
message is compatible with
.IR "SVR 4.2 MP STREAMS" ,
and implementations based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.B M_PCPROTO
is has the wrong message type value on older versions of
.IR LiS .
.[
lis
.]
.IP ""
Portable
.I STREAMS
drivers and modules will use
.B @PACKAGE_TITLE@
.[
lfs
.]
instead of
.IR LiS .
.[
lis
.]
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP STREAMS" .
.[
svr42spg
.]
.\"
.\"
.SH HISTORY
.PP
The
.B M_PCPROTO
message first appeared in
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
