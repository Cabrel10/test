'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) timeout.9.man,v 1.1.4.5 2006/04/05 09:42:45 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:42:45 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" timeout.9.man,v
.\" Revision 1.1.4.5  2006/04/05 09:42:45  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database lis.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so lis.macros
.\"
.\"
.TH TIMEOUT 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B timeout, lis_timeout, lis_timeout_fcn
\- start a timer
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.br
.B #include <sys/dki.h>
.HP 8
.BI "toid_t timeout(timo_fcn_t *" timo_fcn ", caddr_t " arg ", long " ticks );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I timo_fcn
the timeout function to call.
.TP
.I arg
the argument to pass to the timeout function.
.TP
.I ticks
the number of clock ticks to wait.
.\"
.\"
.SH DESCRIPTION
.PP
.BR timeout ()
starts a timer with duration
.I ticks
number of system clock ticks, that, upon expiry, will invoke the supplied
timeout function callback
.I timo_fcn
(if the
.I timo_fcn
function pointer is
.BR "" non- NULL )
with the supplied argument
.IR arg .
The timeout callback function
.I timo_fcn
is a function returning
.B void
and taking a single
.B caddr_t
argument as follows:
.sp
.nf
typedef void timo_fcn_t(caddr_t arg);
.fi
.PP
The callback function
.I timo_fcn
will be executed at some time greater than or equal to the interval specified
in the
.I ticks
argument.
.\"
.\"
.SH RETURN
.PP
.BR timeout ()
returns a
.B timo_t
defined as follows:
.sp
.nf
typedef int toid_t;
typedef int timeout_id_t;
.fi
.PP
Upon success,
.BR timeout ()
returns a non-zero timeout id and the timeout is scheduled.
.PP
Upon failure,
.BR timeout ()
returns a zero (0) timeout id and no timeout is scheduled.
.\"
.\"
.SH ERRORS
.PP
When
.BR timeout ()
fails, it returns a zero (0) timeout id.
.BR timeout ()
fails when it cannot allocate the internal structures for the timeout.
If it is important that a timeout be scheduled with assurance, the return value
should always be checked.
.\"
.\"
.SH CONTEXT
.PP
.BR timeout ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR timeout ()
is MP-safe.
.PP
Considerations should be given when writing the callback function that a
.BR timeout ()
callback function can execute at the same time as any queue
.BR qopen (9),
.BR qclose (9),
.BR put (9)
or
.BR srv (9)
procedure,
.BR bufcall (9)
or
.BR timeout (9)
callback
or interrupt service routine.
In addition, for a sufficiently small
.I tick
values, the callback function may execute before the call to
.BR timeout (9)
returns.
.\"
.\"
.SH NOTICES
.PP
.I LiS
.[
LiS
.]
provides a wrapper to Linux Kernel timer functions to implement
.BR timeout ().
.IR LiS 's
implementation
.[
LiS
.]
creates a Linux timer structure, assigns it a sequential
integer timer identifier, and places it in a timer list.
Whenever
.I LiS
.[
LiS
.]
starts a timer it checks the list to see if the integer timer identifier is
unique.  This is an exhaustive linear search.  This is inefficient.
.I STREAMS
modules or drivers that set timers often will experience poorer performance
than if the Linux kernel timer facility was used directly.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR untimeout (9).
.\"
.\"
.SH BUGS
.PP
.BR timeout ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR timeout ()
is source-level compatible with
.I "SVR 4.2 MP DDI/DKI"
and
.IR Solaris \(rg
with the following portability considerations:
.\"
.\"
.IP \(em \w'\(em\(em'u
.IR AIX \(rg
.[
aixdoc
.]
uses
.B int
return value of the
.BR timeout ()
utility.
Also,
.B timo_fnc_t
is not defined and the prototype for the timeout call out function is
.BR "void (*func)(void *arg)" .
.IP \(em
.IR UnixWare \(rg
.[
uw7doc
.]
panics when a timeout structure cannot be allocated, instead of returning
zero.
.IP \(em
Both
.IR AIX \(rg
.[
aixdoc
.]
and
.IR OSF/1 \(rg
.[
osfdoc
.]
have different prototypes for
.BR timeout (9)
and
.BR untimeout (9)
when used for
.I STREAMS
as when used for other drivers.  The prototypes for
.BR timeout (9)
and
.BR untimeout (9)
for use by
.I STREAMS
are the old
.I SVR 3
.[
svr3spg
.]
definitions which use an
.B int
for the
.BR toid_t .
.IP \(em
The
.IR Solaris \(rg
.[
soldoc
.]
prototype for this function is as follows:
.sp
.nf
.BI "timeout_id_t timeout(void (*" func ")(void *), void *" arg ", clock_t " ticks );
.fi
.sp
Where
.B timeout_id_t
is defined as equivalent to
.BR toid_t " and " int ,
and
.B clock_t
is
.BR long ,
this is compatible with other definitions.
.IP \(em
.I LiS
uses an
.B int
as a return value from
.BR lis_timeout ().
.\"
.\"
.IP \(em
.I LiS
provides a wrapper to Linux Kernel timer functions to implement
.BR timeout ().
.IR LiS 's
implementation creates a Linux timer structure, assigns it a sequential
integer timer identifier, and places it in a timer list.  Whenever
.I LiS
starts
a timer it checks the list to see if the integer timer identifier is unique.
This is an exhaustive linear search.  This is inefficient.
.I STREAMS
modules or drivers that set timers often will experience poorer performance
than if the Linux kernel timer facility was used directly.
.PP
For a fully functional and compatible
.I STREAMS
implementation, use
.BR "Linux Fast-STREAMS" .
.[
LfS
.]
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
.IR Solaris \(rg
documentation.
.\"
.\"
.SH HISTORY
.PP
.BR timeout ()
first appeared in
.IR "SVR 2" .
.[
svr2
.]
.\"
.\"
.[
$LIST$
.]
.TI
