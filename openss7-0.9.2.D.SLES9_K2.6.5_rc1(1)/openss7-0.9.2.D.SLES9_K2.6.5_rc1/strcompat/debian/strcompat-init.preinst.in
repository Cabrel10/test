#!/bin/sh
# @configure_input@
# =============================================================================
# 
# @(#) strcompat-init.preinst.in,v OpenSS7-0_9_2_D_rc2(0.9.2.1) 2005/07/04 19:28:28
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified 2005/07/04 19:28:28 by brian
#
# =============================================================================
@mscript_header@

#
# A little recursive function to delete all modules dependent on an initial module set (in our case
# "streams.o").  The function echos the list of modules to remove to stdout.
#
function remove_depmods() {
    local t
    [ $# -gt 0 ] || return 0
    echo "$*"
    for t in $@ ; do
	prereq=prereq_`echo $t | sed -r -e 's|^.*/||;s|\.(k)?o(\.gz)?(:)?$||;s|[^a-zA-Z0-9_]|_|g'`
	eval "remove_depmods \$$prereq"
    done
}

#
# This is an initial installation of the init subpackage.  We need to check for non-deb
# installations on the host and remove any entries that might later conflict with our entries.  We
# treat every fresh installation like an upgrade from non-deb install.
#
function install_init_preinst() { :
    #
    # When performing a fresh install we want to go looking for non-rpm installations of LiS or
    # STREAMS or supplementary packages and perform what would otherwise have been the prerm or
    # postrm actions.
    #
    for dir in /lib/modules/2.[456]\.* /lib/modules/preferred /lib/modules/default /lib/modules/boot ; do
	[ -d $dir ] || continue
	for m in `find $dir \( -name '*.o' -o -name '*.ko' -o -name '*.o.gz' -o -name '*.ko.gz' \) 2>/dev/null` ; do
	    b=`echo $m | sed -r -e 's|^.*/||;s|\.(k)?o(\.gz)? | |'`
	    case " $KERNEL_MODULES " in (*" $b "*) modl_mods="${modl_mods:+$modl_mods }$m" ;; (*) continue ;; esac
	done
	if [ -f $dir/modules.dep ] ; then
	    #
	    # First we can build a dependency tree from every dependency expression that can be
	    # found in each modules.dep file.
	    #
	    dep= ; while read line ; do
		case $line in
		    *\\) line="`echo $line | sed -e 's|\\$||'`"
			dep="${dep:+$dep }$line" ; continue ;;
		    *)  dep="${dep:+$dep }$line" ;;
		esac
		set dummy $dep
		if [ "${3+set}" = "set" ] ; then
		    t=`echo $2 | sed -e 's|:$||'`
		    target=target_`echo $t | sed -r -e 's|^.*/||;s|\.(k)?o(\.gz)?(:)?$||;s|[^a-zA-Z0-9_]|_|g'`
		    shift 2
		    for p in $@ ; do
			prereq=prereq_`echo $p | sed -r -e 's|^.*/||;s|\.(k)?o(\.gz)?(:)?$||;s|[^a-zA-Z0-9_]|_|g'`
			eval "$prereq=\"\${$prereq:+\$$prereq }$t\""
			eval "$target=\"\${$target:+\$$target }$p\""
		    done
		fi
		dep=
		continue
	    done < $dir/modules.dep
	fi
	conf_fil=$sysconfdir/modules.conf
	if [ -f $conf_fil ] ; then
	    conf_new=$tmppath/modules.conf.new.$$
	    conf_tmp=$tmppath/modules.conf.tmp.$$
	    cp -f -- $conf_fil $conf_new
	    #
	    # Unfortunately davem starting copying our install procedure, so we need to root out all
	    # kinds of things from the modules.conf file, all prune statements, any if include
	    # statements
	    #
	    for suffix in $name LiS lis streams STREAMS strxns strxnet strinet strsctp strss7 ; do
		#
		# This the old style /BEGIN LiS/,/END LiS/ enclosure in the modules.conf file.
		#
		if ( grep -q -- "BEGIN $suffix" $conf_new && grep -q -- "END $suffix" $conf_new ) 2>/dev/null ; then
		    sed -e '\|BEGIN '$suffix'|,\|END '$suffix'|d'            $conf_new > $conf_tmp
		    mv -f -- $conf_tmp $conf_new
		fi
		#
		# This is my newer technique with a prune and an if statement in the modules.conf
		# file that was also used by davem in LiS-2.18.0.
		#
		if [ -f $dir/modules.$suffix ] ; then
		    rm -f -- $dir/modules.$suffix
		    sed -e '\|^prune[[:space:]].*modules.'$suffix'|d'        $conf_new > $conf_tmp
		    sed -e '\|^if[[:space:]].*modules.'$suffix'|,\|^endif|d' $conf_tmp > $conf_new
		    sed -e '\|^include[[:space:]].*modules.'$suffix'|d'      $conf_new > $conf_tmp
		    mv -f -- $conf_tmp $conf_new
		fi
	    done
	    for suffix in $name LiS lis streams STREAMS strxns strxnet strinet strsctp strss7 ; do
		#
		# This is my newer latest technique with only an include statement in modules.conf
		# and a modules.conf fragment in the debian update-modules directory _modutildir
		# that includes the prune and if statements.  That works both for RH-style and
		# Debian-style modules.conf.
		#
		if [ -f $modutildir/$suffix ] ; then
		    rm -f -- $modutildir/$suffix
		    sed -e '\|^include[[:space:]].*'"$modutildir"'/'$suffix'|d' $conf_new > $conf_tmp
		    mv -f -- $conf_tmp $conf_new
		fi
	    done
	    chmod --reference=$conf_fil -- $conf_new
	    cp -f -b --suffix=.rpmsave -- $conf_new $conf_fil
	    rm -f -- $conf_new
	fi
    done
    prel_fil="@preload@"
    if [ -f $prel_fil ] ; then
	prel_tmp=$tmppath/modprobe.preload.tmp.$$
	prel_new=$tmppath/modprobe.preload.new.$$
	cp -f -- $prel_fil $prel_new
	sed -e '\|^[[:space:]]*streams|d' $prel_new > $prel_tmp
	mv -f -- $prel_tmp $prel_new
	chmod --reference=$prel_fil -- $prel_new
	cp -f -b --suffix=.rpmsave -- $prel_new $prel_fil
	rm -f -- $prel_new
    fi
    #
    # Fresh install, go looking for non-rpm initscripts and remove them.
    #
    if [ -x /sbin/chkconfig ] ; then
	for i in specfs streams strerr strace strms_up strms_dn ; do
	    if [ -f $initrddir/$i ] ; then
		/sbin/chkconfig --del $i || :
	    fi
	done
    fi
    #
    # Finally remove all conflicting modules and their dependents
    #
    if [ -n "$modl_mods" ] ; then
	rm -f -- $modl_mods
	for m in $KERNEL_MODULES ; do
	    prereq=prereq_`echo $m | sed -r -e 's|^.*/||;s|\.(k)?o(\.gz)?(:)?$||;s|[^a-zA-Z0-9_]|_|g'`
	    eval "modl_deps=\"\`remove_depmods \$$prereq\`\""
	    [ -n "$modl_deps" ] || continue
	    rm -f -- $modl_deps
	done
    fi
}

#
# This is our chance to check that an old-prerm upgrade scriplet did at least somewhat what it was
# supposed to do.  This is not as extensive as the non-deb install since we do not have to check
# that package files are removed and we don't have to check for things from non-deb versions.
#
function upgrade_init_preinst() { :
    #
    # Nothing to do really.
    #
}

subpkg=init

@mscript_preinst@

# =============================================================================
#
# strcompat-init.preinst.in,v
# Revision 0.9.2.1  2005/07/04 19:28:28  brian
# - first cut at streams compatibility package
#
# Revision 0.9.2.3  2005/05/14 08:26:03  brian
# - copyright header correction
#
# Revision 0.9.2.2  2005/04/09 09:33:30  brian
# - updated debian scriptlets
#
# Revision 0.9.2.1  2005/03/26 22:21:33  brian
# - working up debian maint scripts
#
# Revision 0.9.2.1  2005/03/26 03:11:24  brian
# - Reworking maintainance scripts
#
# Revision 0.9.2.1  2005/03/24 01:38:17  brian
# - better debian build
#
#
# =============================================================================
# vim: ft=sh sw=4 noet
