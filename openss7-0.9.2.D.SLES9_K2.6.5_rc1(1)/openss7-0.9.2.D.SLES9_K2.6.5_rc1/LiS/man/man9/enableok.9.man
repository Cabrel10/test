'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) enableok.9.man,v 1.1.4.5 2006/04/05 09:42:43 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:42:43 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" enableok.9.man,v
.\" Revision 1.1.4.5  2006/04/05 09:42:43  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database lis.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so lis.macros
.\"
.\"
.TH ENABLEOK 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B enableok, lis_enableok
\- allows a \fISTREAMS\fR message queue to be scheduled
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP 8
.BI "void enableok(queue_t *" q );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I q
the queue to permit to be enabled.
.\"
.\"
.SH DESCRIPTION
.PP
.BR enableok ()
clears the
.B QNOENB
flag on the specified
.IR q .
This tells the
.I STREAMS
executive that the
.I q
can be scheduled for
.BR runqueues ().
.PP
.BR enableok ()
is typically used to re-enable a queue after it has been disabled with
.BR noenable (9).
.PP
If
.BR enableok ()
has been called for a
.IR q ,
and
.BR noenable (9)
has not subsequently been called for the same
.IR q ,
a second call to
.BR enableok ()
will have no effect.
.\"
.\"
.SH USAGE
.PP
.BR enableok ()
can be used in conjunction with
.BR noenable (9)
to temporarily suspend queue service procedure processing for a queue for
normal priority messages.
.BR noenable (9)
permits data messages to be enqueued without invoking the queue's service
procedure.  A call to
.BR enableok ()
will then reverse the situation and restore normal queue scheduling.
.\"
.\"
.SH RETURN
.PP
.BR enableok ()
returns void.
.\"
.\"
.SH ERRORS
.PP
If the
.I q
passed to
.BR enableok ()
is
.B NULL
or does not point to a queue structure,
then
.BR enableok ()
will silently fail.
.\"
.\"
.SH CONTEXT
.PP
.BR enableok ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR enableok ()
is MP-safe.
.BR enableok ()
uses atomic bit operations and can be called on a queue that is frozen
with
.BR freezestr (9).
No global locks need to be held across the call to
.BR enableok ()
and 
.BR enableok ()
takes no locks.
.PP
If one thread enables a queue with
.BR enableok ()
and another disables the queue with
.BR noenable (9),
there will be a race condition on the
.B QNOENAB
flag.
.\"
.\"
.SH NOTICES
.PP
.BR enableok ()
does not add the
.I q
to the current
.BR runqueues ()
schedule list.  It only clears the
.B QNOENB
flag to indicate whether the queue should be subsequently scheduled.
To add a
.I q
to the current run list, use
.BR qenable (9).
.\"
.\"
.SH EXAMPLE
.PP
.BR enableok (9)
can be used to re-enable a queue after a call to
.BR noenable (9).
The following
.BR qrestart ()
function will restart a disabled queue:
.sp
.nf
\fC\s-2\
void qrestart(queue_t *q)
{
	enableok(q);
	if (q->q_first)
		qenable(q);
}
\s+2\fP
.fi
.PP
Note that
.BR enableok ()
does not place the queue on the
.BR runqueues ()
list.  It takes
.BR qenable (9)
to do that.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR noenable (9),
.BR canenable (9),
and
.BR qenable (9).
.\"
.\"
.SH BUGS
.PP
.BR enableok ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR enableok ()
is source-level compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and systems based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR enableok ()
uses atomic bit operations and does not take the queue write lock.
This makes
.BR enableok ()
safe to call while the queue is locked (e.g. while the queue is frozen
with
.BR freezestr (9)).
Under
.IR LiS ,
.BR enableok ()
takes the queue spin lock and uses normal bit operations to set the flag.
.IP \(em
.BR enableok ()
may be called on a stream frozen with
.BR freezestr (9).
.IR "SVR 4.2MP DDI/DKI" ,
.[
usldk
.]
.IR SUPER-UX \(rg
.[
suxspg
.]
and
.IR UnixWare \(rg
.[
uw7spg
.]
do not permit
.BR enableok ()
to be called on a stream frozen with
.BR freezestr (9).
.IR Solaris \(rg
.[
solspg
.]
permits
.BR enableok ()
to be called on a stream frozen with
.BR freezestr (9).
Portable
.I STREAMS
drivers and modules should not invoke
.BR enableok ()
on a stream that has previously been frozen with
.BR freezestr (9).
.IP \(em
.BR enableok ()
called with an invalid
.I q
argument will have an undefined result.
In referenced versions of
.I LiS
.[
LiS
.]
the result is undefined in the same situations due to an
.I LiS
coding error.  Repaired versions of
.I LiS
will make
.BR enableok ()
fail silently in these situations.
Portable
.I STREAMS
drivers and modules should never invoke
.BR enableok ()
with an invalid
.I q
argument.
.PP
For a fully functional
.I STREAMS
implementation, use
.BR "Linux Fast-STREAMS" .
.[
LfS
.]
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR enableok ()
first appeared in
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
