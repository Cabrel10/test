'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) bcanput.9.man,v 1.1.4.5 2006/04/05 09:42:43 brian Exp
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified 2006/04/05 09:42:43 by brian
.\"
.\" -------------------------------------------------------------------------
.\"
.\" bcanput.9.man,v
.\" Revision 1.1.4.5  2006/04/05 09:42:43  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database lis.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so lis.macros
.\"
.\"
.TH BCANPUT 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B bcanput, lis_bcanput
\- test flow control on a \fISTREAMS\fR message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP 8
.BI "int bcanput(queue_t *" q ", unsigned char " band );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I q
the queue to test for flow control.
.TP
.I band
the queue band within the queue to test for flow control.
.\"
.\"
.SH DESCRIPTION
.PP
It is the responsibility of a
.I STREAMS
module puting a banded non-priority
message to a subsequent message queue to check for flow control using
.BR bcanput ()
for the band associated with the message before placing a message on the queue
with
.BR putq (9).
.PP
.BR bcanput ()
checks whether the stream is flow controlled starting at the specified queue,
.IR q ,
and for the specified 
.IR band .
Starting at the
.I q
specified and for the
.I band
specified,
.BR bcanput ()
looks for the next forward queue which has a service routine or which has no
further forward queue.
.PP
If this forward queue has the
.B QB_FULL
flag clear indicating that it is not full for the specified
.IR band ,
.BR bcanput ()
will return true (1).
.PP
If this forward queue has the
.B QB_FULL
flag set indicating that it is full for the specified
.IR band ,
.BR bcanput ()
will return false (0).
.PP
When
.BR bcanput ()
returns false (0), it also sets the
.B QB_WANTW
flag for the specified
.IR band ,
indicating that the
.I STREAMS
executive should backenable service
procedures backwards up the queues when the flow controlled
.I band
is no longer full.
.\"
.\"
.SH RETURN
.PP
.BR bcanput ()
will return false (0) when the specified
.I STREAMS
message queue is flow
controlled for the specified band, and return true (1) when the specified
.I STREAMS
message queue is not flow controlled for the specified band.
.\"
.\"
.SH ERRORS
.PP
.BR bcanput ()
always succeeds.
.\"
.\"
.SH CONTEXT
.PP
.BR bcanput ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR bcanput ()
is MP-safe; unless the caller performs an unprotected pointer dereference.
That is,
.BR bcanputnext (9)
should always be called in preference to
.BI bcanput( q->q_next ).
.\"
.\"
.SH NOTICES
.PP
In the
.I LiS
.[
LiS
.]
implementation, if
.BR bcanput ()
suffers an internal error, it will return false (0).
This is problematic because the calling queue will never be backenabled.
.PP
.I LiS
.[
LiS
.]
implements
\fB\)canput(\fI\)q\fB\))\fR\),
\fB\)canputnext(\fI\)q\fB\))\fR\) and
\fB\)bcanputnext(\fI\)q\fB\), \fI\)band\fB\))\fR\)
with macros that call
\fB\)bcanput(\fI\)q\fB\), \fI\)band\fB\))\fR\).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR putq (9),
.BR canput (9),
.BR canputnext (9),
.BR bcanputnext (9),
.BR freezestr (9),
.BR noenable "(9), and "
.BR enableok (9).
.\"
.\"
.SH BUGS
If
.BR bcanput ()
suffers an internal error, it will return false (0), and the calling queue will
not be backenabled.
There are likely more bugs in the
.I LiS
implementation of this function.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR bcanput ()
is source-level compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and systems based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IR AIX \(rg
.[
aixdoc
.]
indicates that if a
.BR qband (9)
structure does not exist for
.I band
that
.BR bcanput ()
returns true (1).
.IP \(em
.IR HP-UX \(rg
.[
hpuxspg
.]
lists
.BR bcanput ()
as a function that can only be passed a queue pointer in the queue pair within
a queue's procedure.
.IP \(em
.IR SUPER-UX \(rg
.[
suxdoc
.]
indicates that the stream cannot be frozen when calling
.BR bcanput (9)
and that private locks cannot be held across the call.
.IP \(em
.BR bcanput ()
should always succeeds.  Under
.IR LiS ,
.BR bcabput ()
will return zero (0 - flow controlled) if an internal error occurs, without
setting the
.BR QWANTW " or " QB_WANTW
flag for the queue or band.  This means that, although flow controlled, no
backenable procedure will be run.  This can lead to indefinite postponement of
a queue service procedure under
.IR LiS .
.IP \(em
.BR bcanput ()
may be called on a stream frozen with
.BR freezestr (9).
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg
.[
suxspg
.]
and
.IR UnixWare \(rg
.[
uw7spg
.]
do not permit
.BR bcanput ()
to be called on a stream frozen with
.BR freezestr (9).
Portable
.I STREAMS
drivers and modules should not call
.BR bcanput ()
on a stream frozen with
.BR freezestr (9).
.PP
For a fully functional and compatible
.I STREAMS
implementation, use
.BR "Linux Fast-STREAMS" .
.[
LfS
.]
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR bcanput ()
first appeared in
.IR "SVR 4.0 DDI/DKI" .
.[
svr4dk
.]
.\"
.\"
.[
$LIST$
.]
.TI
