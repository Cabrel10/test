#!/bin/sh
# @configure_input@
# =============================================================================
# 
# @(#) streams-core.preinst.in,v OpenSS7-0_9_2_D_rc2(0.9.2.2) 2005/03/26 03:11:24
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified 2005/03/26 03:11:24 by brian
#
# =============================================================================
@mscript_header@

#
# Unfortunately recent non-autoconf/dpkg releases of LiS have chosen to install their kernel modules
# in locations mimicing our releases, so this pre-installation scriptlet goes and finds any
# offending modules (modules with the same name as ours) and simply removes them.
#
function install_core_preinst() {
    for dir in '/' '/../preferred' '/../default' '/../boot' ; do
	eval "d=\"$kmoduledir$dir\""
	test -d $d || continue
	for m in `find $d \( -name 'streams*.o' -o -name 'streams*.ko' -o -name 'streams*.o.gz' -o -name 'streams*.ko.gz' \) 2>/dev/null` ; do
	    b=`echo $m | sed -r -e 's|^.*/||;s|\.(k)?o(\.gz)?$||'`
	    case " $KERNEL_MODULES " in (*" $b "*) rm -f -- $m ;; esac
	done
    done
    return 0
}

#
# This is our chance to check that an old-prerm upgrade scriplet did at least somewhat what it was
# supposed to do.  This is not as extensive as the non-deb install since we do not have to check
# that package files are removed and we don't have to check for things from non-deb versions.
#
function upgrade_core_preinst() {
    if [ ":$kversion" = ":`uname -r`" ] ; then
	#
	# If we are upgrading and the upgrade is for the running kernel, or we are installing new on
	# the running kernel, we have to worry about previous loaded modules for the old version or
	# a non-deb version kicking around.  This scriplet kills any streams modules that are loaded
	# and running.
	#
	for m in $KERNEL_MODULES
	do
	    if ( /sbin/lsmod | grep -q "^$m" ) ; then
		#
		# Module running, kick the stack.
		#
		/sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
		if ( /sbin/lsmod | grep -q "^$m" ) ; then
		    fdetach -a 2>/dev/null
		    /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
		    if ( /sbin/lsmod | grep -q "^$m" ) ; then
			/usr/sbin/lsof | while read -a tokens; do
			    if [ :"$tokens[4]" = :"CHR" ]; then
				major=`echo "$tokens[5]" | sed -e 's|,.*||'`
				if [ $major -eq $STRCONF_MAJBASE ]; then
				    eval "kill -HUP $tokens[1]"
				fi
			    fi
			done
			/sbin/sleep 5 # wait for processes to die and close streams
			/sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
			if ( /sbin/lsmod | grep -q "^$m" ) ; then
			    echo "Cannot install or upgrade with $m module running." >&2
			    return 1
			fi
		    fi
		fi
	    fi
	done
    fi
    return 0
}

##
## Again, unfortunately, recent non-autoconf/dpkg releases of LiS have chosen to install their
## modconf files in a similar fashion to ours and in a similar location.  It even uses the prune
## modules line that we normally use, however, on Debian their modules.conf edits will be lost
## because the modules.conf file is generated from the modules/conf.d directory.
##
#function preinst_modconf() {
#    for ext in LiS lis STREAMS streams ; do
#	eval "d=\"$kmoduledir\""
#	test -f $d/modules.$ext || continue
#	rm -f -- $d/modules.$ext
#    done
#}

subpkg=core

@mscript_preinst@

# =============================================================================
#
# streams-core.preinst.in,v
# Revision 0.9.2.2  2005/03/26 03:11:24  brian
# - Reworking maintainance scripts
#
# Revision 0.9.2.1  2005/03/24 02:09:14  brian
# - improved debian build
#
#
# =============================================================================
# vim: ft=sh sw=4 noet
