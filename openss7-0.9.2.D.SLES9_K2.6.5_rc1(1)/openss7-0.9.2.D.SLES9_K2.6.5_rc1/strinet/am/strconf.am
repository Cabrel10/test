## vim: ft=automake comments=b\:#,b\:##,b\:#\! formatoptions+=tcqlor
## =============================================================================
## 
# @(#) strconf.am,v OpenSS7-0_9_2_D_rc2(0.9.2.31) 2006/05/08 03:07:25
##
## -----------------------------------------------------------------------------
##
## Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
## Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
##
## All Rights Reserved.
##
## This program is free software; you can redistribute it and/or modify it under
## the terms of the GNU General Public License as published by the Free Software
## Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
## details.
##
## You should have received a copy of the GNU General Public License along with
## this program; if not, write to the Free Software Foundation, Inc., 675 Mass
## Ave, Cambridge, MA 02139, USA.
##
## -----------------------------------------------------------------------------
##
## U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
## behalf of the U.S. Government ("Government"), the following provisions apply
## to you.  If the Software is supplied by the Department of Defense ("DoD"), it
## is classified as "Commercial Computer Software" under paragraph 252.227-7014
## of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
## successor regulations) and the Government is acquiring only the license rights
## granted herein (the license rights customarily provided to non-Government
## users).  If the Software is supplied to any unit or agency of the Government
## other than DoD, it is classified as "Restricted Computer Software" and the
## Government's rights in the Software are defined in paragraph 52.227-19 of the
## Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
## the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
## (or any successor regulations).
##
## -----------------------------------------------------------------------------
##
## Commercial licensing and support of this software is available from OpenSS7
## Corporation at a fee.  See http://www.openss7.com/
##
## -----------------------------------------------------------------------------
##
## Last Modified 2006/05/08 03:07:25 by brian
##
## -----------------------------------------------------------------------------
##
## strconf.am,v
## Revision 0.9.2.31  2006/05/08 03:07:25  brian
## - added module id base to strconf
##
## Revision 0.9.2.30  2006/03/10 02:57:36  brian
## - updating configuration script and process
##
## Revision 0.9.2.29  2006/03/09 07:47:26  brian
## - suppress rebuilds on pkg file or directories
##
## Revision 0.9.2.28  2006/03/09 01:16:31  brian
## - working up packaging
##
## Revision 0.9.2.27  2006/03/08 23:29:45  brian
## - working in package directory
##
## Revision 0.9.2.26  2006/03/06 11:35:14  brian
## - updated headers
##
## =============================================================================

if PKG_BUILD_ARCH
## PKG_BUILD_ARCH
if RPM_BUILD_KERNEL
## RPM_BUILD_KERNEL

$(STRCONF_INPUT): $(CONFIG_CLEAN_FILES) $(STRCONF_CONFIGS)
	$(SHELL) ./config.status strconf

$(STRCONF_CONFIG): $(STRCONF_INPUT) $(STRCONF_SCRIPT)
	$(STRCONF) --hconfig=$(STRCONF_CONFIG) --package=$(STRCONF_PACKAGE) -b$(STRCONF_MAJBASE) -i$(STRCONF_MIDBASE) $(STRCONF_INPUT)

$(STRCONF_MODCONF): $(STRCONF_INPUT) $(STRCONF_SCRIPT)
	$(STRCONF) --modconf=$(STRCONF_MODCONF) --package=$(STRCONF_PACKAGE) -b$(STRCONF_MAJBASE) -i$(STRCONF_MIDBASE) $(STRCONF_INPUT)

$(STRCONF_MKNODES): $(STRCONF_INPUT) $(STRCONF_SCRIPT)
	$(STRCONF) --makenodes=$(STRCONF_MKNODES) --package=$(STRCONF_PACKAGE) -b$(STRCONF_MAJBASE) -i$(STRCONF_MIDBASE) $(STRCONF_INPUT)

$(STRCONF_DRVCONF): $(STRCONF_INPUT) $(STRCONF_SCRIPT)
	$(STRCONF) --driverconf=$(STRCONF_DRVCONF) --package=$(STRCONF_PACKAGE) -b$(STRCONF_MAJBASE) -i$(STRCONF_MIDBASE) $(STRCONF_INPUT)

$(STRCONF_CONFMOD): $(STRCONF_INPUT) $(STRCONF_SCRIPT)
	$(STRCONF) --confmodules=$(STRCONF_CONFMOD) --package=$(STRCONF_PACKAGE) -b$(STRCONF_MAJBASE) -i$(STRCONF_MIDBASE) $(STRCONF_INPUT)

$(STRCONF_MAKEDEV): $(STRCONF_INPUT) $(STRCONF_SCRIPT)
	$(STRCONF) --strmknods=$(STRCONF_MAKEDEV) --package=$(STRCONF_PACKAGE) -b$(STRCONF_MAJBASE) -i$(STRCONF_MIDBASE) $(STRCONF_INPUT)

$(STRCONF_STSETUP): $(STRCONF_INPUT) $(STRCONF_SCRIPT)
	$(STRCONF) --strsetup=$(STRCONF_STSETUP) --package=$(STRCONF_PACKAGE) -b$(STRCONF_MAJBASE) -i$(STRCONF_MIDBASE) $(STRCONF_INPUT)

$(STRCONF_STRLOAD): $(STRCONF_INPUT) $(STRCONF_SCRIPT)
	$(STRCONF) --strload=$(STRCONF_STRLOAD) --package=$(STRCONF_PACKAGE) -b$(STRCONF_MAJBASE) -i$(STRCONF_MIDBASE) $(STRCONF_INPUT)

ALL_LOCAL += \
	$(STRCONF_INPUT) \
	$(STRCONF_CONFIG) \
	$(STRCONF_MODCONF) \
	$(STRCONF_MKNODES) \
	$(STRCONF_DRVCONF) \
	$(STRCONF_CONFMOD) \
	$(STRCONF_MAKEDEV) \
	$(STRCONF_STSETUP) \
	$(STRCONF_STRLOAD)

clean-strconf:
	@$(ECHO) "Making $@ in `pwd`"

distclean-strconf:
	@$(ECHO) "Making $@ in `pwd`"
	rm -f -- $(STRCONF_INPUT)
	rm -f -- $(STRCONF_CONFIG)
	rm -f -- $(STRCONF_MODCONF)
	rm -f -- $(STRCONF_MKNODES)
	rm -f -- $(STRCONF_DRVCONF)
	rm -f -- $(STRCONF_CONFMOD)
	rm -f -- $(STRCONF_MAKEDEV)
	rm -f -- $(STRCONF_STSETUP)
	rm -f -- $(STRCONF_STRLOAD)

maintainer-clean-strconf:
	@$(ECHO) "Making $@ in `pwd`"

CLEAN_LOCAL		+= clean-strconf
DISTCLEAN_LOCAL		+= distclean-strconf
MAINTAINER_CLEAN_LOCAL	+= maintainer-clean-strconf
dist_noinst_SCRIPTS	+= $(STRCONF_SCRIPT)
EXTRA_SCRIPTS		+= scripts/strconf-sh

## Invoke creation of any installed devices if the installation directory is configured.
#
#install-devices: $(STRMAKENODES)
#	@if test -r $(DESTDIR)$(rootdir)/etc/modules.conf ; then \
#		$(ECHO) './$(STRMAKENODES)' ; \
#		./$(STRMAKENODES) ; \
#	fi
#
## Invoke removal of any installed devices if the installation directory is configured.
#
#uninstall-devices: $(STRMAKENODES)
#	@if test -r $(DESTDIR)$(rootdir)/etc/modules.conf ; then \
#		$(ECHO) './$(STRMAKENODES) --remove' ; \
#		./$(STRMAKENODES) --remove ; \
#	fi
#
#INSTALL_EXEC_HOOK	+= install-devices
#UNINSTALL_HOOK		+= uninstall-devices
#

##
# Check for conflicts for driver device nodes.
##
if PERFORM_CHECKS
## PERFORM_CHECKS
dist_check_SCRIPTS	+= $(top_srcdir)/scripts/check_streams
TESTS_ENVIRONMENT	+= STRCONF_CONFIG='$(STRCONF_CONFIG)' \
			   STRCONF_MODCONF='$(STRCONF_MODCONF)' \
			   STRCONF_MKNODES='$(STRCONF_MKNODES)' \
			   STRCONF_DRVCONF='$(STRCONF_DRVCONF)' \
			   STRCONF_CONFMOD='$(STRCONF_CONFMOD)' \
			   STRCONF_MAKEDEV='$(STRCONF_MAKEDEV)' \
			   STRCONF_STSETUP='$(STRCONF_STSETUP)' \
			   STRCONF_STRLOAD='$(STRCONF_STRLOAD)' \
			   STRCONF_BPKGDIR='$(STRCONF_BPKGDIR)' \
			   PKG_MANPATH='$(PKG_MANPATH)' \
			   mandir='$(mandir)'
CLEANFILES		+= check_streams.log
DISTCLEANFILES		+= *.err *.out
## PERFORM_CHECKS
endif

## RPM_BUILD_KERNEL
endif
## PKG_BUILD_ARCH
endif

EXTRA_DIST		+= $(STRCONF_CONFIGS)

## vim: ft=automake comments=b\:#,b\:##,b\:#\! formatoptions+=tcqlor
